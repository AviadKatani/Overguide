# ACW for Overguide.Android
# ACW for ExoPlayer.Core
-keep class com.google.android.exoplayer2.BaseRenderer
-keepclassmembers class com.google.android.exoplayer2.BaseRenderer {
   <init>(...);
   *** getCapabilities(...);
   *** getConfiguration(...);
   *** hasReadStreamToEnd(...);
   *** getIndex(...);
   *** isCurrentStreamFinal(...);
   *** isSourceReady(...);
   *** getMediaClock(...);
   *** getState(...);
   *** getStream(...);
   *** getTrackType(...);
   *** disable(...);
   *** enable(...);
   *** getStreamFormats(...);
   *** handleMessage(...);
   *** maybeThrowStreamError(...);
   *** onDisabled(...);
   *** onEnabled(...);
   *** onPositionReset(...);
   *** onStarted(...);
   *** onStopped(...);
   *** onStreamChanged(...);
   *** readSource(...);
   *** replaceStream(...);
   *** resetPosition(...);
   *** setCurrentStreamFinal(...);
   *** setIndex(...);
   *** skipSource(...);
   *** start(...);
   *** stop(...);
   *** supportsFormatDrm(...);
   *** supportsMixedMimeTypeAdaptation(...);
   *** render(...);
   *** isEnded(...);
   *** isReady(...);
   *** supportsFormat(...);
}

-keep class com.google.android.exoplayer2.BaseRenderer
-keepclassmembers class com.google.android.exoplayer2.BaseRenderer {
   *** isEnded(...);
   *** isReady(...);
   *** render(...);
   *** supportsFormat(...);
}

-keep class com.google.android.exoplayer2.C$AudioContentType
-keepclassmembers class com.google.android.exoplayer2.C$AudioContentType {
}

-keep class com.google.android.exoplayer2.C$AudioFlags
-keepclassmembers class com.google.android.exoplayer2.C$AudioFlags {
}

-keep class com.google.android.exoplayer2.C$AudioUsage
-keepclassmembers class com.google.android.exoplayer2.C$AudioUsage {
}

-keep class com.google.android.exoplayer2.C$BufferFlags
-keepclassmembers class com.google.android.exoplayer2.C$BufferFlags {
}

-keep class com.google.android.exoplayer2.C$ColorRange
-keepclassmembers class com.google.android.exoplayer2.C$ColorRange {
}

-keep class com.google.android.exoplayer2.C$ColorSpace
-keepclassmembers class com.google.android.exoplayer2.C$ColorSpace {
}

-keep class com.google.android.exoplayer2.C$ColorTransfer
-keepclassmembers class com.google.android.exoplayer2.C$ColorTransfer {
}

-keep class com.google.android.exoplayer2.C$ContentType
-keepclassmembers class com.google.android.exoplayer2.C$ContentType {
}

-keep class com.google.android.exoplayer2.C$CryptoMode
-keepclassmembers class com.google.android.exoplayer2.C$CryptoMode {
}

-keep class com.google.android.exoplayer2.C$Encoding
-keepclassmembers class com.google.android.exoplayer2.C$Encoding {
}

-keep class com.google.android.exoplayer2.C$PcmEncoding
-keepclassmembers class com.google.android.exoplayer2.C$PcmEncoding {
}

-keep class com.google.android.exoplayer2.C$SelectionFlags
-keepclassmembers class com.google.android.exoplayer2.C$SelectionFlags {
}

-keep class com.google.android.exoplayer2.C$StereoMode
-keepclassmembers class com.google.android.exoplayer2.C$StereoMode {
}

-keep class com.google.android.exoplayer2.C$StreamType
-keepclassmembers class com.google.android.exoplayer2.C$StreamType {
}

-keep class com.google.android.exoplayer2.C$VideoScalingMode
-keepclassmembers class com.google.android.exoplayer2.C$VideoScalingMode {
}

-keep class com.google.android.exoplayer2.C
-keepclassmembers class com.google.android.exoplayer2.C {
   *** generateAudioSessionIdV21(...);
   *** msToUs(...);
   *** usToMs(...);
}

-keep class com.google.android.exoplayer2.DefaultControlDispatcher
-keepclassmembers class com.google.android.exoplayer2.DefaultControlDispatcher {
   <init>(...);
   *** dispatchSeekTo(...);
   *** dispatchSetPlayWhenReady(...);
   *** dispatchSetRepeatMode(...);
   *** dispatchSetShuffleModeEnabled(...);
   *** dispatchStop(...);
}

-keep class com.google.android.exoplayer2.DefaultLoadControl$Builder
-keepclassmembers class com.google.android.exoplayer2.DefaultLoadControl$Builder {
   <init>(...);
   *** createDefaultLoadControl(...);
   *** setAllocator(...);
   *** setBufferDurationsMs(...);
   *** setPrioritizeTimeOverSizeThresholds(...);
   *** setPriorityTaskManager(...);
   *** setTargetBufferBytes(...);
}

-keep class com.google.android.exoplayer2.DefaultLoadControl
-keepclassmembers class com.google.android.exoplayer2.DefaultLoadControl {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAllocator(...);
   *** getBackBufferDurationUs(...);
   *** calculateTargetBufferSize(...);
   *** onPrepared(...);
   *** onReleased(...);
   *** onStopped(...);
   *** onTracksSelected(...);
   *** retainBackBufferFromKeyframe(...);
   *** shouldContinueLoading(...);
   *** shouldStartPlayback(...);
}

-keep class com.google.android.exoplayer2.DefaultRenderersFactory$ExtensionRendererMode
-keepclassmembers class com.google.android.exoplayer2.DefaultRenderersFactory$ExtensionRendererMode {
}

-keep class com.google.android.exoplayer2.DefaultRenderersFactory
-keepclassmembers class com.google.android.exoplayer2.DefaultRenderersFactory {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** buildAudioProcessors(...);
   *** buildAudioRenderers(...);
   *** buildMetadataRenderers(...);
   *** buildMiscellaneousRenderers(...);
   *** buildTextRenderers(...);
   *** buildVideoRenderers(...);
   *** createRenderers(...);
}

-keep class com.google.android.exoplayer2.ExoPlaybackException$Type
-keepclassmembers class com.google.android.exoplayer2.ExoPlaybackException$Type {
}

-keep class com.google.android.exoplayer2.ExoPlaybackException
-keepclassmembers class com.google.android.exoplayer2.ExoPlaybackException {
   *** getRendererException(...);
   *** getSourceException(...);
   *** getUnexpectedException(...);
   *** createForRenderer(...);
   *** createForSource(...);
}

-keep class com.google.android.exoplayer2.ExoPlayerFactory
-keepclassmembers class com.google.android.exoplayer2.ExoPlayerFactory {
   *** newInstance(...);
   *** newInstance(...);
   *** newSimpleInstance(...);
   *** newSimpleInstance(...);
   *** newSimpleInstance(...);
   *** newSimpleInstance(...);
   *** newSimpleInstance(...);
   *** newSimpleInstance(...);
   *** newSimpleInstance(...);
   *** newSimpleInstance(...);
   *** newSimpleInstance(...);
}

-keep class com.google.android.exoplayer2.ExoPlayerLibraryInfo
-keepclassmembers class com.google.android.exoplayer2.ExoPlayerLibraryInfo {
   *** registerModule(...);
   *** registeredModules(...);
}

-keep class com.google.android.exoplayer2.Format
-keepclassmembers class com.google.android.exoplayer2.Format {
   *** getPixelCount(...);
   *** copyWithContainerInfo(...);
   *** copyWithDrmInitData(...);
   *** copyWithGaplessInfo(...);
   *** copyWithManifestFormatInfo(...);
   *** copyWithMaxInputSize(...);
   *** copyWithMetadata(...);
   *** copyWithRotationDegrees(...);
   *** copyWithSubsampleOffsetUs(...);
   *** createAudioContainerFormat(...);
   *** createAudioSampleFormat(...);
   *** createAudioSampleFormat(...);
   *** createContainerFormat(...);
   *** createImageSampleFormat(...);
   *** createSampleFormat(...);
   *** createSampleFormat(...);
   *** createTextContainerFormat(...);
   *** createTextContainerFormat(...);
   *** createTextSampleFormat(...);
   *** createTextSampleFormat(...);
   *** createTextSampleFormat(...);
   *** createTextSampleFormat(...);
   *** createTextSampleFormat(...);
   *** createVideoContainerFormat(...);
   *** createVideoSampleFormat(...);
   *** createVideoSampleFormat(...);
   *** describeContents(...);
   *** initializationDataEquals(...);
   *** toLogString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.FormatHolder
-keepclassmembers class com.google.android.exoplayer2.FormatHolder {
   <init>(...);
}

-keep class com.google.android.exoplayer2.ControlDispatcher
-keepclassmembers class com.google.android.exoplayer2.ControlDispatcher {
}

-keep class com.google.android.exoplayer2.ExoPlayer$EventListener
-keepclassmembers class com.google.android.exoplayer2.ExoPlayer$EventListener {
}

-keep class com.google.android.exoplayer2.ExoPlayer$ExoPlayerComponent
-keepclassmembers class com.google.android.exoplayer2.ExoPlayer$ExoPlayerComponent {
}

-keep class com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage
-keepclassmembers class com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage {
   <init>(...);
}

-keep class com.google.android.exoplayer2.ExoPlayer
-keepclassmembers class com.google.android.exoplayer2.ExoPlayer {
}

-keep class com.google.android.exoplayer2.ExoPlayer
-keepclassmembers class com.google.android.exoplayer2.ExoPlayer {
}

-keep class com.google.android.exoplayer2.ExoPlayer
-keepclassmembers class com.google.android.exoplayer2.ExoPlayer {
}

-keep class com.google.android.exoplayer2.IllegalSeekPositionException
-keepclassmembers class com.google.android.exoplayer2.IllegalSeekPositionException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.LoadControl
-keepclassmembers class com.google.android.exoplayer2.LoadControl {
}

-keep class com.google.android.exoplayer2.PlaybackPreparer
-keepclassmembers class com.google.android.exoplayer2.PlaybackPreparer {
}

-keep class com.google.android.exoplayer2.Player$DefaultEventListener
-keepclassmembers class com.google.android.exoplayer2.Player$DefaultEventListener {
   <init>(...);
   *** onLoadingChanged(...);
   *** onPlaybackParametersChanged(...);
   *** onPlayerError(...);
   *** onPlayerStateChanged(...);
   *** onPositionDiscontinuity(...);
   *** onRepeatModeChanged(...);
   *** onSeekProcessed(...);
   *** onShuffleModeEnabledChanged(...);
   *** onTimelineChanged(...);
   *** onTimelineChanged(...);
   *** onTracksChanged(...);
}

-keep class com.google.android.exoplayer2.Player$DefaultEventListener
-keepclassmembers class com.google.android.exoplayer2.Player$DefaultEventListener {
}

-keep class com.google.android.exoplayer2.Player$DiscontinuityReason
-keepclassmembers class com.google.android.exoplayer2.Player$DiscontinuityReason {
}

-keep class com.google.android.exoplayer2.Player$EventListener
-keepclassmembers class com.google.android.exoplayer2.Player$EventListener {
}

-keep class mono.com.google.android.exoplayer2.Player_EventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.Player_EventListenerImplementor {
}

-keep class com.google.android.exoplayer2.Player$RepeatMode
-keepclassmembers class com.google.android.exoplayer2.Player$RepeatMode {
}

-keep class com.google.android.exoplayer2.Player$TextComponent
-keepclassmembers class com.google.android.exoplayer2.Player$TextComponent {
}

-keep class com.google.android.exoplayer2.Player$TimelineChangeReason
-keepclassmembers class com.google.android.exoplayer2.Player$TimelineChangeReason {
}

-keep class com.google.android.exoplayer2.Player$VideoComponent
-keepclassmembers class com.google.android.exoplayer2.Player$VideoComponent {
}

-keep class com.google.android.exoplayer2.Player
-keepclassmembers class com.google.android.exoplayer2.Player {
}

-keep class com.google.android.exoplayer2.Player
-keepclassmembers class com.google.android.exoplayer2.Player {
}

-keep class com.google.android.exoplayer2.Player
-keepclassmembers class com.google.android.exoplayer2.Player {
}

-keep class com.google.android.exoplayer2.Renderer$State
-keepclassmembers class com.google.android.exoplayer2.Renderer$State {
}

-keep class com.google.android.exoplayer2.Renderer
-keepclassmembers class com.google.android.exoplayer2.Renderer {
}

-keep class com.google.android.exoplayer2.Renderer
-keepclassmembers class com.google.android.exoplayer2.Renderer {
}

-keep class com.google.android.exoplayer2.Renderer
-keepclassmembers class com.google.android.exoplayer2.Renderer {
}

-keep class com.google.android.exoplayer2.RendererCapabilities
-keepclassmembers class com.google.android.exoplayer2.RendererCapabilities {
}

-keep class com.google.android.exoplayer2.RendererCapabilities
-keepclassmembers class com.google.android.exoplayer2.RendererCapabilities {
}

-keep class com.google.android.exoplayer2.RendererCapabilities
-keepclassmembers class com.google.android.exoplayer2.RendererCapabilities {
}

-keep class com.google.android.exoplayer2.RenderersFactory
-keepclassmembers class com.google.android.exoplayer2.RenderersFactory {
}

-keep class com.google.android.exoplayer2.NoSampleRenderer
-keepclassmembers class com.google.android.exoplayer2.NoSampleRenderer {
   <init>(...);
   *** getCapabilities(...);
   *** getConfiguration(...);
   *** hasReadStreamToEnd(...);
   *** getIndex(...);
   *** isCurrentStreamFinal(...);
   *** isEnded(...);
   *** isReady(...);
   *** getMediaClock(...);
   *** getState(...);
   *** getStream(...);
   *** getTrackType(...);
   *** disable(...);
   *** enable(...);
   *** handleMessage(...);
   *** maybeThrowStreamError(...);
   *** onDisabled(...);
   *** onEnabled(...);
   *** onPositionReset(...);
   *** onRendererOffsetChanged(...);
   *** onStarted(...);
   *** onStopped(...);
   *** replaceStream(...);
   *** resetPosition(...);
   *** setCurrentStreamFinal(...);
   *** setIndex(...);
   *** start(...);
   *** stop(...);
   *** supportsFormat(...);
   *** supportsMixedMimeTypeAdaptation(...);
   *** render(...);
}

-keep class com.google.android.exoplayer2.NoSampleRenderer
-keepclassmembers class com.google.android.exoplayer2.NoSampleRenderer {
   *** render(...);
}

-keep class com.google.android.exoplayer2.ParserException
-keepclassmembers class com.google.android.exoplayer2.ParserException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.PlaybackParameters
-keepclassmembers class com.google.android.exoplayer2.PlaybackParameters {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getMediaTimeUsForPlayoutTimeMs(...);
}

-keep class com.google.android.exoplayer2.PlayerMessage$Sender
-keepclassmembers class com.google.android.exoplayer2.PlayerMessage$Sender {
}

-keep class com.google.android.exoplayer2.PlayerMessage$Target
-keepclassmembers class com.google.android.exoplayer2.PlayerMessage$Target {
}

-keep class com.google.android.exoplayer2.PlayerMessage
-keepclassmembers class com.google.android.exoplayer2.PlayerMessage {
   <init>(...);
   *** getDeleteAfterDelivery(...);
   *** getHandler(...);
   *** isCanceled(...);
   *** getPayload(...);
   *** getPositionMs(...);
   *** getTarget(...);
   *** getTimeline(...);
   *** getType(...);
   *** getWindowIndex(...);
   *** blockUntilDelivered(...);
   *** cancel(...);
   *** markAsProcessed(...);
   *** send(...);
   *** setDeleteAfterDelivery(...);
   *** setHandler(...);
   *** setPayload(...);
   *** setPosition(...);
   *** setPosition(...);
   *** setType(...);
}

-keep class com.google.android.exoplayer2.RendererConfiguration
-keepclassmembers class com.google.android.exoplayer2.RendererConfiguration {
   <init>(...);
}

-keep class com.google.android.exoplayer2.SeekParameters
-keepclassmembers class com.google.android.exoplayer2.SeekParameters {
   <init>(...);
}

-keep class com.google.android.exoplayer2.SimpleExoPlayer$VideoListener
-keepclassmembers class com.google.android.exoplayer2.SimpleExoPlayer$VideoListener {
}

-keep class com.google.android.exoplayer2.SimpleExoPlayer
-keepclassmembers class com.google.android.exoplayer2.SimpleExoPlayer {
   <init>(...);
   *** getAudioAttributes(...);
   *** setAudioAttributes(...);
   *** getAudioDecoderCounters(...);
   *** getAudioFormat(...);
   *** getAudioSessionId(...);
   *** getAudioStreamType(...);
   *** setAudioStreamType(...);
   *** getBufferedPercentage(...);
   *** getBufferedPosition(...);
   *** getContentPosition(...);
   *** getCurrentAdGroupIndex(...);
   *** getCurrentAdIndexInAdGroup(...);
   *** getCurrentManifest(...);
   *** getCurrentPeriodIndex(...);
   *** getCurrentPosition(...);
   *** getCurrentTag(...);
   *** getCurrentTimeline(...);
   *** getCurrentTrackGroups(...);
   *** getCurrentTrackSelections(...);
   *** getCurrentWindowIndex(...);
   *** getDuration(...);
   *** isCurrentWindowDynamic(...);
   *** isCurrentWindowSeekable(...);
   *** isLoading(...);
   *** isPlayingAd(...);
   *** getNextWindowIndex(...);
   *** getPlayWhenReady(...);
   *** setPlayWhenReady(...);
   *** getPlaybackError(...);
   *** getPlaybackLooper(...);
   *** getPlaybackParameters(...);
   *** setPlaybackParameters(...);
   *** getPlaybackState(...);
   *** getPreviousWindowIndex(...);
   *** getRendererCount(...);
   *** getRepeatMode(...);
   *** setRepeatMode(...);
   *** getShuffleModeEnabled(...);
   *** setShuffleModeEnabled(...);
   *** getTextComponent(...);
   *** getVideoComponent(...);
   *** getVideoDecoderCounters(...);
   *** getVideoFormat(...);
   *** getVideoScalingMode(...);
   *** setVideoScalingMode(...);
   *** getVolume(...);
   *** setVolume(...);
   *** addAudioDebugListener(...);
   *** addListener(...);
   *** addMetadataOutput(...);
   *** addTextOutput(...);
   *** addVideoDebugListener(...);
   *** addVideoListener(...);
   *** blockingSendMessages(...);
   *** clearMetadataOutput(...);
   *** clearTextOutput(...);
   *** clearVideoListener(...);
   *** clearVideoSurface(...);
   *** clearVideoSurface(...);
   *** clearVideoSurfaceHolder(...);
   *** clearVideoSurfaceView(...);
   *** clearVideoTextureView(...);
   *** createExoPlayerImpl(...);
   *** createMessage(...);
   *** getRendererType(...);
   *** prepare(...);
   *** prepare(...);
   *** release(...);
   *** removeAudioDebugListener(...);
   *** removeListener(...);
   *** removeMetadataOutput(...);
   *** removeTextOutput(...);
   *** removeVideoDebugListener(...);
   *** removeVideoListener(...);
   *** seekTo(...);
   *** seekTo(...);
   *** seekToDefaultPosition(...);
   *** seekToDefaultPosition(...);
   *** sendMessages(...);
   *** setAudioDebugListener(...);
   *** setMetadataOutput(...);
   *** setPlaybackParams(...);
   *** setSeekParameters(...);
   *** setTextOutput(...);
   *** setVideoDebugListener(...);
   *** setVideoListener(...);
   *** setVideoSurface(...);
   *** setVideoSurfaceHolder(...);
   *** setVideoSurfaceView(...);
   *** setVideoTextureView(...);
   *** stop(...);
   *** stop(...);
}

-keep class com.google.android.exoplayer2.Timeline$Period
-keepclassmembers class com.google.android.exoplayer2.Timeline$Period {
   <init>(...);
   *** getAdGroupCount(...);
   *** getAdResumePositionUs(...);
   *** getDurationMs(...);
   *** getDurationUs(...);
   *** getPositionInWindowMs(...);
   *** getPositionInWindowUs(...);
   *** getAdCountInAdGroup(...);
   *** getAdDurationUs(...);
   *** getAdGroupIndexAfterPositionUs(...);
   *** getAdGroupIndexForPositionUs(...);
   *** getAdGroupTimeUs(...);
   *** getFirstAdIndexToPlay(...);
   *** getNextAdIndexToPlay(...);
   *** hasPlayedAdGroup(...);
   *** isAdAvailable(...);
   *** set(...);
   *** set(...);
}

-keep class com.google.android.exoplayer2.Timeline$Window
-keepclassmembers class com.google.android.exoplayer2.Timeline$Window {
   <init>(...);
   *** getDefaultPositionMs(...);
   *** getDefaultPositionUs(...);
   *** getDurationMs(...);
   *** getDurationUs(...);
   *** getPositionInFirstPeriodMs(...);
   *** getPositionInFirstPeriodUs(...);
   *** set(...);
}

-keep class com.google.android.exoplayer2.Timeline
-keepclassmembers class com.google.android.exoplayer2.Timeline {
   <init>(...);
   *** isEmpty(...);
   *** getPeriodCount(...);
   *** getWindowCount(...);
   *** getFirstWindowIndex(...);
   *** getIndexOfPeriod(...);
   *** getLastWindowIndex(...);
   *** getNextPeriodIndex(...);
   *** getNextWindowIndex(...);
   *** getPeriod(...);
   *** getPeriod(...);
   *** getPeriodPosition(...);
   *** getPeriodPosition(...);
   *** getPreviousWindowIndex(...);
   *** getWindow(...);
   *** getWindow(...);
   *** getWindow(...);
   *** isLastPeriod(...);
}

-keep class com.google.android.exoplayer2.Timeline
-keepclassmembers class com.google.android.exoplayer2.Timeline {
   *** getPeriodCount(...);
   *** getWindowCount(...);
   *** getIndexOfPeriod(...);
   *** getPeriod(...);
   *** getWindow(...);
}

-keep class com.google.android.exoplayer2.video.AvcConfig
-keepclassmembers class com.google.android.exoplayer2.video.AvcConfig {
   *** parse(...);
}

-keep class com.google.android.exoplayer2.video.ColorInfo
-keepclassmembers class com.google.android.exoplayer2.video.ColorInfo {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.video.DummySurface
-keepclassmembers class com.google.android.exoplayer2.video.DummySurface {
   *** isSecureSupported(...);
   *** newInstanceV17(...);
}

-keep class com.google.android.exoplayer2.video.HevcConfig
-keepclassmembers class com.google.android.exoplayer2.video.HevcConfig {
   *** parse(...);
}

-keep class com.google.android.exoplayer2.video.VideoListener
-keepclassmembers class com.google.android.exoplayer2.video.VideoListener {
}

-keep class mono.com.google.android.exoplayer2.video.VideoListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.video.VideoListenerImplementor {
}

-keep class com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher
-keepclassmembers class com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher {
   <init>(...);
   *** decoderInitialized(...);
   *** disabled(...);
   *** droppedFrames(...);
   *** enabled(...);
   *** inputFormatChanged(...);
   *** renderedFirstFrame(...);
   *** videoSizeChanged(...);
}

-keep class com.google.android.exoplayer2.video.VideoRendererEventListener
-keepclassmembers class com.google.android.exoplayer2.video.VideoRendererEventListener {
}

-keep class mono.com.google.android.exoplayer2.video.VideoRendererEventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.video.VideoRendererEventListenerImplementor {
}

-keep class com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues
-keepclassmembers class com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues {
   <init>(...);
}

-keep class com.google.android.exoplayer2.video.MediaCodecVideoRenderer
-keepclassmembers class com.google.android.exoplayer2.video.MediaCodecVideoRenderer {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** codecNeedsSetOutputSurfaceWorkaround(...);
   *** configureCodec(...);
   *** dropOutputBuffer(...);
   *** getCodecMaxValues(...);
   *** getMediaFormat(...);
   *** maybeDropBuffersToKeyframe(...);
   *** processOutputBuffer(...);
   *** renderOutputBuffer(...);
   *** renderOutputBufferV21(...);
   *** shouldDropBuffersToKeyframe(...);
   *** shouldDropOutputBuffer(...);
   *** shouldForceRenderOutputBuffer(...);
   *** skipOutputBuffer(...);
   *** supportsFormat(...);
   *** updateDroppedBufferCounters(...);
}

-keep class com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper
-keepclassmembers class com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper {
   <init>(...);
   <init>(...);
   *** adjustReleaseTime(...);
   *** disable(...);
   *** enable(...);
}

-keep class com.google.android.exoplayer2.util.Assertions
-keepclassmembers class com.google.android.exoplayer2.util.Assertions {
   *** checkArgument(...);
   *** checkArgument(...);
   *** checkIndex(...);
   *** checkMainThread(...);
   *** checkNotEmpty(...);
   *** checkNotEmpty(...);
   *** checkNotNull(...);
   *** checkNotNull(...);
   *** checkState(...);
   *** checkState(...);
}

-keep class com.google.android.exoplayer2.util.AtomicFile
-keepclassmembers class com.google.android.exoplayer2.util.AtomicFile {
   <init>(...);
   *** delete(...);
   *** endWrite(...);
   *** openRead(...);
   *** startWrite(...);
}

-keep class com.google.android.exoplayer2.util.CodecSpecificDataUtil
-keepclassmembers class com.google.android.exoplayer2.util.CodecSpecificDataUtil {
   *** buildAacAudioSpecificConfig(...);
   *** buildAacLcAudioSpecificConfig(...);
   *** buildNalUnit(...);
   *** parseAacAudioSpecificConfig(...);
   *** parseAacAudioSpecificConfig(...);
   *** splitNalUnits(...);
}

-keep class com.google.android.exoplayer2.util.ColorParser
-keepclassmembers class com.google.android.exoplayer2.util.ColorParser {
   *** parseCssColor(...);
   *** parseTtmlColor(...);
}

-keep class com.google.android.exoplayer2.util.ConditionVariable
-keepclassmembers class com.google.android.exoplayer2.util.ConditionVariable {
   <init>(...);
   *** block(...);
   *** block(...);
   *** close(...);
   *** open(...);
}

-keep class com.google.android.exoplayer2.util.EGLSurfaceTexture$GlException
-keepclassmembers class com.google.android.exoplayer2.util.EGLSurfaceTexture$GlException {
}

-keep class com.google.android.exoplayer2.util.EGLSurfaceTexture$SecureMode
-keepclassmembers class com.google.android.exoplayer2.util.EGLSurfaceTexture$SecureMode {
}

-keep class com.google.android.exoplayer2.util.EGLSurfaceTexture
-keepclassmembers class com.google.android.exoplayer2.util.EGLSurfaceTexture {
   <init>(...);
   *** getSurfaceTexture(...);
   *** init(...);
   *** onFrameAvailable(...);
   *** release(...);
   *** run(...);
}

-keep class com.google.android.exoplayer2.util.EventLogger
-keepclassmembers class com.google.android.exoplayer2.util.EventLogger {
   <init>(...);
   *** logd(...);
   *** loge(...);
}

-keep class com.google.android.exoplayer2.util.FlacStreamInfo
-keepclassmembers class com.google.android.exoplayer2.util.FlacStreamInfo {
   <init>(...);
   <init>(...);
   *** getApproxBytesPerFrame(...);
   *** bitRate(...);
   *** durationUs(...);
   *** getSampleIndex(...);
   *** maxDecodedFrameSize(...);
}

-keep class com.google.android.exoplayer2.util.Clock
-keepclassmembers class com.google.android.exoplayer2.util.Clock {
}

-keep class com.google.android.exoplayer2.util.Clock
-keepclassmembers class com.google.android.exoplayer2.util.Clock {
}

-keep class com.google.android.exoplayer2.util.Clock
-keepclassmembers class com.google.android.exoplayer2.util.Clock {
}

-keep class com.google.android.exoplayer2.util.ErrorMessageProvider
-keepclassmembers class com.google.android.exoplayer2.util.ErrorMessageProvider {
}

-keep class com.google.android.exoplayer2.util.HandlerWrapper
-keepclassmembers class com.google.android.exoplayer2.util.HandlerWrapper {
}

-keep class com.google.android.exoplayer2.util.MediaClock
-keepclassmembers class com.google.android.exoplayer2.util.MediaClock {
}

-keep class com.google.android.exoplayer2.util.Predicate
-keepclassmembers class com.google.android.exoplayer2.util.Predicate {
}

-keep class com.google.android.exoplayer2.util.LibraryLoader
-keepclassmembers class com.google.android.exoplayer2.util.LibraryLoader {
   <init>(...);
   *** isAvailable(...);
   *** setLibraries(...);
}

-keep class com.google.android.exoplayer2.util.LongArray
-keepclassmembers class com.google.android.exoplayer2.util.LongArray {
   <init>(...);
   <init>(...);
   *** add(...);
   *** get(...);
   *** size(...);
   *** toArray(...);
}

-keep class com.google.android.exoplayer2.util.MimeTypes
-keepclassmembers class com.google.android.exoplayer2.util.MimeTypes {
   *** getAudioMediaMimeType(...);
   *** getEncoding(...);
   *** getMediaMimeType(...);
   *** getMimeTypeFromMp4ObjectType(...);
   *** getTrackType(...);
   *** getTrackTypeOfCodec(...);
   *** getVideoMediaMimeType(...);
   *** isApplication(...);
   *** isAudio(...);
   *** isText(...);
   *** isVideo(...);
   *** registerCustomMimeType(...);
}

-keep class com.google.android.exoplayer2.util.NalUnitUtil$PpsData
-keepclassmembers class com.google.android.exoplayer2.util.NalUnitUtil$PpsData {
   <init>(...);
}

-keep class com.google.android.exoplayer2.util.NalUnitUtil$SpsData
-keepclassmembers class com.google.android.exoplayer2.util.NalUnitUtil$SpsData {
   <init>(...);
}

-keep class com.google.android.exoplayer2.util.NalUnitUtil
-keepclassmembers class com.google.android.exoplayer2.util.NalUnitUtil {
   *** clearPrefixFlags(...);
   *** discardToSps(...);
   *** findNalUnit(...);
   *** getH265NalUnitType(...);
   *** getNalUnitType(...);
   *** isNalUnitSei(...);
   *** parsePpsNalUnit(...);
   *** parseSpsNalUnit(...);
   *** unescapeStream(...);
}

-keep class com.google.android.exoplayer2.util.NotificationUtil$Importance
-keepclassmembers class com.google.android.exoplayer2.util.NotificationUtil$Importance {
}

-keep class com.google.android.exoplayer2.util.NotificationUtil
-keepclassmembers class com.google.android.exoplayer2.util.NotificationUtil {
   *** createNotificationChannel(...);
   *** setNotification(...);
}

-keep class com.google.android.exoplayer2.util.ParsableBitArray
-keepclassmembers class com.google.android.exoplayer2.util.ParsableBitArray {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBytePosition(...);
   *** getPosition(...);
   *** setPosition(...);
   *** bitsLeft(...);
   *** byteAlign(...);
   *** putInt(...);
   *** readBit(...);
   *** readBits(...);
   *** readBits(...);
   *** readBytes(...);
   *** reset(...);
   *** reset(...);
   *** reset(...);
   *** skipBit(...);
   *** skipBits(...);
   *** skipBytes(...);
}

-keep class com.google.android.exoplayer2.util.ParsableByteArray
-keepclassmembers class com.google.android.exoplayer2.util.ParsableByteArray {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPosition(...);
   *** setPosition(...);
   *** bytesLeft(...);
   *** capacity(...);
   *** limit(...);
   *** peekChar(...);
   *** peekUnsignedByte(...);
   *** readBytes(...);
   *** readBytes(...);
   *** readBytes(...);
   *** readDouble(...);
   *** readFloat(...);
   *** readInt(...);
   *** readInt24(...);
   *** readLine(...);
   *** readLittleEndianInt(...);
   *** readLittleEndianInt24(...);
   *** readLittleEndianLong(...);
   *** readLittleEndianShort(...);
   *** readLittleEndianUnsignedInt(...);
   *** readLittleEndianUnsignedInt24(...);
   *** readLittleEndianUnsignedIntToInt(...);
   *** readLittleEndianUnsignedShort(...);
   *** readLong(...);
   *** readNullTerminatedString(...);
   *** readNullTerminatedString(...);
   *** readShort(...);
   *** readString(...);
   *** readString(...);
   *** readSynchSafeInt(...);
   *** readUnsignedByte(...);
   *** readUnsignedFixedPoint1616(...);
   *** readUnsignedInt(...);
   *** readUnsignedInt24(...);
   *** readUnsignedIntToInt(...);
   *** readUnsignedLongToLong(...);
   *** readUnsignedShort(...);
   *** readUtf8EncodedLong(...);
   *** reset(...);
   *** reset(...);
   *** reset(...);
   *** setLimit(...);
   *** skipBytes(...);
}

-keep class com.google.android.exoplayer2.util.ParsableNalUnitBitArray
-keepclassmembers class com.google.android.exoplayer2.util.ParsableNalUnitBitArray {
   <init>(...);
   *** canReadBits(...);
   *** canReadExpGolombCodedNum(...);
   *** readBit(...);
   *** readBits(...);
   *** readSignedExpGolombCodedInt(...);
   *** readUnsignedExpGolombCodedInt(...);
   *** reset(...);
   *** skipBit(...);
   *** skipBits(...);
}

-keep class com.google.android.exoplayer2.util.PriorityTaskManager$PriorityTooLowException
-keepclassmembers class com.google.android.exoplayer2.util.PriorityTaskManager$PriorityTooLowException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.util.PriorityTaskManager
-keepclassmembers class com.google.android.exoplayer2.util.PriorityTaskManager {
   <init>(...);
   *** add(...);
   *** proceed(...);
   *** proceedNonBlocking(...);
   *** proceedOrThrow(...);
   *** remove(...);
}

-keep class com.google.android.exoplayer2.util.RepeatModeUtil$RepeatToggleModes
-keepclassmembers class com.google.android.exoplayer2.util.RepeatModeUtil$RepeatToggleModes {
}

-keep class com.google.android.exoplayer2.util.RepeatModeUtil
-keepclassmembers class com.google.android.exoplayer2.util.RepeatModeUtil {
   *** getNextRepeatMode(...);
   *** isRepeatModeEnabled(...);
}

-keep class com.google.android.exoplayer2.util.ReusableBufferedOutputStream
-keepclassmembers class com.google.android.exoplayer2.util.ReusableBufferedOutputStream {
   <init>(...);
   <init>(...);
   *** reset(...);
}

-keep class com.google.android.exoplayer2.util.SlidingPercentile
-keepclassmembers class com.google.android.exoplayer2.util.SlidingPercentile {
   <init>(...);
   *** addSample(...);
   *** getPercentile(...);
}

-keep class com.google.android.exoplayer2.util.StandaloneMediaClock
-keepclassmembers class com.google.android.exoplayer2.util.StandaloneMediaClock {
   <init>(...);
   *** getPlaybackParameters(...);
   *** getPositionUs(...);
   *** resetPosition(...);
   *** setPlaybackParameters(...);
   *** start(...);
   *** stop(...);
}

-keep class com.google.android.exoplayer2.util.TimestampAdjuster
-keepclassmembers class com.google.android.exoplayer2.util.TimestampAdjuster {
   <init>(...);
   *** getFirstSampleTimestampUs(...);
   *** setFirstSampleTimestampUs(...);
   *** getLastAdjustedTimestampUs(...);
   *** getTimestampOffsetUs(...);
   *** adjustSampleTimestamp(...);
   *** adjustTsTimestamp(...);
   *** ptsToUs(...);
   *** reset(...);
   *** usToPts(...);
   *** waitUntilInitialized(...);
}

-keep class com.google.android.exoplayer2.util.TraceUtil
-keepclassmembers class com.google.android.exoplayer2.util.TraceUtil {
   *** beginSection(...);
   *** endSection(...);
}

-keep class com.google.android.exoplayer2.util.UriUtil
-keepclassmembers class com.google.android.exoplayer2.util.UriUtil {
   *** removeQueryParameter(...);
   *** resolve(...);
   *** resolveToUri(...);
}

-keep class com.google.android.exoplayer2.util.Util
-keepclassmembers class com.google.android.exoplayer2.util.Util {
   *** addWithOverflowDefault(...);
   *** areEqual(...);
   *** binarySearchCeil(...);
   *** binarySearchCeil(...);
   *** binarySearchFloor(...);
   *** binarySearchFloor(...);
   *** binarySearchFloor(...);
   *** ceilDivide(...);
   *** ceilDivide(...);
   *** closeQuietly(...);
   *** closeQuietly(...);
   *** compareLong(...);
   *** constrainValue(...);
   *** constrainValue(...);
   *** constrainValue(...);
   *** contains(...);
   *** crc(...);
   *** createTempDirectory(...);
   *** createTempFile(...);
   *** escapeFileName(...);
   *** formatInvariant(...);
   *** fromUtf8Bytes(...);
   *** fromUtf8Bytes(...);
   *** getAudioContentTypeForStreamType(...);
   *** getAudioUsageForStreamType(...);
   *** getBytesFromHexString(...);
   *** getCodecsOfType(...);
   *** getCommaDelimitedSimpleClassNames(...);
   *** getDefaultBufferSize(...);
   *** getDrmUuid(...);
   *** getIntegerCodeForString(...);
   *** getMediaDurationForPlayoutDuration(...);
   *** getPcmEncoding(...);
   *** getPcmFrameSize(...);
   *** getPhysicalDisplaySize(...);
   *** getPhysicalDisplaySize(...);
   *** getPlayoutDurationForMediaDuration(...);
   *** getStreamTypeForAudioUsage(...);
   *** getStringForTime(...);
   *** getUserAgent(...);
   *** getUtf8Bytes(...);
   *** inferContentType(...);
   *** inferContentType(...);
   *** inferContentType(...);
   *** isEncodingHighResolutionIntegerPcm(...);
   *** isEncodingPcm(...);
   *** isLinebreak(...);
   *** isLocalFileUri(...);
   *** maybeRequestReadExternalStoragePermission(...);
   *** newSingleThreadExecutor(...);
   *** normalizeLanguageCode(...);
   *** nullSafeArrayCopy(...);
   *** parseXsDateTime(...);
   *** parseXsDuration(...);
   *** readBoolean(...);
   *** recursiveDelete(...);
   *** removeRange(...);
   *** resolveSeekPositionUs(...);
   *** scaleLargeTimestamp(...);
   *** scaleLargeTimestamps(...);
   *** scaleLargeTimestampsInPlace(...);
   *** sneakyThrow(...);
   *** split(...);
   *** splitAtFirst(...);
   *** startForegroundService(...);
   *** subtractWithOverflowDefault(...);
   *** toArray(...);
   *** toByteArray(...);
   *** toLowerInvariant(...);
   *** toUpperInvariant(...);
   *** unescapeFileName(...);
   *** writeBoolean(...);
}

-keep class com.google.android.exoplayer2.util.XmlPullParserUtil
-keepclassmembers class com.google.android.exoplayer2.util.XmlPullParserUtil {
   *** getAttributeValue(...);
   *** getAttributeValueIgnorePrefix(...);
   *** isEndTag(...);
   *** isEndTag(...);
   *** isStartTag(...);
   *** isStartTag(...);
   *** isStartTagIgnorePrefix(...);
}

-keep class com.google.android.exoplayer2.upstream.Allocation
-keepclassmembers class com.google.android.exoplayer2.upstream.Allocation {
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.AssetDataSource$AssetDataSourceException
-keepclassmembers class com.google.android.exoplayer2.upstream.AssetDataSource$AssetDataSourceException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.AssetDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.AssetDataSource {
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.ByteArrayDataSink
-keepclassmembers class com.google.android.exoplayer2.upstream.ByteArrayDataSink {
   <init>(...);
   *** close(...);
   *** getData(...);
   *** open(...);
   *** write(...);
}

-keep class com.google.android.exoplayer2.upstream.ByteArrayDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.ByteArrayDataSource {
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.ContentDataSource$ContentDataSourceException
-keepclassmembers class com.google.android.exoplayer2.upstream.ContentDataSource$ContentDataSourceException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.ContentDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.ContentDataSource {
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.DataSchemeDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.DataSchemeDataSource {
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.DataSourceException
-keepclassmembers class com.google.android.exoplayer2.upstream.DataSourceException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.DataSourceInputStream
-keepclassmembers class com.google.android.exoplayer2.upstream.DataSourceInputStream {
   <init>(...);
   *** bytesRead(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.DataSpec$Flags
-keepclassmembers class com.google.android.exoplayer2.upstream.DataSpec$Flags {
}

-keep class com.google.android.exoplayer2.upstream.DataSpec
-keepclassmembers class com.google.android.exoplayer2.upstream.DataSpec {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFlagSet(...);
   *** subrange(...);
   *** subrange(...);
   *** withUri(...);
}

-keep class com.google.android.exoplayer2.upstream.DefaultAllocator
-keepclassmembers class com.google.android.exoplayer2.upstream.DefaultAllocator {
   <init>(...);
   <init>(...);
   *** getIndividualAllocationLength(...);
   *** getTotalBytesAllocated(...);
   *** allocate(...);
   *** release(...);
   *** release(...);
   *** reset(...);
   *** setTargetBufferSize(...);
   *** trim(...);
}

-keep class com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder
-keepclassmembers class com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder {
   <init>(...);
   *** build(...);
   *** setClock(...);
   *** setEventListener(...);
   *** setInitialBitrateEstimate(...);
   *** setSlidingWindowMaxWeight(...);
}

-keep class com.google.android.exoplayer2.upstream.DefaultBandwidthMeter
-keepclassmembers class com.google.android.exoplayer2.upstream.DefaultBandwidthMeter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBitrateEstimate(...);
   *** onBytesTransferred(...);
   *** onTransferEnd(...);
   *** onTransferStart(...);
}

-keep class com.google.android.exoplayer2.upstream.DefaultDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.DefaultDataSource {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.DefaultDataSourceFactory
-keepclassmembers class com.google.android.exoplayer2.upstream.DefaultDataSourceFactory {
   <init>(...);
   <init>(...);
   <init>(...);
   *** createDataSource(...);
}

-keep class com.google.android.exoplayer2.upstream.DefaultHttpDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.DefaultHttpDataSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConnection(...);
   *** getResponseHeaders(...);
   *** getUri(...);
   *** bytesRead(...);
   *** bytesRemaining(...);
   *** bytesSkipped(...);
   *** clearAllRequestProperties(...);
   *** clearRequestProperty(...);
   *** close(...);
   *** open(...);
   *** read(...);
   *** setRequestProperty(...);
}

-keep class com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory
-keepclassmembers class com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory {
   <init>(...);
   <init>(...);
   <init>(...);
   *** createDataSourceInternal(...);
}

-keep class com.google.android.exoplayer2.upstream.DummyDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.DummyDataSource {
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.FileDataSource$FileDataSourceException
-keepclassmembers class com.google.android.exoplayer2.upstream.FileDataSource$FileDataSourceException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.FileDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.FileDataSource {
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.FileDataSourceFactory
-keepclassmembers class com.google.android.exoplayer2.upstream.FileDataSourceFactory {
   <init>(...);
   <init>(...);
   *** createDataSource(...);
}

-keep class com.google.android.exoplayer2.upstream.Allocator
-keepclassmembers class com.google.android.exoplayer2.upstream.Allocator {
}

-keep class com.google.android.exoplayer2.upstream.BandwidthMeter$EventListener
-keepclassmembers class com.google.android.exoplayer2.upstream.BandwidthMeter$EventListener {
}

-keep class mono.com.google.android.exoplayer2.upstream.BandwidthMeter_EventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.upstream.BandwidthMeter_EventListenerImplementor {
}

-keep class com.google.android.exoplayer2.upstream.BandwidthMeter
-keepclassmembers class com.google.android.exoplayer2.upstream.BandwidthMeter {
}

-keep class com.google.android.exoplayer2.upstream.DataSink$Factory
-keepclassmembers class com.google.android.exoplayer2.upstream.DataSink$Factory {
}

-keep class com.google.android.exoplayer2.upstream.DataSink
-keepclassmembers class com.google.android.exoplayer2.upstream.DataSink {
}

-keep class com.google.android.exoplayer2.upstream.DataSource$Factory
-keepclassmembers class com.google.android.exoplayer2.upstream.DataSource$Factory {
}

-keep class com.google.android.exoplayer2.upstream.DataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.DataSource {
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource$BaseFactory
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource$BaseFactory {
   <init>(...);
   *** getDefaultRequestProperties(...);
   *** clearAllDefaultRequestProperties(...);
   *** clearDefaultRequestProperty(...);
   *** createDataSource(...);
   *** createDataSourceInternal(...);
   *** setDefaultRequestProperty(...);
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource$BaseFactory
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource$BaseFactory {
   *** createDataSourceInternal(...);
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource$Factory
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource$Factory {
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException$Type
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException$Type {
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource$InvalidContentTypeException
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource$InvalidContentTypeException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties {
   <init>(...);
   *** getSnapshot(...);
   *** clear(...);
   *** clearAndSet(...);
   *** remove(...);
   *** set(...);
   *** set(...);
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource {
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource {
}

-keep class com.google.android.exoplayer2.upstream.HttpDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.HttpDataSource {
}

-keep class com.google.android.exoplayer2.upstream.LoaderErrorThrower$Dummy
-keepclassmembers class com.google.android.exoplayer2.upstream.LoaderErrorThrower$Dummy {
   <init>(...);
   *** maybeThrowError(...);
   *** maybeThrowError(...);
}

-keep class com.google.android.exoplayer2.upstream.LoaderErrorThrower
-keepclassmembers class com.google.android.exoplayer2.upstream.LoaderErrorThrower {
}

-keep class com.google.android.exoplayer2.upstream.TransferListener
-keepclassmembers class com.google.android.exoplayer2.upstream.TransferListener {
}

-keep class mono.com.google.android.exoplayer2.upstream.TransferListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.upstream.TransferListenerImplementor {
}

-keep class com.google.android.exoplayer2.upstream.Loader$Callback
-keepclassmembers class com.google.android.exoplayer2.upstream.Loader$Callback {
}

-keep class com.google.android.exoplayer2.upstream.Loader$Loadable
-keepclassmembers class com.google.android.exoplayer2.upstream.Loader$Loadable {
}

-keep class com.google.android.exoplayer2.upstream.Loader$ReleaseCallback
-keepclassmembers class com.google.android.exoplayer2.upstream.Loader$ReleaseCallback {
}

-keep class com.google.android.exoplayer2.upstream.Loader$RetryAction
-keepclassmembers class com.google.android.exoplayer2.upstream.Loader$RetryAction {
}

-keep class com.google.android.exoplayer2.upstream.Loader$UnexpectedLoaderException
-keepclassmembers class com.google.android.exoplayer2.upstream.Loader$UnexpectedLoaderException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.Loader
-keepclassmembers class com.google.android.exoplayer2.upstream.Loader {
   <init>(...);
   *** isLoading(...);
   *** cancelLoading(...);
   *** maybeThrowError(...);
   *** maybeThrowError(...);
   *** release(...);
   *** release(...);
   *** startLoading(...);
}

-keep class com.google.android.exoplayer2.upstream.ParsingLoadable$Parser
-keepclassmembers class com.google.android.exoplayer2.upstream.ParsingLoadable$Parser {
}

-keep class com.google.android.exoplayer2.upstream.ParsingLoadable
-keepclassmembers class com.google.android.exoplayer2.upstream.ParsingLoadable {
   <init>(...);
   <init>(...);
   *** getResult(...);
   *** bytesLoaded(...);
   *** cancelLoad(...);
   *** load(...);
   *** load(...);
}

-keep class com.google.android.exoplayer2.upstream.PriorityDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.PriorityDataSource {
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.PriorityDataSourceFactory
-keepclassmembers class com.google.android.exoplayer2.upstream.PriorityDataSourceFactory {
   <init>(...);
   *** createDataSource(...);
}

-keep class com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException
-keepclassmembers class com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.RawResourceDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.RawResourceDataSource {
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** buildRawResourceUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.TeeDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.TeeDataSource {
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.UdpDataSource$UdpDataSourceException
-keepclassmembers class com.google.android.exoplayer2.upstream.UdpDataSource$UdpDataSourceException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.UdpDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.UdpDataSource {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.crypto.AesCipherDataSink
-keepclassmembers class com.google.android.exoplayer2.upstream.crypto.AesCipherDataSink {
   <init>(...);
   <init>(...);
   *** close(...);
   *** open(...);
   *** write(...);
}

-keep class com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource {
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher
-keepclassmembers class com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher {
   <init>(...);
   *** update(...);
   *** updateInPlace(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheDataSink$CacheDataSinkException
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheDataSink$CacheDataSinkException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheDataSink
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheDataSink {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** close(...);
   *** open(...);
   *** write(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheDataSinkFactory
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheDataSinkFactory {
   <init>(...);
   <init>(...);
   *** createDataSink(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheDataSource$CacheIgnoredReason
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheDataSource$CacheIgnoredReason {
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheDataSource$EventListener
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheDataSource$EventListener {
}

-keep class mono.com.google.android.exoplayer2.upstream.cache.CacheDataSource_EventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.upstream.cache.CacheDataSource_EventListenerImplementor {
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheDataSource$Flags
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheDataSource$Flags {
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheDataSource
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheDataSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getUri(...);
   *** close(...);
   *** open(...);
   *** read(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheDataSourceFactory
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheDataSourceFactory {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** createDataSource(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.CachedRegionTracker
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CachedRegionTracker {
   <init>(...);
   *** getRegionEndTimeMs(...);
   *** onSpanAdded(...);
   *** onSpanRemoved(...);
   *** onSpanTouched(...);
   *** release(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheSpan
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheSpan {
   <init>(...);
   <init>(...);
   *** isHoleSpan(...);
   *** isOpenEnded(...);
   *** compareTo(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters {
   <init>(...);
   *** totalCachedBytes(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheUtil
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheUtil {
   *** cache(...);
   *** cache(...);
   *** generateKey(...);
   *** getCached(...);
   *** getKey(...);
   *** remove(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations {
   <init>(...);
   *** getEditedValues(...);
   *** getRemovedValues(...);
   *** remove(...);
   *** set(...);
   *** set(...);
   *** set(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata {
   *** contains(...);
   *** copyWithMutationsApplied(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** readFromStream(...);
   *** writeToStream(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.Cache$CacheException
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.Cache$CacheException {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.Cache$Listener
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.Cache$Listener {
}

-keep class mono.com.google.android.exoplayer2.upstream.cache.Cache_ListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.upstream.cache.Cache_ListenerImplementor {
}

-keep class com.google.android.exoplayer2.upstream.cache.Cache
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.Cache {
}

-keep class com.google.android.exoplayer2.upstream.cache.CacheEvictor
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.CacheEvictor {
}

-keep class com.google.android.exoplayer2.upstream.cache.ContentMetadata
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.ContentMetadata {
}

-keep class com.google.android.exoplayer2.upstream.cache.ContentMetadata
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.ContentMetadata {
}

-keep class com.google.android.exoplayer2.upstream.cache.ContentMetadata
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.ContentMetadata {
}

-keep class com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor {
   <init>(...);
   *** compare(...);
   *** onCacheInitialized(...);
   *** onSpanAdded(...);
   *** onSpanRemoved(...);
   *** onSpanTouched(...);
   *** onStartFile(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.NoOpCacheEvictor
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.NoOpCacheEvictor {
   <init>(...);
   *** onCacheInitialized(...);
   *** onSpanAdded(...);
   *** onSpanRemoved(...);
   *** onSpanTouched(...);
   *** onStartFile(...);
}

-keep class com.google.android.exoplayer2.upstream.cache.SimpleCache
-keepclassmembers class com.google.android.exoplayer2.upstream.cache.SimpleCache {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCacheSpace(...);
   *** getKeys(...);
   *** addListener(...);
   *** applyContentMetadataMutations(...);
   *** commitFile(...);
   *** disableCacheFolderLocking(...);
   *** getCachedLength(...);
   *** getCachedSpans(...);
   *** getContentLength(...);
   *** getContentMetadata(...);
   *** isCacheFolderLocked(...);
   *** isCached(...);
   *** release(...);
   *** releaseHoleSpan(...);
   *** removeListener(...);
   *** removeSpan(...);
   *** setContentLength(...);
   *** startFile(...);
   *** startReadWrite(...);
   *** startReadWriteNonBlocking(...);
}

-keep class com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory
-keepclassmembers class com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory {
   <init>(...);
   <init>(...);
   <init>(...);
   *** createTrackSelection(...);
}

-keep class com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection
-keepclassmembers class com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection {
   <init>(...);
   <init>(...);
   *** getSelectedIndex(...);
   *** getSelectionData(...);
   *** getSelectionReason(...);
   *** updateSelectedTrack(...);
}

-keep class com.google.android.exoplayer2.trackselection.BaseTrackSelection
-keepclassmembers class com.google.android.exoplayer2.trackselection.BaseTrackSelection {
   <init>(...);
   *** getSelectedFormat(...);
   *** getSelectedIndexInTrackGroup(...);
   *** getTrackGroup(...);
   *** blacklist(...);
   *** disable(...);
   *** enable(...);
   *** evaluateQueueSize(...);
   *** getFormat(...);
   *** getIndexInTrackGroup(...);
   *** indexOf(...);
   *** indexOf(...);
   *** isBlacklisted(...);
   *** length(...);
   *** onPlaybackSpeed(...);
   *** updateSelectedTrack(...);
   *** getSelectedIndex(...);
   *** getSelectionData(...);
   *** getSelectionReason(...);
}

-keep class com.google.android.exoplayer2.trackselection.BaseTrackSelection
-keepclassmembers class com.google.android.exoplayer2.trackselection.BaseTrackSelection {
   *** getSelectedIndex(...);
   *** getSelectionData(...);
   *** getSelectionReason(...);
   *** updateSelectedTrack(...);
}

-keep class com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters
-keepclassmembers class com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters {
   *** buildUpon(...);
   *** describeContents(...);
   *** getRendererDisabled(...);
   *** getSelectionOverride(...);
   *** hasSelectionOverride(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder
-keepclassmembers class com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder {
   <init>(...);
   *** build(...);
   *** clearSelectionOverride(...);
   *** clearSelectionOverrides(...);
   *** clearSelectionOverrides(...);
   *** clearVideoSizeConstraints(...);
   *** clearViewportSizeConstraints(...);
   *** setAllowMixedMimeAdaptiveness(...);
   *** setAllowNonSeamlessAdaptiveness(...);
   *** setDisabledTextTrackSelectionFlags(...);
   *** setExceedRendererCapabilitiesIfNecessary(...);
   *** setExceedVideoConstraintsIfNecessary(...);
   *** setForceLowestBitrate(...);
   *** setMaxVideoBitrate(...);
   *** setMaxVideoSize(...);
   *** setMaxVideoSizeSd(...);
   *** setPreferredAudioLanguage(...);
   *** setPreferredTextLanguage(...);
   *** setRendererDisabled(...);
   *** setSelectUndeterminedTextLanguage(...);
   *** setSelectionOverride(...);
   *** setTunnelingAudioSessionId(...);
   *** setViewportSize(...);
   *** setViewportSizeToPhysicalDisplaySize(...);
}

-keep class com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride
-keepclassmembers class com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride {
   <init>(...);
   *** containsTrack(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.trackselection.DefaultTrackSelector
-keepclassmembers class com.google.android.exoplayer2.trackselection.DefaultTrackSelector {
   <init>(...);
   <init>(...);
   <init>(...);
   *** buildUponParameters(...);
   *** clearSelectionOverride(...);
   *** clearSelectionOverrides(...);
   *** clearSelectionOverrides(...);
   *** formatHasLanguage(...);
   *** formatHasNoLanguage(...);
   *** getParameters(...);
   *** getRendererDisabled(...);
   *** getSelectionOverride(...);
   *** hasSelectionOverride(...);
   *** isSupported(...);
   *** selectAllTracks(...);
   *** selectAudioTrack(...);
   *** selectOtherTrack(...);
   *** selectTextTrack(...);
   *** selectTracks(...);
   *** selectVideoTrack(...);
   *** setParameters(...);
   *** setParameters(...);
   *** setRendererDisabled(...);
   *** setSelectionOverride(...);
   *** setTunnelingAudioSessionId(...);
}

-keep class com.google.android.exoplayer2.trackselection.FixedTrackSelection$Factory
-keepclassmembers class com.google.android.exoplayer2.trackselection.FixedTrackSelection$Factory {
   <init>(...);
   <init>(...);
   *** createTrackSelection(...);
}

-keep class com.google.android.exoplayer2.trackselection.FixedTrackSelection
-keepclassmembers class com.google.android.exoplayer2.trackselection.FixedTrackSelection {
   <init>(...);
   <init>(...);
   *** getSelectedIndex(...);
   *** getSelectionData(...);
   *** getSelectionReason(...);
   *** updateSelectedTrack(...);
}

-keep class com.google.android.exoplayer2.trackselection.TrackSelection$Factory
-keepclassmembers class com.google.android.exoplayer2.trackselection.TrackSelection$Factory {
}

-keep class com.google.android.exoplayer2.trackselection.TrackSelection
-keepclassmembers class com.google.android.exoplayer2.trackselection.TrackSelection {
}

-keep class com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo
-keepclassmembers class com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo {
   *** getRendererCount(...);
   *** getUnassociatedTrackGroups(...);
   *** getUnmappedTrackGroups(...);
   *** getAdaptiveSupport(...);
   *** getAdaptiveSupport(...);
   *** getRendererSupport(...);
   *** getRendererType(...);
   *** getTrackFormatSupport(...);
   *** getTrackGroups(...);
   *** getTrackSupport(...);
   *** getTrackTypeRendererSupport(...);
   *** getTypeSupport(...);
}

-keep class com.google.android.exoplayer2.trackselection.MappingTrackSelector
-keepclassmembers class com.google.android.exoplayer2.trackselection.MappingTrackSelector {
   <init>(...);
   *** getCurrentMappedTrackInfo(...);
   *** onSelectionActivated(...);
   *** selectTracks(...);
   *** selectTracks(...);
}

-keep class com.google.android.exoplayer2.trackselection.MappingTrackSelector
-keepclassmembers class com.google.android.exoplayer2.trackselection.MappingTrackSelector {
   *** selectTracks(...);
}

-keep class com.google.android.exoplayer2.trackselection.RandomTrackSelection$Factory
-keepclassmembers class com.google.android.exoplayer2.trackselection.RandomTrackSelection$Factory {
   <init>(...);
   <init>(...);
   *** createTrackSelection(...);
}

-keep class com.google.android.exoplayer2.trackselection.RandomTrackSelection
-keepclassmembers class com.google.android.exoplayer2.trackselection.RandomTrackSelection {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSelectedIndex(...);
   *** getSelectionData(...);
   *** getSelectionReason(...);
   *** updateSelectedTrack(...);
}

-keep class com.google.android.exoplayer2.trackselection.TrackSelectionArray
-keepclassmembers class com.google.android.exoplayer2.trackselection.TrackSelectionArray {
   <init>(...);
   *** get(...);
   *** getAll(...);
}

-keep class com.google.android.exoplayer2.trackselection.TrackSelector$InvalidationListener
-keepclassmembers class com.google.android.exoplayer2.trackselection.TrackSelector$InvalidationListener {
}

-keep class mono.com.google.android.exoplayer2.trackselection.TrackSelector_InvalidationListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.trackselection.TrackSelector_InvalidationListenerImplementor {
}

-keep class com.google.android.exoplayer2.trackselection.TrackSelector
-keepclassmembers class com.google.android.exoplayer2.trackselection.TrackSelector {
   <init>(...);
   *** init(...);
   *** invalidate(...);
   *** onSelectionActivated(...);
   *** selectTracks(...);
}

-keep class com.google.android.exoplayer2.trackselection.TrackSelector
-keepclassmembers class com.google.android.exoplayer2.trackselection.TrackSelector {
   *** onSelectionActivated(...);
   *** selectTracks(...);
}

-keep class com.google.android.exoplayer2.trackselection.TrackSelectorResult
-keepclassmembers class com.google.android.exoplayer2.trackselection.TrackSelectorResult {
   <init>(...);
   *** isEquivalent(...);
   *** isEquivalent(...);
   *** isRendererEnabled(...);
}

-keep class com.google.android.exoplayer2.text.CaptionStyleCompat$EdgeType
-keepclassmembers class com.google.android.exoplayer2.text.CaptionStyleCompat$EdgeType {
}

-keep class com.google.android.exoplayer2.text.CaptionStyleCompat
-keepclassmembers class com.google.android.exoplayer2.text.CaptionStyleCompat {
   <init>(...);
   *** createFromCaptionStyle(...);
}

-keep class com.google.android.exoplayer2.text.Cue$AnchorType
-keepclassmembers class com.google.android.exoplayer2.text.Cue$AnchorType {
}

-keep class com.google.android.exoplayer2.text.Cue$LineType
-keepclassmembers class com.google.android.exoplayer2.text.Cue$LineType {
}

-keep class com.google.android.exoplayer2.text.Cue$TextSizeType
-keepclassmembers class com.google.android.exoplayer2.text.Cue$TextSizeType {
}

-keep class com.google.android.exoplayer2.text.Cue
-keepclassmembers class com.google.android.exoplayer2.text.Cue {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.text.Subtitle
-keepclassmembers class com.google.android.exoplayer2.text.Subtitle {
}

-keep class com.google.android.exoplayer2.text.SubtitleDecoder
-keepclassmembers class com.google.android.exoplayer2.text.SubtitleDecoder {
}

-keep class com.google.android.exoplayer2.text.SubtitleDecoderFactory
-keepclassmembers class com.google.android.exoplayer2.text.SubtitleDecoderFactory {
}

-keep class com.google.android.exoplayer2.text.SubtitleDecoderFactory
-keepclassmembers class com.google.android.exoplayer2.text.SubtitleDecoderFactory {
}

-keep class com.google.android.exoplayer2.text.SubtitleDecoderFactory
-keepclassmembers class com.google.android.exoplayer2.text.SubtitleDecoderFactory {
}

-keep class com.google.android.exoplayer2.text.TextOutput
-keepclassmembers class com.google.android.exoplayer2.text.TextOutput {
}

-keep class com.google.android.exoplayer2.text.SimpleSubtitleDecoder
-keepclassmembers class com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
   <init>(...);
   *** getName(...);
   *** createInputBuffer(...);
   *** createOutputBuffer(...);
   *** createUnexpectedDecodeException(...);
   *** decode(...);
   *** decode(...);
   *** releaseOutputBuffer(...);
   *** setPositionUs(...);
}

-keep class com.google.android.exoplayer2.text.SimpleSubtitleDecoder
-keepclassmembers class com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
   *** decode(...);
}

-keep class com.google.android.exoplayer2.text.SubtitleDecoderException
-keepclassmembers class com.google.android.exoplayer2.text.SubtitleDecoderException {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.text.SubtitleInputBuffer
-keepclassmembers class com.google.android.exoplayer2.text.SubtitleInputBuffer {
   <init>(...);
}

-keep class com.google.android.exoplayer2.text.SubtitleOutputBuffer
-keepclassmembers class com.google.android.exoplayer2.text.SubtitleOutputBuffer {
   <init>(...);
   *** getEventTimeCount(...);
   *** getCues(...);
   *** getEventTime(...);
   *** getNextEventTimeIndex(...);
   *** setContent(...);
}

-keep class com.google.android.exoplayer2.text.SubtitleOutputBuffer
-keepclassmembers class com.google.android.exoplayer2.text.SubtitleOutputBuffer {
   *** release(...);
}

-keep class com.google.android.exoplayer2.text.TextRenderer$Output
-keepclassmembers class com.google.android.exoplayer2.text.TextRenderer$Output {
}

-keep class com.google.android.exoplayer2.text.TextRenderer
-keepclassmembers class com.google.android.exoplayer2.text.TextRenderer {
   <init>(...);
   <init>(...);
   *** isEnded(...);
   *** isReady(...);
   *** handleMessage(...);
   *** render(...);
   *** supportsFormat(...);
}

-keep class com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder {
   <init>(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle {
   <init>(...);
   *** getEventTimeCount(...);
   *** getCues(...);
   *** getEventTime(...);
   *** getNextEventTimeIndex(...);
}

-keep class com.google.android.exoplayer2.text.webvtt.WebvttCssStyle$FontSizeUnit
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.WebvttCssStyle$FontSizeUnit {
}

-keep class com.google.android.exoplayer2.text.webvtt.WebvttCssStyle$StyleFlags
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.WebvttCssStyle$StyleFlags {
}

-keep class com.google.android.exoplayer2.text.webvtt.WebvttCssStyle
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.WebvttCssStyle {
   <init>(...);
   *** getBackgroundColor(...);
   *** getFontColor(...);
   *** getFontFamily(...);
   *** getFontSize(...);
   *** getFontSizeUnit(...);
   *** hasBackgroundColor(...);
   *** hasFontColor(...);
   *** isLinethrough(...);
   *** isUnderline(...);
   *** getStyle(...);
   *** getTextAlign(...);
   *** cascadeFrom(...);
   *** getSpecificityScore(...);
   *** reset(...);
   *** setBackgroundColor(...);
   *** setBold(...);
   *** setFontColor(...);
   *** setFontFamily(...);
   *** setFontSize(...);
   *** setFontSizeUnit(...);
   *** setItalic(...);
   *** setLinethrough(...);
   *** setTargetClasses(...);
   *** setTargetId(...);
   *** setTargetTagName(...);
   *** setTargetVoice(...);
   *** setTextAlign(...);
   *** setUnderline(...);
}

-keep class com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder {
   <init>(...);
   *** build(...);
   *** reset(...);
   *** setEndTime(...);
   *** setLine(...);
   *** setLineAnchor(...);
   *** setLineType(...);
   *** setPosition(...);
   *** setPositionAnchor(...);
   *** setStartTime(...);
   *** setText(...);
   *** setTextAlignment(...);
   *** setWidth(...);
}

-keep class com.google.android.exoplayer2.text.webvtt.WebvttCue
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.WebvttCue {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isNormalCue(...);
}

-keep class com.google.android.exoplayer2.text.webvtt.WebvttCueParser
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.WebvttCueParser {
   <init>(...);
   *** parseCue(...);
}

-keep class com.google.android.exoplayer2.text.webvtt.WebvttDecoder
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.WebvttDecoder {
   <init>(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.text.webvtt.WebvttParserUtil
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.WebvttParserUtil {
   *** findNextCueHeader(...);
   *** parsePercentage(...);
   *** parseTimestampUs(...);
   *** validateWebvttHeaderLine(...);
}

-keep class com.google.android.exoplayer2.text.webvtt.WebvttSubtitle
-keepclassmembers class com.google.android.exoplayer2.text.webvtt.WebvttSubtitle {
   <init>(...);
   *** getEventTimeCount(...);
   *** getCues(...);
   *** getEventTime(...);
   *** getNextEventTimeIndex(...);
}

-keep class com.google.android.exoplayer2.text.tx3g.Tx3gDecoder
-keepclassmembers class com.google.android.exoplayer2.text.tx3g.Tx3gDecoder {
   <init>(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.text.ttml.TtmlDecoder
-keepclassmembers class com.google.android.exoplayer2.text.ttml.TtmlDecoder {
   <init>(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.text.ttml.TtmlSubtitle
-keepclassmembers class com.google.android.exoplayer2.text.ttml.TtmlSubtitle {
   *** getEventTimeCount(...);
   *** getCues(...);
   *** getEventTime(...);
   *** getNextEventTimeIndex(...);
}

-keep class com.google.android.exoplayer2.text.subrip.SubripDecoder
-keepclassmembers class com.google.android.exoplayer2.text.subrip.SubripDecoder {
   <init>(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.text.subrip.SubripSubtitle
-keepclassmembers class com.google.android.exoplayer2.text.subrip.SubripSubtitle {
   <init>(...);
   *** getEventTimeCount(...);
   *** getCues(...);
   *** getEventTime(...);
   *** getNextEventTimeIndex(...);
}

-keep class com.google.android.exoplayer2.text.ssa.SsaDecoder
-keepclassmembers class com.google.android.exoplayer2.text.ssa.SsaDecoder {
   <init>(...);
   <init>(...);
   *** decode(...);
   *** parseTimecodeUs(...);
}

-keep class com.google.android.exoplayer2.text.ssa.SsaSubtitle
-keepclassmembers class com.google.android.exoplayer2.text.ssa.SsaSubtitle {
   <init>(...);
   *** getEventTimeCount(...);
   *** getCues(...);
   *** getEventTime(...);
   *** getNextEventTimeIndex(...);
}

-keep class com.google.android.exoplayer2.text.pgs.PgsDecoder
-keepclassmembers class com.google.android.exoplayer2.text.pgs.PgsDecoder {
   <init>(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.text.dvb.DvbDecoder
-keepclassmembers class com.google.android.exoplayer2.text.dvb.DvbDecoder {
   <init>(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.text.dvb.DvbSubtitle
-keepclassmembers class com.google.android.exoplayer2.text.dvb.DvbSubtitle {
   <init>(...);
   *** getEventTimeCount(...);
   *** getCues(...);
   *** getEventTime(...);
   *** getNextEventTimeIndex(...);
}

-keep class com.google.android.exoplayer2.text.cea.Cea608Decoder
-keepclassmembers class com.google.android.exoplayer2.text.cea.Cea608Decoder {
   <init>(...);
   *** isNewSubtitleDataAvailable(...);
   *** getName(...);
   *** createSubtitle(...);
   *** decode(...);
   *** dequeueInputBuffer(...);
   *** dequeueOutputBuffer(...);
   *** flush(...);
   *** queueInputBuffer(...);
   *** release(...);
   *** setPositionUs(...);
}

-keep class com.google.android.exoplayer2.text.cea.Cea708Decoder
-keepclassmembers class com.google.android.exoplayer2.text.cea.Cea708Decoder {
   <init>(...);
   *** isNewSubtitleDataAvailable(...);
   *** getName(...);
   *** createSubtitle(...);
   *** decode(...);
   *** dequeueInputBuffer(...);
   *** dequeueOutputBuffer(...);
   *** flush(...);
   *** queueInputBuffer(...);
   *** release(...);
   *** setPositionUs(...);
}

-keep class com.google.android.exoplayer2.text.cea.CeaDecoder
-keepclassmembers class com.google.android.exoplayer2.text.cea.CeaDecoder {
   <init>(...);
   *** isNewSubtitleDataAvailable(...);
   *** getName(...);
   *** createSubtitle(...);
   *** decode(...);
   *** dequeueInputBuffer(...);
   *** dequeueOutputBuffer(...);
   *** flush(...);
   *** queueInputBuffer(...);
   *** release(...);
   *** releaseOutputBuffer(...);
   *** setPositionUs(...);
}

-keep class com.google.android.exoplayer2.text.cea.CeaDecoder
-keepclassmembers class com.google.android.exoplayer2.text.cea.CeaDecoder {
   *** isNewSubtitleDataAvailable(...);
   *** getName(...);
   *** createSubtitle(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.text.cea.CeaUtil
-keepclassmembers class com.google.android.exoplayer2.text.cea.CeaUtil {
   *** consume(...);
}

-keep class com.google.android.exoplayer2.scheduler.Scheduler
-keepclassmembers class com.google.android.exoplayer2.scheduler.Scheduler {
}

-keep class com.google.android.exoplayer2.scheduler.Scheduler
-keepclassmembers class com.google.android.exoplayer2.scheduler.Scheduler {
}

-keep class com.google.android.exoplayer2.scheduler.Scheduler
-keepclassmembers class com.google.android.exoplayer2.scheduler.Scheduler {
}

-keep class com.google.android.exoplayer2.scheduler.PlatformScheduler$PlatformSchedulerService
-keepclassmembers class com.google.android.exoplayer2.scheduler.PlatformScheduler$PlatformSchedulerService {
   <init>(...);
   *** onStartJob(...);
   *** onStopJob(...);
}

-keep class com.google.android.exoplayer2.scheduler.PlatformScheduler
-keepclassmembers class com.google.android.exoplayer2.scheduler.PlatformScheduler {
   <init>(...);
   *** cancel(...);
   *** schedule(...);
}

-keep class com.google.android.exoplayer2.scheduler.Requirements$NetworkType
-keepclassmembers class com.google.android.exoplayer2.scheduler.Requirements$NetworkType {
}

-keep class com.google.android.exoplayer2.scheduler.Requirements
-keepclassmembers class com.google.android.exoplayer2.scheduler.Requirements {
   <init>(...);
   <init>(...);
   *** isChargingRequired(...);
   *** isIdleRequired(...);
   *** getRequiredNetworkType(...);
   *** getRequirementsData(...);
   *** checkRequirements(...);
}

-keep class com.google.android.exoplayer2.scheduler.RequirementsWatcher$Listener
-keepclassmembers class com.google.android.exoplayer2.scheduler.RequirementsWatcher$Listener {
}

-keep class mono.com.google.android.exoplayer2.scheduler.RequirementsWatcher_ListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.scheduler.RequirementsWatcher_ListenerImplementor {
}

-keep class com.google.android.exoplayer2.scheduler.RequirementsWatcher
-keepclassmembers class com.google.android.exoplayer2.scheduler.RequirementsWatcher {
   <init>(...);
   *** getRequirements(...);
   *** start(...);
   *** stop(...);
}

-keep class com.google.android.exoplayer2.offline.ActionFile
-keepclassmembers class com.google.android.exoplayer2.offline.ActionFile {
   <init>(...);
   *** load(...);
   *** store(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadAction$Deserializer
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadAction$Deserializer {
   <init>(...);
   *** readFromStream(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadAction$Deserializer
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadAction$Deserializer {
   *** readFromStream(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadAction
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadAction {
   <init>(...);
   *** createDownloader(...);
   *** deserializeFromStream(...);
   *** isSameMedia(...);
   *** serializeToStream(...);
   *** toByteArray(...);
   *** writeToStream(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadAction
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadAction {
   *** createDownloader(...);
   *** writeToStream(...);
}

-keep class com.google.android.exoplayer2.offline.DownloaderConstructorHelper
-keepclassmembers class com.google.android.exoplayer2.offline.DownloaderConstructorHelper {
   <init>(...);
   <init>(...);
   *** getCache(...);
   *** getPriorityTaskManager(...);
   *** buildCacheDataSource(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadException
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadException {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadHelper$Callback
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadHelper$Callback {
}

-keep class com.google.android.exoplayer2.offline.DownloadHelper
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadHelper {
   <init>(...);
   *** getPeriodCount(...);
   *** getDownloadAction(...);
   *** getRemoveAction(...);
   *** getTrackGroups(...);
   *** prepare(...);
   *** prepareInternal(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadHelper
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadHelper {
   *** getPeriodCount(...);
   *** getDownloadAction(...);
   *** getRemoveAction(...);
   *** getTrackGroups(...);
   *** prepareInternal(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadManager$Listener
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadManager$Listener {
}

-keep class mono.com.google.android.exoplayer2.offline.DownloadManager_ListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.offline.DownloadManager_ListenerImplementor {
}

-keep class com.google.android.exoplayer2.offline.DownloadManager$TaskState$State
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadManager$TaskState$State {
}

-keep class com.google.android.exoplayer2.offline.DownloadManager$TaskState
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadManager$TaskState {
   *** getStateString(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadManager
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDownloadCount(...);
   *** isIdle(...);
   *** isInitialized(...);
   *** getTaskCount(...);
   *** addListener(...);
   *** getAllTaskStates(...);
   *** getTaskState(...);
   *** handleAction(...);
   *** handleAction(...);
   *** release(...);
   *** removeListener(...);
   *** startDownloads(...);
   *** stopDownloads(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadService$ForegroundNotificationUpdater
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadService$ForegroundNotificationUpdater {
   <init>(...);
   *** run(...);
   *** showNotificationIfNotAlready(...);
   *** startPeriodicUpdates(...);
   *** stopPeriodicUpdates(...);
   *** update(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadService
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadService {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDownloadManager(...);
   *** getRequirements(...);
   *** getScheduler(...);
   *** buildAddActionIntent(...);
   *** getForegroundNotification(...);
   *** onBind(...);
   *** onTaskStateChanged(...);
   *** start(...);
   *** startForeground(...);
   *** startWithAction(...);
}

-keep class com.google.android.exoplayer2.offline.DownloadService
-keepclassmembers class com.google.android.exoplayer2.offline.DownloadService {
   *** getDownloadManager(...);
   *** getScheduler(...);
   *** getForegroundNotification(...);
}

-keep class com.google.android.exoplayer2.offline.FilteringManifestParser
-keepclassmembers class com.google.android.exoplayer2.offline.FilteringManifestParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.android.exoplayer2.offline.Downloader
-keepclassmembers class com.google.android.exoplayer2.offline.Downloader {
}

-keep class com.google.android.exoplayer2.offline.FilterableManifest
-keepclassmembers class com.google.android.exoplayer2.offline.FilterableManifest {
}

-keep class com.google.android.exoplayer2.offline.ProgressiveDownloadAction
-keepclassmembers class com.google.android.exoplayer2.offline.ProgressiveDownloadAction {
   <init>(...);
   *** createDownloader(...);
   *** writeToStream(...);
}

-keep class com.google.android.exoplayer2.offline.ProgressiveDownloader
-keepclassmembers class com.google.android.exoplayer2.offline.ProgressiveDownloader {
   <init>(...);
   *** getDownloadPercentage(...);
   *** getDownloadedBytes(...);
   *** cancel(...);
   *** download(...);
   *** remove(...);
}

-keep class com.google.android.exoplayer2.offline.ProgressiveDownloadHelper
-keepclassmembers class com.google.android.exoplayer2.offline.ProgressiveDownloadHelper {
   <init>(...);
   <init>(...);
   *** getPeriodCount(...);
   *** getDownloadAction(...);
   *** getRemoveAction(...);
   *** getTrackGroups(...);
   *** prepareInternal(...);
}

-keep class com.google.android.exoplayer2.offline.SegmentDownloadAction$SegmentDownloadActionDeserializer
-keepclassmembers class com.google.android.exoplayer2.offline.SegmentDownloadAction$SegmentDownloadActionDeserializer {
   <init>(...);
   *** createDownloadAction(...);
   *** readFromStream(...);
   *** readKey(...);
}

-keep class com.google.android.exoplayer2.offline.SegmentDownloadAction$SegmentDownloadActionDeserializer
-keepclassmembers class com.google.android.exoplayer2.offline.SegmentDownloadAction$SegmentDownloadActionDeserializer {
   *** createDownloadAction(...);
   *** readKey(...);
}

-keep class com.google.android.exoplayer2.offline.SegmentDownloadAction
-keepclassmembers class com.google.android.exoplayer2.offline.SegmentDownloadAction {
   <init>(...);
   *** writeKey(...);
   *** writeToStream(...);
}

-keep class com.google.android.exoplayer2.offline.SegmentDownloadAction
-keepclassmembers class com.google.android.exoplayer2.offline.SegmentDownloadAction {
   *** writeKey(...);
   *** createDownloader(...);
}

-keep class com.google.android.exoplayer2.offline.SegmentDownloader$Segment
-keepclassmembers class com.google.android.exoplayer2.offline.SegmentDownloader$Segment {
   <init>(...);
   *** compareTo(...);
}

-keep class com.google.android.exoplayer2.offline.SegmentDownloader
-keepclassmembers class com.google.android.exoplayer2.offline.SegmentDownloader {
   <init>(...);
   *** getDownloadPercentage(...);
   *** getDownloadedBytes(...);
   *** cancel(...);
   *** download(...);
   *** getManifest(...);
   *** getSegments(...);
   *** remove(...);
}

-keep class com.google.android.exoplayer2.offline.SegmentDownloader
-keepclassmembers class com.google.android.exoplayer2.offline.SegmentDownloader {
   *** getManifest(...);
   *** getSegments(...);
}

-keep class com.google.android.exoplayer2.offline.TrackKey
-keepclassmembers class com.google.android.exoplayer2.offline.TrackKey {
   <init>(...);
}

-keep class com.google.android.exoplayer2.metadata.MetadataDecoder
-keepclassmembers class com.google.android.exoplayer2.metadata.MetadataDecoder {
}

-keep class com.google.android.exoplayer2.metadata.MetadataDecoderFactory
-keepclassmembers class com.google.android.exoplayer2.metadata.MetadataDecoderFactory {
}

-keep class com.google.android.exoplayer2.metadata.MetadataDecoderFactory
-keepclassmembers class com.google.android.exoplayer2.metadata.MetadataDecoderFactory {
}

-keep class com.google.android.exoplayer2.metadata.MetadataDecoderFactory
-keepclassmembers class com.google.android.exoplayer2.metadata.MetadataDecoderFactory {
}

-keep class com.google.android.exoplayer2.metadata.MetadataOutput
-keepclassmembers class com.google.android.exoplayer2.metadata.MetadataOutput {
}

-keep class com.google.android.exoplayer2.metadata.Metadata$Entry
-keepclassmembers class com.google.android.exoplayer2.metadata.Metadata$Entry {
}

-keep class com.google.android.exoplayer2.metadata.Metadata
-keepclassmembers class com.google.android.exoplayer2.metadata.Metadata {
   <init>(...);
   <init>(...);
   *** describeContents(...);
   *** get(...);
   *** length(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.MetadataDecoderException
-keepclassmembers class com.google.android.exoplayer2.metadata.MetadataDecoderException {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.metadata.MetadataInputBuffer
-keepclassmembers class com.google.android.exoplayer2.metadata.MetadataInputBuffer {
   <init>(...);
}

-keep class com.google.android.exoplayer2.metadata.MetadataRenderer$Output
-keepclassmembers class com.google.android.exoplayer2.metadata.MetadataRenderer$Output {
}

-keep class com.google.android.exoplayer2.metadata.MetadataRenderer
-keepclassmembers class com.google.android.exoplayer2.metadata.MetadataRenderer {
   <init>(...);
   <init>(...);
   *** isEnded(...);
   *** isReady(...);
   *** handleMessage(...);
   *** render(...);
   *** supportsFormat(...);
}

-keep class com.google.android.exoplayer2.metadata.scte35.PrivateCommand
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.PrivateCommand {
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.scte35.SpliceCommand
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.scte35.SpliceCommand
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.scte35.SpliceInfoDecoder
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.SpliceInfoDecoder {
   <init>(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$ComponentSplice
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$ComponentSplice {
   *** createFromParcel(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand {
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice {
}

-keep class com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event {
}

-keep class com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand {
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand
-keepclassmembers class com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand {
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.ApicFrame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.ApicFrame {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.BinaryFrame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.BinaryFrame {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.ChapterFrame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.ChapterFrame {
   <init>(...);
   *** getSubFrameCount(...);
   *** getSubFrame(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.ChapterTocFrame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.ChapterTocFrame {
   <init>(...);
   *** getSubFrameCount(...);
   *** getSubFrame(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.CommentFrame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.CommentFrame {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.GeobFrame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.GeobFrame {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate {
}

-keep class com.google.android.exoplayer2.metadata.id3.Id3Decoder
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.Id3Decoder {
   <init>(...);
   <init>(...);
   *** decode(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.Id3Frame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.Id3Frame {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.Id3Frame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.Id3Frame {
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.InternalFrame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.InternalFrame {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.PrivFrame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.PrivFrame {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.TextInformationFrame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.TextInformationFrame {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.id3.UrlLinkFrame
-keepclassmembers class com.google.android.exoplayer2.metadata.id3.UrlLinkFrame {
   <init>(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.emsg.EventMessage
-keepclassmembers class com.google.android.exoplayer2.metadata.emsg.EventMessage {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.metadata.emsg.EventMessageDecoder
-keepclassmembers class com.google.android.exoplayer2.metadata.emsg.EventMessageDecoder {
   <init>(...);
   *** decode(...);
}

-keep class com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder
-keepclassmembers class com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder {
   <init>(...);
   *** encode(...);
}

-keep class com.google.android.exoplayer2.mediacodec.MediaCodecSelector
-keepclassmembers class com.google.android.exoplayer2.mediacodec.MediaCodecSelector {
}

-keep class com.google.android.exoplayer2.mediacodec.MediaCodecSelector
-keepclassmembers class com.google.android.exoplayer2.mediacodec.MediaCodecSelector {
}

-keep class com.google.android.exoplayer2.mediacodec.MediaCodecSelector
-keepclassmembers class com.google.android.exoplayer2.mediacodec.MediaCodecSelector {
}

-keep class com.google.android.exoplayer2.mediacodec.MediaCodecInfo
-keepclassmembers class com.google.android.exoplayer2.mediacodec.MediaCodecInfo {
   *** getMaxSupportedInstances(...);
   *** alignVideoSizeV21(...);
   *** getProfileLevels(...);
   *** isAudioChannelCountSupportedV21(...);
   *** isAudioSampleRateSupportedV21(...);
   *** isCodecSupported(...);
   *** isVideoSizeAndRateSupportedV21(...);
   *** newInstance(...);
   *** newInstance(...);
   *** newPassthroughInstance(...);
}

-keep class com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException
-keepclassmembers class com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.mediacodec.MediaCodecRenderer
-keepclassmembers class com.google.android.exoplayer2.mediacodec.MediaCodecRenderer {
   <init>(...);
   *** getCodec(...);
   *** getCodecInfo(...);
   *** getDequeueOutputBufferTimeoutUs(...);
   *** isEnded(...);
   *** isReady(...);
   *** canKeepCodec(...);
   *** configureCodec(...);
   *** flushCodec(...);
   *** getDecoderInfo(...);
   *** maybeInitCodec(...);
   *** onCodecInitialized(...);
   *** onInputFormatChanged(...);
   *** onOutputFormatChanged(...);
   *** onProcessedOutputBuffer(...);
   *** onQueueInputBuffer(...);
   *** processOutputBuffer(...);
   *** releaseCodec(...);
   *** render(...);
   *** renderToEndOfStream(...);
   *** shouldInitCodec(...);
   *** supportsFormat(...);
   *** supportsFormat(...);
   *** supportsMixedMimeTypeAdaptation(...);
}

-keep class com.google.android.exoplayer2.mediacodec.MediaCodecRenderer
-keepclassmembers class com.google.android.exoplayer2.mediacodec.MediaCodecRenderer {
   *** configureCodec(...);
   *** processOutputBuffer(...);
   *** supportsFormat(...);
}

-keep class com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException
-keepclassmembers class com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException {
}

-keep class com.google.android.exoplayer2.mediacodec.MediaCodecUtil
-keepclassmembers class com.google.android.exoplayer2.mediacodec.MediaCodecUtil {
   *** getPassthroughDecoderInfo(...);
   *** getCodecProfileAndLevel(...);
   *** getDecoderInfo(...);
   *** getDecoderInfos(...);
   *** maxH264DecodableFrameSize(...);
   *** warmDecoderInfoCache(...);
}

-keep class com.google.android.exoplayer2.mediacodec.MediaFormatUtil
-keepclassmembers class com.google.android.exoplayer2.mediacodec.MediaFormatUtil {
   *** maybeSetByteBuffer(...);
   *** maybeSetColorInfo(...);
   *** maybeSetFloat(...);
   *** maybeSetInteger(...);
   *** setCsdBuffers(...);
   *** setString(...);
}

-keep class com.google.android.exoplayer2.extractor.ChunkIndex
-keepclassmembers class com.google.android.exoplayer2.extractor.ChunkIndex {
   <init>(...);
   *** getDurationUs(...);
   *** isSeekable(...);
   *** getChunkIndex(...);
   *** getSeekPoints(...);
}

-keep class com.google.android.exoplayer2.extractor.DefaultExtractorInput
-keepclassmembers class com.google.android.exoplayer2.extractor.DefaultExtractorInput {
   <init>(...);
   *** getLength(...);
   *** getPeekPosition(...);
   *** getPosition(...);
   *** advancePeekPosition(...);
   *** advancePeekPosition(...);
   *** peekFully(...);
   *** peekFully(...);
   *** read(...);
   *** readFully(...);
   *** readFully(...);
   *** resetPeekPosition(...);
   *** setRetryPosition(...);
   *** skip(...);
   *** skipFully(...);
   *** skipFully(...);
}

-keep class com.google.android.exoplayer2.extractor.DefaultExtractorsFactory
-keepclassmembers class com.google.android.exoplayer2.extractor.DefaultExtractorsFactory {
   <init>(...);
   *** createExtractors(...);
   *** setFragmentedMp4ExtractorFlags(...);
   *** setMatroskaExtractorFlags(...);
   *** setMp3ExtractorFlags(...);
   *** setMp4ExtractorFlags(...);
   *** setTsExtractorFlags(...);
   *** setTsExtractorMode(...);
}

-keep class com.google.android.exoplayer2.extractor.DummyTrackOutput
-keepclassmembers class com.google.android.exoplayer2.extractor.DummyTrackOutput {
   <init>(...);
   *** format(...);
   *** sampleData(...);
   *** sampleData(...);
   *** sampleMetadata(...);
}

-keep class com.google.android.exoplayer2.extractor.GaplessInfoHolder
-keepclassmembers class com.google.android.exoplayer2.extractor.GaplessInfoHolder {
   <init>(...);
   *** hasGaplessInfo(...);
   *** setFromMetadata(...);
   *** setFromXingHeaderValue(...);
}

-keep class com.google.android.exoplayer2.extractor.Id3Peeker
-keepclassmembers class com.google.android.exoplayer2.extractor.Id3Peeker {
   <init>(...);
   *** peekId3Data(...);
}

-keep class com.google.android.exoplayer2.extractor.Extractor
-keepclassmembers class com.google.android.exoplayer2.extractor.Extractor {
}

-keep class com.google.android.exoplayer2.extractor.Extractor
-keepclassmembers class com.google.android.exoplayer2.extractor.Extractor {
}

-keep class com.google.android.exoplayer2.extractor.Extractor
-keepclassmembers class com.google.android.exoplayer2.extractor.Extractor {
}

-keep class com.google.android.exoplayer2.extractor.ExtractorInput
-keepclassmembers class com.google.android.exoplayer2.extractor.ExtractorInput {
}

-keep class com.google.android.exoplayer2.extractor.ExtractorOutput
-keepclassmembers class com.google.android.exoplayer2.extractor.ExtractorOutput {
}

-keep class com.google.android.exoplayer2.extractor.ExtractorsFactory
-keepclassmembers class com.google.android.exoplayer2.extractor.ExtractorsFactory {
}

-keep class com.google.android.exoplayer2.extractor.SeekMap$SeekPoints
-keepclassmembers class com.google.android.exoplayer2.extractor.SeekMap$SeekPoints {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.extractor.SeekMap$Unseekable
-keepclassmembers class com.google.android.exoplayer2.extractor.SeekMap$Unseekable {
   <init>(...);
   <init>(...);
   *** getDurationUs(...);
   *** isSeekable(...);
   *** getSeekPoints(...);
}

-keep class com.google.android.exoplayer2.extractor.SeekMap
-keepclassmembers class com.google.android.exoplayer2.extractor.SeekMap {
}

-keep class com.google.android.exoplayer2.extractor.TrackOutput$CryptoData
-keepclassmembers class com.google.android.exoplayer2.extractor.TrackOutput$CryptoData {
   <init>(...);
}

-keep class com.google.android.exoplayer2.extractor.TrackOutput
-keepclassmembers class com.google.android.exoplayer2.extractor.TrackOutput {
}

-keep class com.google.android.exoplayer2.extractor.MpegAudioHeader
-keepclassmembers class com.google.android.exoplayer2.extractor.MpegAudioHeader {
   <init>(...);
   *** getFrameSize(...);
   *** populateHeader(...);
}

-keep class com.google.android.exoplayer2.extractor.PositionHolder
-keepclassmembers class com.google.android.exoplayer2.extractor.PositionHolder {
   <init>(...);
}

-keep class com.google.android.exoplayer2.extractor.SeekPoint
-keepclassmembers class com.google.android.exoplayer2.extractor.SeekPoint {
   <init>(...);
}

-keep class com.google.android.exoplayer2.extractor.wav.WavExtractor
-keepclassmembers class com.google.android.exoplayer2.extractor.wav.WavExtractor {
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.Ac3Extractor
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.Ac3Extractor {
   <init>(...);
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.Ac3Reader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.Ac3Reader {
   <init>(...);
   <init>(...);
   *** consume(...);
   *** createTracks(...);
   *** packetFinished(...);
   *** packetStarted(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.AdtsExtractor
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.AdtsExtractor {
   <init>(...);
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.AdtsReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.AdtsReader {
   <init>(...);
   <init>(...);
   *** consume(...);
   *** createTracks(...);
   *** packetFinished(...);
   *** packetStarted(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory$Flags
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory$Flags {
}

-keep class com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory {
   <init>(...);
   <init>(...);
   <init>(...);
   *** createInitialPayloadReaders(...);
   *** createPayloadReader(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.DtsReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.DtsReader {
   <init>(...);
   *** consume(...);
   *** createTracks(...);
   *** packetFinished(...);
   *** packetStarted(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader {
   <init>(...);
   *** consume(...);
   *** createTracks(...);
   *** packetFinished(...);
   *** packetStarted(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.H262Reader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.H262Reader {
   <init>(...);
   *** consume(...);
   *** createTracks(...);
   *** packetFinished(...);
   *** packetStarted(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.H264Reader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.H264Reader {
   *** consume(...);
   *** createTracks(...);
   *** packetFinished(...);
   *** packetStarted(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.H265Reader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.H265Reader {
   *** consume(...);
   *** createTracks(...);
   *** packetFinished(...);
   *** packetStarted(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.Id3Reader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.Id3Reader {
   <init>(...);
   *** consume(...);
   *** createTracks(...);
   *** packetFinished(...);
   *** packetStarted(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
}

-keep class com.google.android.exoplayer2.extractor.ts.SectionPayloadReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.SectionPayloadReader {
}

-keep class com.google.android.exoplayer2.extractor.ts.TsPayloadReader$DvbSubtitleInfo
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.TsPayloadReader$DvbSubtitleInfo {
   <init>(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo {
   <init>(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory {
}

-keep class com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator {
   <init>(...);
   <init>(...);
   *** getFormatId(...);
   *** getTrackId(...);
   *** generateNewId(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.TsPayloadReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.TsPayloadReader {
}

-keep class com.google.android.exoplayer2.extractor.ts.LatmReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.LatmReader {
   <init>(...);
   *** consume(...);
   *** createTracks(...);
   *** packetFinished(...);
   *** packetStarted(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.MpegAudioReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.MpegAudioReader {
   <init>(...);
   <init>(...);
   *** consume(...);
   *** createTracks(...);
   *** packetFinished(...);
   *** packetStarted(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.PesReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.PesReader {
   <init>(...);
   *** consume(...);
   *** init(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.PsExtractor
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.PsExtractor {
   <init>(...);
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.SectionReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.SectionReader {
   <init>(...);
   *** consume(...);
   *** init(...);
   *** seek(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.SpliceInfoSectionReader
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.SpliceInfoSectionReader {
   <init>(...);
   *** consume(...);
   *** init(...);
}

-keep class com.google.android.exoplayer2.extractor.ts.TsExtractor$Mode
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.TsExtractor$Mode {
}

-keep class com.google.android.exoplayer2.extractor.ts.TsExtractor
-keepclassmembers class com.google.android.exoplayer2.extractor.ts.TsExtractor {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor
-keepclassmembers class com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor {
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.ogg.OggExtractor
-keepclassmembers class com.google.android.exoplayer2.extractor.ogg.OggExtractor {
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$Flags
-keepclassmembers class com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$Flags {
}

-keep class com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor
-keepclassmembers class com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.mp4.Mp4Extractor$Flags
-keepclassmembers class com.google.android.exoplayer2.extractor.mp4.Mp4Extractor$Flags {
}

-keep class com.google.android.exoplayer2.extractor.mp4.Mp4Extractor
-keepclassmembers class com.google.android.exoplayer2.extractor.mp4.Mp4Extractor {
   <init>(...);
   <init>(...);
   *** getDurationUs(...);
   *** isSeekable(...);
   *** getSeekPoints(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil
-keepclassmembers class com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil {
   *** buildPsshAtom(...);
   *** buildPsshAtom(...);
   *** parseSchemeSpecificData(...);
   *** parseUuid(...);
   *** parseVersion(...);
}

-keep class com.google.android.exoplayer2.extractor.mp4.Track$Transformation
-keepclassmembers class com.google.android.exoplayer2.extractor.mp4.Track$Transformation {
}

-keep class com.google.android.exoplayer2.extractor.mp4.Track
-keepclassmembers class com.google.android.exoplayer2.extractor.mp4.Track {
   <init>(...);
   *** getSampleDescriptionEncryptionBox(...);
}

-keep class com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox
-keepclassmembers class com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox {
   <init>(...);
}

-keep class com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Flags
-keepclassmembers class com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Flags {
}

-keep class com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker
-keepclassmembers class com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker {
}

-keep class com.google.android.exoplayer2.extractor.mp3.Mp3Extractor
-keepclassmembers class com.google.android.exoplayer2.extractor.mp3.Mp3Extractor {
   <init>(...);
   <init>(...);
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Flags
-keepclassmembers class com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Flags {
}

-keep class com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor
-keepclassmembers class com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor {
   <init>(...);
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.flv.FlvExtractor
-keepclassmembers class com.google.android.exoplayer2.extractor.flv.FlvExtractor {
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.extractor.amr.AmrExtractor
-keepclassmembers class com.google.android.exoplayer2.extractor.amr.AmrExtractor {
   <init>(...);
   *** init(...);
   *** read(...);
   *** release(...);
   *** seek(...);
   *** sniff(...);
}

-keep class com.google.android.exoplayer2.drm.DecryptionException
-keepclassmembers class com.google.android.exoplayer2.drm.DecryptionException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.drm.DefaultDrmSessionManager$EventListener
-keepclassmembers class com.google.android.exoplayer2.drm.DefaultDrmSessionManager$EventListener {
}

-keep class com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MissingSchemeDataException
-keepclassmembers class com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MissingSchemeDataException {
}

-keep class com.google.android.exoplayer2.drm.DefaultDrmSessionManager$Mode
-keepclassmembers class com.google.android.exoplayer2.drm.DefaultDrmSessionManager$Mode {
}

-keep class com.google.android.exoplayer2.drm.DefaultDrmSessionManager
-keepclassmembers class com.google.android.exoplayer2.drm.DefaultDrmSessionManager {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** acquireSession(...);
   *** addListener(...);
   *** canAcquireSession(...);
   *** getPropertyByteArray(...);
   *** getPropertyString(...);
   *** newFrameworkInstance(...);
   *** newFrameworkInstance(...);
   *** newPlayReadyInstance(...);
   *** newPlayReadyInstance(...);
   *** newWidevineInstance(...);
   *** newWidevineInstance(...);
   *** onProvisionCompleted(...);
   *** onProvisionError(...);
   *** releaseSession(...);
   *** removeListener(...);
   *** setMode(...);
   *** setPropertyByteArray(...);
   *** setPropertyString(...);
}

-keep class com.google.android.exoplayer2.drm.DrmInitData$SchemeData
-keepclassmembers class com.google.android.exoplayer2.drm.DrmInitData$SchemeData {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasData(...);
   *** canReplace(...);
   *** describeContents(...);
   *** matches(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.drm.DrmInitData
-keepclassmembers class com.google.android.exoplayer2.drm.DrmInitData {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** compare(...);
   *** copyWithSchemeType(...);
   *** createSessionCreationData(...);
   *** describeContents(...);
   *** get(...);
   *** get(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.drm.ErrorStateDrmSession
-keepclassmembers class com.google.android.exoplayer2.drm.ErrorStateDrmSession {
   <init>(...);
   *** getError(...);
   *** getMediaCrypto(...);
   *** getState(...);
   *** getOfflineLicenseKeySetId(...);
   *** queryKeyStatus(...);
}

-keep class com.google.android.exoplayer2.drm.FrameworkMediaCrypto
-keepclassmembers class com.google.android.exoplayer2.drm.FrameworkMediaCrypto {
   <init>(...);
   <init>(...);
   *** getWrappedMediaCrypto(...);
   *** requiresSecureDecoderComponent(...);
}

-keep class com.google.android.exoplayer2.drm.FrameworkMediaDrm
-keepclassmembers class com.google.android.exoplayer2.drm.FrameworkMediaDrm {
   *** getProvisionRequest(...);
   *** closeSession(...);
   *** createMediaCrypto(...);
   *** getKeyRequest(...);
   *** getPropertyByteArray(...);
   *** getPropertyString(...);
   *** newInstance(...);
   *** openSession(...);
   *** provideKeyResponse(...);
   *** provideProvisionResponse(...);
   *** queryKeyStatus(...);
   *** release(...);
   *** restoreKeys(...);
   *** setOnEventListener(...);
   *** setOnKeyStatusChangeListener(...);
   *** setPropertyByteArray(...);
   *** setPropertyString(...);
}

-keep class com.google.android.exoplayer2.drm.HttpMediaDrmCallback
-keepclassmembers class com.google.android.exoplayer2.drm.HttpMediaDrmCallback {
   <init>(...);
   <init>(...);
   *** clearAllKeyRequestProperties(...);
   *** clearKeyRequestProperty(...);
   *** executeKeyRequest(...);
   *** executeProvisionRequest(...);
   *** setKeyRequestProperty(...);
}

-keep class com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener$EventDispatcher
-keepclassmembers class com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener$EventDispatcher {
   <init>(...);
   *** addListener(...);
   *** drmKeysLoaded(...);
   *** drmKeysRemoved(...);
   *** drmKeysRestored(...);
   *** drmSessionManagerError(...);
   *** removeListener(...);
}

-keep class com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener
-keepclassmembers class com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener {
}

-keep class mono.com.google.android.exoplayer2.drm.DefaultDrmSessionEventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.drm.DefaultDrmSessionEventListenerImplementor {
}

-keep class com.google.android.exoplayer2.drm.DrmSession$DrmSessionException
-keepclassmembers class com.google.android.exoplayer2.drm.DrmSession$DrmSessionException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.drm.DrmSession$State
-keepclassmembers class com.google.android.exoplayer2.drm.DrmSession$State {
}

-keep class com.google.android.exoplayer2.drm.DrmSession
-keepclassmembers class com.google.android.exoplayer2.drm.DrmSession {
}

-keep class com.google.android.exoplayer2.drm.DrmSession
-keepclassmembers class com.google.android.exoplayer2.drm.DrmSession {
}

-keep class com.google.android.exoplayer2.drm.DrmSession
-keepclassmembers class com.google.android.exoplayer2.drm.DrmSession {
}

-keep class com.google.android.exoplayer2.drm.DrmSessionManager
-keepclassmembers class com.google.android.exoplayer2.drm.DrmSessionManager {
}

-keep class com.google.android.exoplayer2.drm.ExoMediaCrypto
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaCrypto {
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm$DefaultKeyRequest
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm$DefaultKeyRequest {
   <init>(...);
   *** getDefaultUrl(...);
   *** getData(...);
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm$DefaultKeyStatus
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm$DefaultKeyStatus {
   *** getStatusCode(...);
   *** getKeyId(...);
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm$DefaultProvisionRequest
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm$DefaultProvisionRequest {
   <init>(...);
   *** getDefaultUrl(...);
   *** getData(...);
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm$KeyRequest
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm$KeyRequest {
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm$KeyStatus
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm$KeyStatus {
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm$OnEventListener
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm$OnEventListener {
}

-keep class mono.com.google.android.exoplayer2.drm.ExoMediaDrm_OnEventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.drm.ExoMediaDrm_OnEventListenerImplementor {
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm$OnKeyStatusChangeListener
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm$OnKeyStatusChangeListener {
}

-keep class mono.com.google.android.exoplayer2.drm.ExoMediaDrm_OnKeyStatusChangeListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.drm.ExoMediaDrm_OnKeyStatusChangeListenerImplementor {
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm$ProvisionRequest
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm$ProvisionRequest {
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm {
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm {
}

-keep class com.google.android.exoplayer2.drm.ExoMediaDrm
-keepclassmembers class com.google.android.exoplayer2.drm.ExoMediaDrm {
}

-keep class com.google.android.exoplayer2.drm.MediaDrmCallback
-keepclassmembers class com.google.android.exoplayer2.drm.MediaDrmCallback {
}

-keep class com.google.android.exoplayer2.drm.KeysExpiredException
-keepclassmembers class com.google.android.exoplayer2.drm.KeysExpiredException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.drm.LocalMediaDrmCallback
-keepclassmembers class com.google.android.exoplayer2.drm.LocalMediaDrmCallback {
   <init>(...);
   *** executeKeyRequest(...);
   *** executeProvisionRequest(...);
}

-keep class com.google.android.exoplayer2.drm.OfflineLicenseHelper
-keepclassmembers class com.google.android.exoplayer2.drm.OfflineLicenseHelper {
   <init>(...);
   *** downloadLicense(...);
   *** getLicenseDurationRemainingSec(...);
   *** getPropertyByteArray(...);
   *** getPropertyString(...);
   *** newWidevineInstance(...);
   *** newWidevineInstance(...);
   *** newWidevineInstance(...);
   *** release(...);
   *** releaseLicense(...);
   *** renewLicense(...);
   *** setPropertyByteArray(...);
   *** setPropertyString(...);
}

-keep class com.google.android.exoplayer2.drm.UnsupportedDrmException$Reason
-keepclassmembers class com.google.android.exoplayer2.drm.UnsupportedDrmException$Reason {
}

-keep class com.google.android.exoplayer2.drm.UnsupportedDrmException
-keepclassmembers class com.google.android.exoplayer2.drm.UnsupportedDrmException {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.drm.WidevineUtil
-keepclassmembers class com.google.android.exoplayer2.drm.WidevineUtil {
   *** getLicenseDurationRemainingSec(...);
}

-keep class com.google.android.exoplayer2.decoder.Buffer
-keepclassmembers class com.google.android.exoplayer2.decoder.Buffer {
   <init>(...);
   *** isDecodeOnly(...);
   *** isEndOfStream(...);
   *** isKeyFrame(...);
   *** addFlag(...);
   *** clear(...);
   *** clearFlag(...);
   *** getFlag(...);
   *** setFlags(...);
}

-keep class com.google.android.exoplayer2.decoder.Buffer
-keepclassmembers class com.google.android.exoplayer2.decoder.Buffer {
}

-keep class com.google.android.exoplayer2.decoder.CryptoInfo
-keepclassmembers class com.google.android.exoplayer2.decoder.CryptoInfo {
   <init>(...);
   *** getFrameworkCryptoInfoV16(...);
   *** set(...);
}

-keep class com.google.android.exoplayer2.decoder.DecoderCounters
-keepclassmembers class com.google.android.exoplayer2.decoder.DecoderCounters {
   <init>(...);
   *** ensureUpdated(...);
   *** merge(...);
}

-keep class com.google.android.exoplayer2.decoder.DecoderInputBuffer$BufferReplacementMode
-keepclassmembers class com.google.android.exoplayer2.decoder.DecoderInputBuffer$BufferReplacementMode {
}

-keep class com.google.android.exoplayer2.decoder.DecoderInputBuffer
-keepclassmembers class com.google.android.exoplayer2.decoder.DecoderInputBuffer {
   <init>(...);
   *** isEncrypted(...);
   *** isFlagsOnly(...);
   *** ensureSpaceForWrite(...);
   *** flip(...);
   *** newFlagsOnlyInstance(...);
}

-keep class com.google.android.exoplayer2.decoder.Decoder
-keepclassmembers class com.google.android.exoplayer2.decoder.Decoder {
}

-keep class com.google.android.exoplayer2.decoder.OutputBuffer
-keepclassmembers class com.google.android.exoplayer2.decoder.OutputBuffer {
   <init>(...);
   *** release(...);
}

-keep class com.google.android.exoplayer2.decoder.OutputBuffer
-keepclassmembers class com.google.android.exoplayer2.decoder.OutputBuffer {
   *** release(...);
}

-keep class com.google.android.exoplayer2.decoder.SimpleDecoder
-keepclassmembers class com.google.android.exoplayer2.decoder.SimpleDecoder {
   <init>(...);
   *** dequeueInputBuffer(...);
   *** dequeueOutputBuffer(...);
   *** flush(...);
   *** queueInputBuffer(...);
   *** release(...);
   *** releaseOutputBuffer(...);
   *** setInitialInputBufferSize(...);
   *** getName(...);
}

-keep class com.google.android.exoplayer2.decoder.SimpleDecoder
-keepclassmembers class com.google.android.exoplayer2.decoder.SimpleDecoder {
   *** getName(...);
}

-keep class com.google.android.exoplayer2.decoder.SimpleOutputBuffer
-keepclassmembers class com.google.android.exoplayer2.decoder.SimpleOutputBuffer {
   <init>(...);
   *** init(...);
   *** release(...);
}

-keep class com.google.android.exoplayer2.core.BuildConfig
-keepclassmembers class com.google.android.exoplayer2.core.BuildConfig {
   <init>(...);
}

-keep class com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo$StreamType
-keepclassmembers class com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo$StreamType {
}

-keep class com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo
-keepclassmembers class com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo {
}

-keep class com.google.android.exoplayer2.audio.Ac3Util
-keepclassmembers class com.google.android.exoplayer2.audio.Ac3Util {
   *** getAc3SyncframeAudioSampleCount(...);
   *** findTrueHdSyncframeOffset(...);
   *** parseAc3AnnexFFormat(...);
   *** parseAc3SyncframeInfo(...);
   *** parseAc3SyncframeSize(...);
   *** parseEAc3AnnexFFormat(...);
   *** parseEAc3SyncframeAudioSampleCount(...);
   *** parseTrueHdSyncframeAudioSampleCount(...);
   *** parseTrueHdSyncframeAudioSampleCount(...);
}

-keep class com.google.android.exoplayer2.audio.AudioAttributes$Builder
-keepclassmembers class com.google.android.exoplayer2.audio.AudioAttributes$Builder {
   <init>(...);
   *** build(...);
   *** setContentType(...);
   *** setFlags(...);
   *** setUsage(...);
}

-keep class com.google.android.exoplayer2.audio.AudioAttributes
-keepclassmembers class com.google.android.exoplayer2.audio.AudioAttributes {
}

-keep class com.google.android.exoplayer2.audio.AudioCapabilities
-keepclassmembers class com.google.android.exoplayer2.audio.AudioCapabilities {
   *** getMaxChannelCount(...);
   *** getCapabilities(...);
   *** supportsEncoding(...);
}

-keep class com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener
-keepclassmembers class com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener {
}

-keep class mono.com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver_ListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver_ListenerImplementor {
}

-keep class com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver
-keepclassmembers class com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver {
   <init>(...);
   *** register(...);
   *** unregister(...);
}

-keep class com.google.android.exoplayer2.audio.AudioDecoderException
-keepclassmembers class com.google.android.exoplayer2.audio.AudioDecoderException {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.audio.DefaultAudioSink$AudioProcessorChain
-keepclassmembers class com.google.android.exoplayer2.audio.DefaultAudioSink$AudioProcessorChain {
}

-keep class com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain
-keepclassmembers class com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain {
   <init>(...);
   *** getSkippedOutputFrameCount(...);
   *** applyPlaybackParameters(...);
   *** getAudioProcessors(...);
   *** getMediaDuration(...);
}

-keep class com.google.android.exoplayer2.audio.DefaultAudioSink$InvalidAudioTrackTimestampException
-keepclassmembers class com.google.android.exoplayer2.audio.DefaultAudioSink$InvalidAudioTrackTimestampException {
}

-keep class com.google.android.exoplayer2.audio.DefaultAudioSink
-keepclassmembers class com.google.android.exoplayer2.audio.DefaultAudioSink {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasPendingData(...);
   *** isEnded(...);
   *** getPlaybackParameters(...);
   *** configure(...);
   *** disableTunneling(...);
   *** enableTunnelingV21(...);
   *** getCurrentPositionUs(...);
   *** handleBuffer(...);
   *** handleDiscontinuity(...);
   *** isEncodingSupported(...);
   *** pause(...);
   *** play(...);
   *** playToEndOfStream(...);
   *** release(...);
   *** reset(...);
   *** setAudioAttributes(...);
   *** setAudioSessionId(...);
   *** setListener(...);
   *** setPlaybackParameters(...);
   *** setVolume(...);
}

-keep class com.google.android.exoplayer2.audio.DtsUtil
-keepclassmembers class com.google.android.exoplayer2.audio.DtsUtil {
   *** getDtsFrameSize(...);
   *** isSyncWord(...);
   *** parseDtsAudioSampleCount(...);
   *** parseDtsAudioSampleCount(...);
   *** parseDtsFormat(...);
}

-keep class com.google.android.exoplayer2.audio.AudioProcessor$UnhandledFormatException
-keepclassmembers class com.google.android.exoplayer2.audio.AudioProcessor$UnhandledFormatException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.audio.AudioProcessor
-keepclassmembers class com.google.android.exoplayer2.audio.AudioProcessor {
}

-keep class com.google.android.exoplayer2.audio.AudioProcessor
-keepclassmembers class com.google.android.exoplayer2.audio.AudioProcessor {
}

-keep class com.google.android.exoplayer2.audio.AudioProcessor
-keepclassmembers class com.google.android.exoplayer2.audio.AudioProcessor {
}

-keep class com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher
-keepclassmembers class com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher {
   <init>(...);
   *** audioSessionId(...);
   *** audioTrackUnderrun(...);
   *** decoderInitialized(...);
   *** disabled(...);
   *** enabled(...);
   *** inputFormatChanged(...);
}

-keep class com.google.android.exoplayer2.audio.AudioRendererEventListener
-keepclassmembers class com.google.android.exoplayer2.audio.AudioRendererEventListener {
}

-keep class mono.com.google.android.exoplayer2.audio.AudioRendererEventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.audio.AudioRendererEventListenerImplementor {
}

-keep class com.google.android.exoplayer2.audio.AudioSink$ConfigurationException
-keepclassmembers class com.google.android.exoplayer2.audio.AudioSink$ConfigurationException {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.audio.AudioSink$InitializationException
-keepclassmembers class com.google.android.exoplayer2.audio.AudioSink$InitializationException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.audio.AudioSink$Listener
-keepclassmembers class com.google.android.exoplayer2.audio.AudioSink$Listener {
}

-keep class mono.com.google.android.exoplayer2.audio.AudioSink_ListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.audio.AudioSink_ListenerImplementor {
}

-keep class com.google.android.exoplayer2.audio.AudioSink$WriteException
-keepclassmembers class com.google.android.exoplayer2.audio.AudioSink$WriteException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.audio.AudioSink
-keepclassmembers class com.google.android.exoplayer2.audio.AudioSink {
}

-keep class com.google.android.exoplayer2.audio.AudioSink
-keepclassmembers class com.google.android.exoplayer2.audio.AudioSink {
}

-keep class com.google.android.exoplayer2.audio.AudioSink
-keepclassmembers class com.google.android.exoplayer2.audio.AudioSink {
}

-keep class com.google.android.exoplayer2.audio.MediaCodecAudioRenderer
-keepclassmembers class com.google.android.exoplayer2.audio.MediaCodecAudioRenderer {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPlaybackParameters(...);
   *** getPositionUs(...);
   *** allowPassthrough(...);
   *** configureCodec(...);
   *** getCodecMaxInputSize(...);
   *** getMediaFormat(...);
   *** onAudioSessionId(...);
   *** onAudioTrackPositionDiscontinuity(...);
   *** onAudioTrackUnderrun(...);
   *** processOutputBuffer(...);
   *** setPlaybackParameters(...);
   *** supportsFormat(...);
}

-keep class com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor
-keepclassmembers class com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor {
   <init>(...);
   *** isActive(...);
   *** isEnded(...);
   *** getOutput(...);
   *** getOutputChannelCount(...);
   *** getOutputEncoding(...);
   *** getOutputSampleRateHz(...);
   *** getSkippedFrames(...);
   *** configure(...);
   *** flush(...);
   *** queueEndOfStream(...);
   *** queueInput(...);
   *** reset(...);
   *** setEnabled(...);
}

-keep class com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer
-keepclassmembers class com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEnded(...);
   *** isReady(...);
   *** getOutputFormat(...);
   *** getPlaybackParameters(...);
   *** getPositionUs(...);
   *** createDecoder(...);
   *** onAudioSessionId(...);
   *** onAudioTrackPositionDiscontinuity(...);
   *** onAudioTrackUnderrun(...);
   *** render(...);
   *** setPlaybackParameters(...);
   *** supportsFormat(...);
   *** supportsFormatInternal(...);
   *** supportsOutputEncoding(...);
}

-keep class com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer
-keepclassmembers class com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer {
   *** createDecoder(...);
   *** supportsFormatInternal(...);
}

-keep class com.google.android.exoplayer2.audio.SonicAudioProcessor
-keepclassmembers class com.google.android.exoplayer2.audio.SonicAudioProcessor {
   <init>(...);
   *** isActive(...);
   *** isEnded(...);
   *** getOutput(...);
   *** getOutputChannelCount(...);
   *** getOutputEncoding(...);
   *** getOutputSampleRateHz(...);
   *** setOutputSampleRateHz(...);
   *** configure(...);
   *** flush(...);
   *** queueEndOfStream(...);
   *** queueInput(...);
   *** reset(...);
   *** scaleDurationForSpeedup(...);
   *** setPitch(...);
   *** setSpeed(...);
}

-keep class com.google.android.exoplayer2.analytics.DefaultAnalyticsListener
-keepclassmembers class com.google.android.exoplayer2.analytics.DefaultAnalyticsListener {
   <init>(...);
}

-keep class com.google.android.exoplayer2.analytics.DefaultAnalyticsListener
-keepclassmembers class com.google.android.exoplayer2.analytics.DefaultAnalyticsListener {
}

-keep class com.google.android.exoplayer2.source.DynamicConcatenatingMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.DynamicConcatenatingMediaSource {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.ConcatenatingMediaSource$MediaSourceHolder
-keepclassmembers class com.google.android.exoplayer2.source.ConcatenatingMediaSource$MediaSourceHolder {
   <init>(...);
   *** reset(...);
}

-keep class com.google.android.exoplayer2.source.ConcatenatingMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.ConcatenatingMediaSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSize(...);
   *** addMediaSource(...);
   *** addMediaSource(...);
   *** addMediaSource(...);
   *** addMediaSource(...);
   *** addMediaSources(...);
   *** addMediaSources(...);
   *** addMediaSources(...);
   *** addMediaSources(...);
   *** clear(...);
   *** clear(...);
   *** createPeriod(...);
   *** getMediaSource(...);
   *** handleMessage(...);
   *** moveMediaSource(...);
   *** moveMediaSource(...);
   *** prepareSourceInternal(...);
   *** releasePeriod(...);
   *** releaseSourceInternal(...);
   *** removeMediaSource(...);
   *** removeMediaSource(...);
}

-keep class com.google.android.exoplayer2.source.BaseMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.BaseMediaSource {
   <init>(...);
   *** addEventListener(...);
   *** createEventDispatcher(...);
   *** createEventDispatcher(...);
   *** createEventDispatcher(...);
   *** prepareSource(...);
   *** prepareSourceInternal(...);
   *** refreshSourceInfo(...);
   *** releaseSource(...);
   *** releaseSourceInternal(...);
   *** removeEventListener(...);
   *** createPeriod(...);
   *** maybeThrowSourceInfoRefreshError(...);
   *** releasePeriod(...);
}

-keep class com.google.android.exoplayer2.source.BaseMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.BaseMediaSource {
   *** prepareSourceInternal(...);
   *** releaseSourceInternal(...);
   *** createPeriod(...);
   *** maybeThrowSourceInfoRefreshError(...);
   *** releasePeriod(...);
}

-keep class com.google.android.exoplayer2.source.BehindLiveWindowException
-keepclassmembers class com.google.android.exoplayer2.source.BehindLiveWindowException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.ClippingMediaPeriod
-keepclassmembers class com.google.android.exoplayer2.source.ClippingMediaPeriod {
   <init>(...);
   *** getBufferedPositionUs(...);
   *** getNextLoadPositionUs(...);
   *** getTrackGroups(...);
   *** continueLoading(...);
   *** discardBuffer(...);
   *** getAdjustedSeekPositionUs(...);
   *** maybeThrowPrepareError(...);
   *** onContinueLoadingRequested(...);
   *** onPrepared(...);
   *** prepare(...);
   *** readDiscontinuity(...);
   *** reevaluateBuffer(...);
   *** seekToUs(...);
   *** selectTracks(...);
   *** updateClipping(...);
}

-keep class com.google.android.exoplayer2.source.ClippingMediaSource$IllegalClippingException$Reason
-keepclassmembers class com.google.android.exoplayer2.source.ClippingMediaSource$IllegalClippingException$Reason {
}

-keep class com.google.android.exoplayer2.source.ClippingMediaSource$IllegalClippingException
-keepclassmembers class com.google.android.exoplayer2.source.ClippingMediaSource$IllegalClippingException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.ClippingMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.ClippingMediaSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** createPeriod(...);
   *** getMediaTimeForChildMediaTime(...);
   *** onChildSourceInfoRefreshed(...);
   *** releasePeriod(...);
}

-keep class com.google.android.exoplayer2.source.CompositeMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.CompositeMediaSource {
   <init>(...);
   *** getMediaPeriodIdForChildMediaPeriodId(...);
   *** getMediaTimeForChildMediaTime(...);
   *** getWindowIndexForChildWindowIndex(...);
   *** maybeThrowSourceInfoRefreshError(...);
   *** prepareChildSource(...);
   *** prepareSourceInternal(...);
   *** releaseChildSource(...);
   *** releaseSourceInternal(...);
}

-keep class com.google.android.exoplayer2.source.CompositeMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.CompositeMediaSource {
   *** createPeriod(...);
   *** releasePeriod(...);
}

-keep class com.google.android.exoplayer2.source.CompositeSequenceableLoader
-keepclassmembers class com.google.android.exoplayer2.source.CompositeSequenceableLoader {
   <init>(...);
   *** getBufferedPositionUs(...);
   *** getNextLoadPositionUs(...);
   *** continueLoading(...);
   *** reevaluateBuffer(...);
}

-keep class com.google.android.exoplayer2.source.DefaultCompositeSequenceableLoaderFactory
-keepclassmembers class com.google.android.exoplayer2.source.DefaultCompositeSequenceableLoaderFactory {
   <init>(...);
   *** createCompositeSequenceableLoader(...);
}

-keep class com.google.android.exoplayer2.source.DefaultMediaSourceEventListener
-keepclassmembers class com.google.android.exoplayer2.source.DefaultMediaSourceEventListener {
   <init>(...);
   *** onDownstreamFormatChanged(...);
   *** onLoadCanceled(...);
   *** onLoadCompleted(...);
   *** onLoadError(...);
   *** onLoadStarted(...);
   *** onMediaPeriodCreated(...);
   *** onMediaPeriodReleased(...);
   *** onReadingStarted(...);
   *** onUpstreamDiscarded(...);
}

-keep class com.google.android.exoplayer2.source.DefaultMediaSourceEventListener
-keepclassmembers class com.google.android.exoplayer2.source.DefaultMediaSourceEventListener {
}

-keep class com.google.android.exoplayer2.source.DeferredMediaPeriod$PrepareErrorListener
-keepclassmembers class com.google.android.exoplayer2.source.DeferredMediaPeriod$PrepareErrorListener {
}

-keep class mono.com.google.android.exoplayer2.source.DeferredMediaPeriod_PrepareErrorListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.source.DeferredMediaPeriod_PrepareErrorListenerImplementor {
}

-keep class com.google.android.exoplayer2.source.DeferredMediaPeriod
-keepclassmembers class com.google.android.exoplayer2.source.DeferredMediaPeriod {
   <init>(...);
   *** getBufferedPositionUs(...);
   *** getNextLoadPositionUs(...);
   *** getTrackGroups(...);
   *** continueLoading(...);
   *** createPeriod(...);
   *** discardBuffer(...);
   *** getAdjustedSeekPositionUs(...);
   *** maybeThrowPrepareError(...);
   *** onContinueLoadingRequested(...);
   *** onPrepared(...);
   *** prepare(...);
   *** readDiscontinuity(...);
   *** reevaluateBuffer(...);
   *** releasePeriod(...);
   *** seekToUs(...);
   *** selectTracks(...);
   *** setDefaultPreparePositionUs(...);
   *** setPrepareErrorListener(...);
}

-keep class com.google.android.exoplayer2.source.EmptySampleStream
-keepclassmembers class com.google.android.exoplayer2.source.EmptySampleStream {
   <init>(...);
   *** isReady(...);
   *** maybeThrowError(...);
   *** readData(...);
   *** skipData(...);
}

-keep class com.google.android.exoplayer2.source.ExtractorMediaSource$EventListener
-keepclassmembers class com.google.android.exoplayer2.source.ExtractorMediaSource$EventListener {
}

-keep class mono.com.google.android.exoplayer2.source.ExtractorMediaSource_EventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.source.ExtractorMediaSource_EventListenerImplementor {
}

-keep class com.google.android.exoplayer2.source.ExtractorMediaSource$Factory
-keepclassmembers class com.google.android.exoplayer2.source.ExtractorMediaSource$Factory {
   <init>(...);
   *** createMediaSource(...);
   *** createMediaSource(...);
   *** getSupportedTypes(...);
   *** setContinueLoadingCheckIntervalBytes(...);
   *** setCustomCacheKey(...);
   *** setExtractorsFactory(...);
   *** setMinLoadableRetryCount(...);
   *** setTag(...);
}

-keep class com.google.android.exoplayer2.source.ExtractorMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.ExtractorMediaSource {
   <init>(...);
   <init>(...);
   <init>(...);
   *** createPeriod(...);
   *** maybeThrowSourceInfoRefreshError(...);
   *** onSourceInfoRefreshed(...);
   *** prepareSourceInternal(...);
   *** releasePeriod(...);
   *** releaseSourceInternal(...);
}

-keep class com.google.android.exoplayer2.source.ForwardingTimeline
-keepclassmembers class com.google.android.exoplayer2.source.ForwardingTimeline {
   <init>(...);
   *** getPeriodCount(...);
   *** getWindowCount(...);
   *** getIndexOfPeriod(...);
   *** getPeriod(...);
   *** getWindow(...);
}

-keep class com.google.android.exoplayer2.source.ForwardingTimeline
-keepclassmembers class com.google.android.exoplayer2.source.ForwardingTimeline {
}

-keep class com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener
-keepclassmembers class com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener {
}

-keep class com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory
-keepclassmembers class com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory {
}

-keep class com.google.android.exoplayer2.source.MediaPeriod$Callback
-keepclassmembers class com.google.android.exoplayer2.source.MediaPeriod$Callback {
}

-keep class com.google.android.exoplayer2.source.MediaPeriod
-keepclassmembers class com.google.android.exoplayer2.source.MediaPeriod {
}

-keep class com.google.android.exoplayer2.source.MediaSource$MediaPeriodId
-keepclassmembers class com.google.android.exoplayer2.source.MediaSource$MediaPeriodId {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isAd(...);
   *** copyWithPeriodIndex(...);
}

-keep class com.google.android.exoplayer2.source.MediaSource$SourceInfoRefreshListener
-keepclassmembers class com.google.android.exoplayer2.source.MediaSource$SourceInfoRefreshListener {
}

-keep class mono.com.google.android.exoplayer2.source.MediaSource_SourceInfoRefreshListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.source.MediaSource_SourceInfoRefreshListenerImplementor {
}

-keep class com.google.android.exoplayer2.source.MediaSource
-keepclassmembers class com.google.android.exoplayer2.source.MediaSource {
}

-keep class com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher
-keepclassmembers class com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher {
   <init>(...);
   *** addEventListener(...);
   *** downstreamFormatChanged(...);
   *** downstreamFormatChanged(...);
   *** loadCanceled(...);
   *** loadCanceled(...);
   *** loadCanceled(...);
   *** loadCompleted(...);
   *** loadCompleted(...);
   *** loadCompleted(...);
   *** loadError(...);
   *** loadError(...);
   *** loadError(...);
   *** loadStarted(...);
   *** loadStarted(...);
   *** loadStarted(...);
   *** mediaPeriodCreated(...);
   *** mediaPeriodReleased(...);
   *** readingStarted(...);
   *** removeEventListener(...);
   *** upstreamDiscarded(...);
   *** upstreamDiscarded(...);
   *** withParameters(...);
}

-keep class com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo
-keepclassmembers class com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData
-keepclassmembers class com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.MediaSourceEventListener
-keepclassmembers class com.google.android.exoplayer2.source.MediaSourceEventListener {
}

-keep class mono.com.google.android.exoplayer2.source.MediaSourceEventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.source.MediaSourceEventListenerImplementor {
}

-keep class com.google.android.exoplayer2.source.SampleStream
-keepclassmembers class com.google.android.exoplayer2.source.SampleStream {
}

-keep class com.google.android.exoplayer2.source.SequenceableLoader$Callback
-keepclassmembers class com.google.android.exoplayer2.source.SequenceableLoader$Callback {
}

-keep class com.google.android.exoplayer2.source.SequenceableLoader
-keepclassmembers class com.google.android.exoplayer2.source.SequenceableLoader {
}

-keep class com.google.android.exoplayer2.source.ShuffleOrder$DefaultShuffleOrder
-keepclassmembers class com.google.android.exoplayer2.source.ShuffleOrder$DefaultShuffleOrder {
   <init>(...);
   <init>(...);
   *** getFirstIndex(...);
   *** getLastIndex(...);
   *** getLength(...);
   *** cloneAndClear(...);
   *** cloneAndInsert(...);
   *** cloneAndRemove(...);
   *** getNextIndex(...);
   *** getPreviousIndex(...);
}

-keep class com.google.android.exoplayer2.source.ShuffleOrder$UnshuffledShuffleOrder
-keepclassmembers class com.google.android.exoplayer2.source.ShuffleOrder$UnshuffledShuffleOrder {
   <init>(...);
   *** getFirstIndex(...);
   *** getLastIndex(...);
   *** getLength(...);
   *** cloneAndClear(...);
   *** cloneAndInsert(...);
   *** cloneAndRemove(...);
   *** getNextIndex(...);
   *** getPreviousIndex(...);
}

-keep class com.google.android.exoplayer2.source.ShuffleOrder
-keepclassmembers class com.google.android.exoplayer2.source.ShuffleOrder {
}

-keep class com.google.android.exoplayer2.source.LoopingMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.LoopingMediaSource {
   <init>(...);
   <init>(...);
   *** createPeriod(...);
   *** onChildSourceInfoRefreshed(...);
   *** releasePeriod(...);
}

-keep class com.google.android.exoplayer2.source.MergingMediaSource$IllegalMergeException$Reason
-keepclassmembers class com.google.android.exoplayer2.source.MergingMediaSource$IllegalMergeException$Reason {
}

-keep class com.google.android.exoplayer2.source.MergingMediaSource$IllegalMergeException
-keepclassmembers class com.google.android.exoplayer2.source.MergingMediaSource$IllegalMergeException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.MergingMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.MergingMediaSource {
   <init>(...);
   <init>(...);
   *** createPeriod(...);
   *** onChildSourceInfoRefreshed(...);
   *** releasePeriod(...);
}

-keep class com.google.android.exoplayer2.source.SampleQueue$UpstreamFormatChangedListener
-keepclassmembers class com.google.android.exoplayer2.source.SampleQueue$UpstreamFormatChangedListener {
}

-keep class mono.com.google.android.exoplayer2.source.SampleQueue_UpstreamFormatChangedListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.source.SampleQueue_UpstreamFormatChangedListenerImplementor {
}

-keep class com.google.android.exoplayer2.source.SampleQueue
-keepclassmembers class com.google.android.exoplayer2.source.SampleQueue {
   <init>(...);
   *** getFirstIndex(...);
   *** getFirstTimestampUs(...);
   *** hasNextSample(...);
   *** getLargestQueuedTimestampUs(...);
   *** getReadIndex(...);
   *** getUpstreamFormat(...);
   *** getWriteIndex(...);
   *** advanceTo(...);
   *** advanceToEnd(...);
   *** discardTo(...);
   *** discardToEnd(...);
   *** discardToRead(...);
   *** discardUpstreamSamples(...);
   *** format(...);
   *** peekSourceId(...);
   *** read(...);
   *** reset(...);
   *** reset(...);
   *** rewind(...);
   *** sampleData(...);
   *** sampleData(...);
   *** sampleMetadata(...);
   *** setReadPosition(...);
   *** setSampleOffsetUs(...);
   *** setUpstreamFormatChangeListener(...);
   *** sourceId(...);
   *** splice(...);
}

-keep class com.google.android.exoplayer2.source.SinglePeriodTimeline
-keepclassmembers class com.google.android.exoplayer2.source.SinglePeriodTimeline {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPeriodCount(...);
   *** getWindowCount(...);
   *** getIndexOfPeriod(...);
   *** getPeriod(...);
   *** getWindow(...);
}

-keep class com.google.android.exoplayer2.source.SingleSampleMediaSource$EventListener
-keepclassmembers class com.google.android.exoplayer2.source.SingleSampleMediaSource$EventListener {
}

-keep class mono.com.google.android.exoplayer2.source.SingleSampleMediaSource_EventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.source.SingleSampleMediaSource_EventListenerImplementor {
}

-keep class com.google.android.exoplayer2.source.SingleSampleMediaSource$Factory
-keepclassmembers class com.google.android.exoplayer2.source.SingleSampleMediaSource$Factory {
   <init>(...);
   *** createMediaSource(...);
   *** createMediaSource(...);
   *** setMinLoadableRetryCount(...);
   *** setTag(...);
   *** setTreatLoadErrorsAsEndOfStream(...);
}

-keep class com.google.android.exoplayer2.source.SingleSampleMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.SingleSampleMediaSource {
   <init>(...);
   <init>(...);
   <init>(...);
   *** createPeriod(...);
   *** maybeThrowSourceInfoRefreshError(...);
   *** prepareSourceInternal(...);
   *** releasePeriod(...);
   *** releaseSourceInternal(...);
}

-keep class com.google.android.exoplayer2.source.TrackGroup
-keepclassmembers class com.google.android.exoplayer2.source.TrackGroup {
   <init>(...);
   *** describeContents(...);
   *** getFormat(...);
   *** indexOf(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.source.TrackGroupArray
-keepclassmembers class com.google.android.exoplayer2.source.TrackGroupArray {
   <init>(...);
   *** isEmpty(...);
   *** describeContents(...);
   *** get(...);
   *** indexOf(...);
   *** writeToParcel(...);
}

-keep class com.google.android.exoplayer2.source.UnrecognizedInputFormatException
-keepclassmembers class com.google.android.exoplayer2.source.UnrecognizedInputFormatException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.chunk.BaseMediaChunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.BaseMediaChunk {
   <init>(...);
   *** getOutput(...);
   *** getFirstSampleIndex(...);
   *** init(...);
}

-keep class com.google.android.exoplayer2.source.chunk.BaseMediaChunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.BaseMediaChunk {
   *** isLoadCompleted(...);
   *** bytesLoaded(...);
   *** cancelLoad(...);
   *** load(...);
}

-keep class com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput
-keepclassmembers class com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput {
   <init>(...);
   *** getWriteIndices(...);
   *** setSampleOffsetUs(...);
   *** track(...);
}

-keep class com.google.android.exoplayer2.source.chunk.Chunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.Chunk {
   <init>(...);
   *** getDurationUs(...);
   *** bytesLoaded(...);
   *** cancelLoad(...);
   *** load(...);
}

-keep class com.google.android.exoplayer2.source.chunk.Chunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.Chunk {
   *** bytesLoaded(...);
   *** cancelLoad(...);
   *** load(...);
}

-keep class com.google.android.exoplayer2.source.chunk.ChunkedTrackBlacklistUtil
-keepclassmembers class com.google.android.exoplayer2.source.chunk.ChunkedTrackBlacklistUtil {
   *** maybeBlacklistTrack(...);
   *** maybeBlacklistTrack(...);
   *** shouldBlacklist(...);
}

-keep class com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider
-keepclassmembers class com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider {
}

-keep class com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper
-keepclassmembers class com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper {
   <init>(...);
   *** endTracks(...);
   *** getSampleFormats(...);
   *** getSeekMap(...);
   *** init(...);
   *** seekMap(...);
   *** track(...);
}

-keep class com.google.android.exoplayer2.source.chunk.ChunkHolder
-keepclassmembers class com.google.android.exoplayer2.source.chunk.ChunkHolder {
   <init>(...);
   *** clear(...);
}

-keep class com.google.android.exoplayer2.source.chunk.ChunkSampleStream$EmbeddedSampleStream
-keepclassmembers class com.google.android.exoplayer2.source.chunk.ChunkSampleStream$EmbeddedSampleStream {
   *** isReady(...);
   *** maybeThrowError(...);
   *** readData(...);
   *** release(...);
   *** skipData(...);
}

-keep class com.google.android.exoplayer2.source.chunk.ChunkSampleStream$ReleaseCallback
-keepclassmembers class com.google.android.exoplayer2.source.chunk.ChunkSampleStream$ReleaseCallback {
}

-keep class com.google.android.exoplayer2.source.chunk.ChunkSampleStream
-keepclassmembers class com.google.android.exoplayer2.source.chunk.ChunkSampleStream {
   <init>(...);
   *** getBufferedPositionUs(...);
   *** getChunkSource(...);
   *** isReady(...);
   *** getNextLoadPositionUs(...);
   *** continueLoading(...);
   *** discardBuffer(...);
   *** getAdjustedSeekPositionUs(...);
   *** maybeThrowError(...);
   *** onLoadCanceled(...);
   *** onLoadCompleted(...);
   *** onLoadError(...);
   *** onLoaderReleased(...);
   *** readData(...);
   *** reevaluateBuffer(...);
   *** release(...);
   *** release(...);
   *** seekToUs(...);
   *** selectEmbeddedTrack(...);
   *** skipData(...);
}

-keep class com.google.android.exoplayer2.source.chunk.ContainerMediaChunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.ContainerMediaChunk {
   <init>(...);
   *** isLoadCompleted(...);
   *** bytesLoaded(...);
   *** cancelLoad(...);
   *** load(...);
}

-keep class com.google.android.exoplayer2.source.chunk.DataChunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.DataChunk {
   <init>(...);
   *** bytesLoaded(...);
   *** cancelLoad(...);
   *** consume(...);
   *** getDataHolder(...);
   *** load(...);
}

-keep class com.google.android.exoplayer2.source.chunk.DataChunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.DataChunk {
   *** consume(...);
}

-keep class com.google.android.exoplayer2.source.chunk.ChunkSource
-keepclassmembers class com.google.android.exoplayer2.source.chunk.ChunkSource {
}

-keep class com.google.android.exoplayer2.source.chunk.InitializationChunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.InitializationChunk {
   <init>(...);
   *** bytesLoaded(...);
   *** cancelLoad(...);
   *** load(...);
}

-keep class com.google.android.exoplayer2.source.chunk.MediaChunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.MediaChunk {
   <init>(...);
   *** isLoadCompleted(...);
   *** getNextChunkIndex(...);
}

-keep class com.google.android.exoplayer2.source.chunk.MediaChunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.MediaChunk {
   *** isLoadCompleted(...);
   *** bytesLoaded(...);
   *** cancelLoad(...);
   *** load(...);
}

-keep class com.google.android.exoplayer2.source.chunk.SingleSampleMediaChunk
-keepclassmembers class com.google.android.exoplayer2.source.chunk.SingleSampleMediaChunk {
   <init>(...);
   *** isLoadCompleted(...);
   *** bytesLoaded(...);
   *** cancelLoad(...);
   *** load(...);
}

-keep class com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup
-keepclassmembers class com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup {
   <init>(...);
   *** getFirstAdIndexToPlay(...);
   *** hasUnplayedAds(...);
   *** getNextAdIndexToPlay(...);
   *** withAdCount(...);
   *** withAdDurationsUs(...);
   *** withAdState(...);
   *** withAdUri(...);
   *** withAllAdsSkipped(...);
}

-keep class com.google.android.exoplayer2.source.ads.AdPlaybackState$AdState
-keepclassmembers class com.google.android.exoplayer2.source.ads.AdPlaybackState$AdState {
}

-keep class com.google.android.exoplayer2.source.ads.AdPlaybackState
-keepclassmembers class com.google.android.exoplayer2.source.ads.AdPlaybackState {
   <init>(...);
   *** getAdGroupIndexAfterPositionUs(...);
   *** getAdGroupIndexForPositionUs(...);
   *** withAdCount(...);
   *** withAdDurationsUs(...);
   *** withAdLoadError(...);
   *** withAdResumePositionUs(...);
   *** withAdUri(...);
   *** withContentDurationUs(...);
   *** withPlayedAd(...);
   *** withSkippedAd(...);
   *** withSkippedAdGroup(...);
}

-keep class com.google.android.exoplayer2.source.ads.AdsMediaSource$AdLoadException$Type
-keepclassmembers class com.google.android.exoplayer2.source.ads.AdsMediaSource$AdLoadException$Type {
}

-keep class com.google.android.exoplayer2.source.ads.AdsMediaSource$AdLoadException
-keepclassmembers class com.google.android.exoplayer2.source.ads.AdsMediaSource$AdLoadException {
   *** getRuntimeExceptionForUnexpected(...);
   *** createForAd(...);
   *** createForAdGroup(...);
   *** createForAllAds(...);
   *** createForUnexpected(...);
}

-keep class com.google.android.exoplayer2.source.ads.AdsMediaSource$EventListener
-keepclassmembers class com.google.android.exoplayer2.source.ads.AdsMediaSource$EventListener {
}

-keep class mono.com.google.android.exoplayer2.source.ads.AdsMediaSource_EventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.source.ads.AdsMediaSource_EventListenerImplementor {
}

-keep class com.google.android.exoplayer2.source.ads.AdsMediaSource$MediaSourceFactory
-keepclassmembers class com.google.android.exoplayer2.source.ads.AdsMediaSource$MediaSourceFactory {
}

-keep class com.google.android.exoplayer2.source.ads.AdsMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.ads.AdsMediaSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** createPeriod(...);
   *** getMediaPeriodIdForChildMediaPeriodId(...);
   *** onChildSourceInfoRefreshed(...);
   *** releasePeriod(...);
}

-keep class com.google.android.exoplayer2.source.ads.AdsLoader$EventListener
-keepclassmembers class com.google.android.exoplayer2.source.ads.AdsLoader$EventListener {
}

-keep class mono.com.google.android.exoplayer2.source.ads.AdsLoader_EventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.source.ads.AdsLoader_EventListenerImplementor {
}

-keep class com.google.android.exoplayer2.source.ads.AdsLoader
-keepclassmembers class com.google.android.exoplayer2.source.ads.AdsLoader {
}

# ACW for ExoPlayer.Dash
-keep class com.google.android.exoplayer2.source.dash.BuildConfig
-keepclassmembers class com.google.android.exoplayer2.source.dash.BuildConfig {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.dash.DashManifestStaleException
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashManifestStaleException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.dash.DashMediaSource$Factory
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashMediaSource$Factory {
   <init>(...);
   *** createMediaSource(...);
   *** createMediaSource(...);
   *** createMediaSource(...);
   *** createMediaSource(...);
   *** getSupportedTypes(...);
   *** setCompositeSequenceableLoaderFactory(...);
   *** setLivePresentationDelayMs(...);
   *** setManifestParser(...);
   *** setMinLoadableRetryCount(...);
   *** setTag(...);
}

-keep class com.google.android.exoplayer2.source.dash.DashMediaSource$Iso8601Parser
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashMediaSource$Iso8601Parser {
   *** parse(...);
}

-keep class com.google.android.exoplayer2.source.dash.DashMediaSource$ManifestLoadErrorThrower
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashMediaSource$ManifestLoadErrorThrower {
   *** maybeThrowError(...);
   *** maybeThrowError(...);
}

-keep class com.google.android.exoplayer2.source.dash.DashMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashMediaSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** createPeriod(...);
   *** maybeThrowSourceInfoRefreshError(...);
   *** prepareSourceInternal(...);
   *** releasePeriod(...);
   *** releaseSourceInternal(...);
   *** replaceManifestUri(...);
}

-keep class com.google.android.exoplayer2.source.dash.DashUtil
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashUtil {
   *** loadChunkIndex(...);
   *** loadDrmInitData(...);
   *** loadManifest(...);
   *** loadSampleFormat(...);
}

-keep class com.google.android.exoplayer2.source.dash.DashWrappingSegmentIndex
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashWrappingSegmentIndex {
   <init>(...);
   *** getFirstSegmentNum(...);
   *** isExplicit(...);
   *** getDurationUs(...);
   *** getSegmentCount(...);
   *** getSegmentNum(...);
   *** getSegmentUrl(...);
   *** getTimeUs(...);
}

-keep class com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$Factory
-keepclassmembers class com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$Factory {
   <init>(...);
   <init>(...);
   *** createDashChunkSource(...);
}

-keep class com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder
-keepclassmembers class com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder {
   *** getFirstSegmentNum(...);
   *** getSegmentCount(...);
   *** getSegmentEndTimeUs(...);
   *** getSegmentNum(...);
   *** getSegmentStartTimeUs(...);
   *** getSegmentUrl(...);
}

-keep class com.google.android.exoplayer2.source.dash.DefaultDashChunkSource
-keepclassmembers class com.google.android.exoplayer2.source.dash.DefaultDashChunkSource {
   <init>(...);
   *** getAdjustedSeekPositionUs(...);
   *** getNextChunk(...);
   *** getPreferredQueueSize(...);
   *** maybeThrowError(...);
   *** newInitializationChunk(...);
   *** newMediaChunk(...);
   *** onChunkLoadCompleted(...);
   *** onChunkLoadError(...);
   *** updateManifest(...);
}

-keep class com.google.android.exoplayer2.source.dash.DashChunkSource$Factory
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashChunkSource$Factory {
}

-keep class com.google.android.exoplayer2.source.dash.DashChunkSource
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashChunkSource {
}

-keep class com.google.android.exoplayer2.source.dash.DashSegmentIndex
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashSegmentIndex {
}

-keep class com.google.android.exoplayer2.source.dash.DashSegmentIndex
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashSegmentIndex {
}

-keep class com.google.android.exoplayer2.source.dash.DashSegmentIndex
-keepclassmembers class com.google.android.exoplayer2.source.dash.DashSegmentIndex {
}

-keep class com.google.android.exoplayer2.source.dash.PlayerEmsgHandler$PlayerEmsgCallback
-keepclassmembers class com.google.android.exoplayer2.source.dash.PlayerEmsgHandler$PlayerEmsgCallback {
}

-keep class com.google.android.exoplayer2.source.dash.PlayerEmsgHandler$PlayerTrackEmsgHandler
-keepclassmembers class com.google.android.exoplayer2.source.dash.PlayerEmsgHandler$PlayerTrackEmsgHandler {
   *** format(...);
   *** maybeRefreshManifestBeforeLoadingNextChunk(...);
   *** maybeRefreshManifestOnLoadingError(...);
   *** onChunkLoadCompleted(...);
   *** release(...);
   *** sampleData(...);
   *** sampleData(...);
   *** sampleMetadata(...);
}

-keep class com.google.android.exoplayer2.source.dash.PlayerEmsgHandler
-keepclassmembers class com.google.android.exoplayer2.source.dash.PlayerEmsgHandler {
   <init>(...);
   *** handleMessage(...);
   *** isPlayerEmsgEvent(...);
   *** newPlayerTrackEmsgHandler(...);
   *** release(...);
   *** updateManifest(...);
}

-keep class com.google.android.exoplayer2.source.dash.offline.DashDownloadAction
-keepclassmembers class com.google.android.exoplayer2.source.dash.offline.DashDownloadAction {
   <init>(...);
   *** createDownloader(...);
   *** writeKey(...);
}

-keep class com.google.android.exoplayer2.source.dash.offline.DashDownloader
-keepclassmembers class com.google.android.exoplayer2.source.dash.offline.DashDownloader {
   <init>(...);
   *** getManifest(...);
   *** getSegments(...);
}

-keep class com.google.android.exoplayer2.source.dash.offline.DashDownloadHelper
-keepclassmembers class com.google.android.exoplayer2.source.dash.offline.DashDownloadHelper {
   <init>(...);
   *** getManifest(...);
   *** getPeriodCount(...);
   *** getDownloadAction(...);
   *** getRemoveAction(...);
   *** getTrackGroups(...);
   *** prepareInternal(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.AdaptationSet
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.AdaptationSet {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.DashManifest
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.DashManifest {
   <init>(...);
   *** getPeriodCount(...);
   *** copy(...);
   *** getPeriod(...);
   *** getPeriodDurationMs(...);
   *** getPeriodDurationUs(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.DashManifestParser$RepresentationInfo
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.DashManifestParser$RepresentationInfo {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.DashManifestParser
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.DashManifestParser {
   <init>(...);
   <init>(...);
   *** buildAdaptationSet(...);
   *** buildEvent(...);
   *** buildEventStream(...);
   *** buildFormat(...);
   *** buildMediaPresentationDescription(...);
   *** buildPeriod(...);
   *** buildRangedUri(...);
   *** buildRepresentation(...);
   *** buildSegmentList(...);
   *** buildSegmentTemplate(...);
   *** buildSegmentTimelineElement(...);
   *** buildSingleSegmentBase(...);
   *** buildUtcTimingElement(...);
   *** getContentType(...);
   *** parse(...);
   *** parseAdaptationSet(...);
   *** parseAdaptationSetChild(...);
   *** parseAudioChannelConfiguration(...);
   *** parseBaseUrl(...);
   *** parseCea608AccessibilityChannel(...);
   *** parseCea708AccessibilityChannel(...);
   *** parseContentProtection(...);
   *** parseContentType(...);
   *** parseDateTime(...);
   *** parseDescriptor(...);
   *** parseDolbyChannelConfiguration(...);
   *** parseDuration(...);
   *** parseEac3SupplementalProperties(...);
   *** parseEvent(...);
   *** parseEventObject(...);
   *** parseEventStream(...);
   *** parseFrameRate(...);
   *** parseInitialization(...);
   *** parseInt(...);
   *** parseLong(...);
   *** parseMediaPresentationDescription(...);
   *** parsePeriod(...);
   *** parseRangedUrl(...);
   *** parseRepresentation(...);
   *** parseRole(...);
   *** parseSegmentBase(...);
   *** parseSegmentList(...);
   *** parseSegmentTemplate(...);
   *** parseSegmentTimeline(...);
   *** parseSegmentUrl(...);
   *** parseString(...);
   *** parseUrlTemplate(...);
   *** parseUtcTiming(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.Descriptor
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.Descriptor {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.EventStream
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.EventStream {
   <init>(...);
   *** id(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.Period
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.Period {
   <init>(...);
   <init>(...);
   *** getAdaptationSetIndex(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.RangedUri
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.RangedUri {
   <init>(...);
   *** attemptMerge(...);
   *** resolveUri(...);
   *** resolveUriString(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.Representation$MultiSegmentRepresentation
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.Representation$MultiSegmentRepresentation {
   <init>(...);
   *** getCacheKey(...);
   *** getFirstSegmentNum(...);
   *** getIndex(...);
   *** getIndexUri(...);
   *** isExplicit(...);
   *** getDurationUs(...);
   *** getSegmentCount(...);
   *** getSegmentNum(...);
   *** getSegmentUrl(...);
   *** getTimeUs(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.Representation$SingleSegmentRepresentation
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.Representation$SingleSegmentRepresentation {
   <init>(...);
   *** getCacheKey(...);
   *** getIndex(...);
   *** getIndexUri(...);
   *** newInstance(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.Representation
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.Representation {
   *** getCacheKey(...);
   *** getIndex(...);
   *** getIndexUri(...);
   *** getInitializationUri(...);
   *** newInstance(...);
   *** newInstance(...);
   *** newInstance(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.Representation
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.Representation {
   *** getCacheKey(...);
   *** getIndex(...);
   *** getIndexUri(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.RepresentationKey
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.RepresentationKey {
   <init>(...);
   *** compareTo(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase {
   <init>(...);
   *** getFirstSegmentNum(...);
   *** isExplicit(...);
   *** getSegmentCount(...);
   *** getSegmentDurationUs(...);
   *** getSegmentNum(...);
   *** getSegmentTimeUs(...);
   *** getSegmentUrl(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase {
   *** getSegmentCount(...);
   *** getSegmentUrl(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentList
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentList {
   <init>(...);
   *** getSegmentCount(...);
   *** getSegmentUrl(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTemplate
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTemplate {
   <init>(...);
   *** getSegmentCount(...);
   *** getSegmentUrl(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTimelineElement
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTimelineElement {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase {
   <init>(...);
   <init>(...);
   *** getIndex(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.SegmentBase
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.SegmentBase {
   <init>(...);
   *** getPresentationTimeOffsetUs(...);
   *** getInitialization(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.SegmentBase
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.SegmentBase {
}

-keep class com.google.android.exoplayer2.source.dash.manifest.UrlTemplate
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.UrlTemplate {
   *** buildUri(...);
   *** compile(...);
}

-keep class com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement
-keepclassmembers class com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement {
   <init>(...);
}

# ACW for ExoPlayer
-keep class com.google.android.exoplayer2.BuildConfig
-keepclassmembers class com.google.android.exoplayer2.BuildConfig {
   <init>(...);
}

# ACW for ExoPlayer.Ext.MediaSession
-keep class com.google.android.exoplayer2.ext.mediasession.BuildConfig
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.BuildConfig {
   <init>(...);
}

-keep class com.google.android.exoplayer2.ext.mediasession.DefaultPlaybackController
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.DefaultPlaybackController {
   <init>(...);
   <init>(...);
   *** getCommands(...);
   *** getSupportedPlaybackActions(...);
   *** onCommand(...);
   *** onFastForward(...);
   *** onPause(...);
   *** onPlay(...);
   *** onRewind(...);
   *** onSeekTo(...);
   *** onSetRepeatMode(...);
   *** onSetShuffleMode(...);
   *** onStop(...);
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$CommandReceiver
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$CommandReceiver {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$CustomActionProvider
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$CustomActionProvider {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackController
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackController {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackController
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackController {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackController
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackController {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackPreparer
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackPreparer {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackPreparer
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackPreparer {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackPreparer
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$PlaybackPreparer {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$QueueEditor
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$QueueEditor {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$QueueNavigator
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$QueueNavigator {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$QueueNavigator
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$QueueNavigator {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$QueueNavigator
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$QueueNavigator {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$RatingCallback
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$RatingCallback {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$RatingCallback
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$RatingCallback {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$RatingCallback
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector$RatingCallback {
}

-keep class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.MediaSessionConnector {
   <init>(...);
   <init>(...);
   <init>(...);
   *** setErrorMessageProvider(...);
   *** setPlayer(...);
   *** setQueueEditor(...);
   *** setQueueNavigator(...);
   *** setRatingCallback(...);
}

-keep class com.google.android.exoplayer2.ext.mediasession.RepeatModeActionProvider
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.RepeatModeActionProvider {
   <init>(...);
   <init>(...);
   *** getCustomAction(...);
   *** onCustomAction(...);
}

-keep class com.google.android.exoplayer2.ext.mediasession.TimelineQueueEditor$MediaDescriptionEqualityChecker
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.TimelineQueueEditor$MediaDescriptionEqualityChecker {
}

-keep class com.google.android.exoplayer2.ext.mediasession.TimelineQueueEditor$MediaIdEqualityChecker
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.TimelineQueueEditor$MediaIdEqualityChecker {
   <init>(...);
   *** equals(...);
}

-keep class com.google.android.exoplayer2.ext.mediasession.TimelineQueueEditor$MediaSourceFactory
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.TimelineQueueEditor$MediaSourceFactory {
}

-keep class com.google.android.exoplayer2.ext.mediasession.TimelineQueueEditor$QueueDataAdapter
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.TimelineQueueEditor$QueueDataAdapter {
}

-keep class com.google.android.exoplayer2.ext.mediasession.TimelineQueueEditor
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.TimelineQueueEditor {
   <init>(...);
   *** getCommands(...);
   *** onAddQueueItem(...);
   *** onAddQueueItem(...);
   *** onCommand(...);
   *** onRemoveQueueItem(...);
   *** onRemoveQueueItemAt(...);
}

-keep class com.google.android.exoplayer2.ext.mediasession.TimelineQueueNavigator
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.TimelineQueueNavigator {
   <init>(...);
   <init>(...);
   *** getActiveQueueItemId(...);
   *** getCommands(...);
   *** getMediaDescription(...);
   *** getSupportedQueueNavigatorActions(...);
   *** onCommand(...);
   *** onCurrentWindowIndexChanged(...);
   *** onSkipToNext(...);
   *** onSkipToPrevious(...);
   *** onSkipToQueueItem(...);
   *** onTimelineChanged(...);
}

-keep class com.google.android.exoplayer2.ext.mediasession.TimelineQueueNavigator
-keepclassmembers class com.google.android.exoplayer2.ext.mediasession.TimelineQueueNavigator {
   *** getMediaDescription(...);
}

# ACW for ExoPlayer.Hls
-keep class com.google.android.exoplayer2.source.hls.BuildConfig
-keepclassmembers class com.google.android.exoplayer2.source.hls.BuildConfig {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.hls.DefaultHlsDataSourceFactory
-keepclassmembers class com.google.android.exoplayer2.source.hls.DefaultHlsDataSourceFactory {
   <init>(...);
   *** createDataSource(...);
}

-keep class com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory
-keepclassmembers class com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory {
   <init>(...);
   *** createExtractor(...);
}

-keep class com.google.android.exoplayer2.source.hls.HlsManifest
-keepclassmembers class com.google.android.exoplayer2.source.hls.HlsManifest {
}

-keep class com.google.android.exoplayer2.source.hls.HlsMediaPeriod
-keepclassmembers class com.google.android.exoplayer2.source.hls.HlsMediaPeriod {
   <init>(...);
   *** getBufferedPositionUs(...);
   *** getNextLoadPositionUs(...);
   *** getTrackGroups(...);
   *** continueLoading(...);
   *** discardBuffer(...);
   *** getAdjustedSeekPositionUs(...);
   *** maybeThrowPrepareError(...);
   *** onPlaylistChanged(...);
   *** onPlaylistError(...);
   *** onPlaylistRefreshRequired(...);
   *** onPrepared(...);
   *** prepare(...);
   *** readDiscontinuity(...);
   *** reevaluateBuffer(...);
   *** release(...);
   *** seekToUs(...);
   *** selectTracks(...);
}

-keep class com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory
-keepclassmembers class com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory {
   <init>(...);
   <init>(...);
   *** createMediaSource(...);
   *** createMediaSource(...);
   *** getSupportedTypes(...);
   *** setAllowChunklessPreparation(...);
   *** setCompositeSequenceableLoaderFactory(...);
   *** setExtractorFactory(...);
   *** setMinLoadableRetryCount(...);
   *** setPlaylistParser(...);
   *** setPlaylistTracker(...);
   *** setTag(...);
}

-keep class com.google.android.exoplayer2.source.hls.HlsMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.hls.HlsMediaSource {
   <init>(...);
   <init>(...);
   <init>(...);
   *** createPeriod(...);
   *** maybeThrowSourceInfoRefreshError(...);
   *** onPrimaryPlaylistRefreshed(...);
   *** prepareSourceInternal(...);
   *** releasePeriod(...);
   *** releaseSourceInternal(...);
}

-keep class com.google.android.exoplayer2.source.hls.HlsDataSourceFactory
-keepclassmembers class com.google.android.exoplayer2.source.hls.HlsDataSourceFactory {
}

-keep class com.google.android.exoplayer2.source.hls.HlsExtractorFactory
-keepclassmembers class com.google.android.exoplayer2.source.hls.HlsExtractorFactory {
}

-keep class com.google.android.exoplayer2.source.hls.SampleQueueMappingException
-keepclassmembers class com.google.android.exoplayer2.source.hls.SampleQueueMappingException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider
-keepclassmembers class com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider {
   <init>(...);
   *** getAdjuster(...);
   *** reset(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker {
   <init>(...);
   *** getInitialStartTimeUs(...);
   *** isLive(...);
   *** getMasterPlaylist(...);
   *** addListener(...);
   *** getPlaylistSnapshot(...);
   *** isSnapshotValid(...);
   *** maybeThrowPlaylistRefreshError(...);
   *** maybeThrowPrimaryPlaylistRefreshError(...);
   *** onLoadCanceled(...);
   *** onLoadCompleted(...);
   *** onLoadError(...);
   *** refreshPlaylist(...);
   *** removeListener(...);
   *** start(...);
   *** stop(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$HlsUrl
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$HlsUrl {
   <init>(...);
   *** createMediaPlaylistHlsUrl(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist {
   <init>(...);
   *** copy(...);
   *** createSingleVariantMasterPlaylist(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$PlaylistType
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$PlaylistType {
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment {
   <init>(...);
   <init>(...);
   *** compareTo(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist {
   *** getEndTimeUs(...);
   *** copy(...);
   *** copyWith(...);
   *** copyWithEndTag(...);
   *** isNewerThan(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist {
   <init>(...);
   *** copy(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist {
   *** copy(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistEventListener
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistEventListener {
}

-keep class mono.com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker_PlaylistEventListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker_PlaylistEventListenerImplementor {
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistResetException
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistResetException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistStuckException
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistStuckException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener {
}

-keep class mono.com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker_PrimaryPlaylistListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker_PrimaryPlaylistListenerImplementor {
}

-keep class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker {
}

-keep class com.google.android.exoplayer2.source.hls.playlist.RenditionKey$Type
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.RenditionKey$Type {
}

-keep class com.google.android.exoplayer2.source.hls.playlist.RenditionKey
-keepclassmembers class com.google.android.exoplayer2.source.hls.playlist.RenditionKey {
   <init>(...);
   *** compareTo(...);
}

-keep class com.google.android.exoplayer2.source.hls.offline.HlsDownloadAction
-keepclassmembers class com.google.android.exoplayer2.source.hls.offline.HlsDownloadAction {
   <init>(...);
   *** createDownloader(...);
   *** writeKey(...);
}

-keep class com.google.android.exoplayer2.source.hls.offline.HlsDownloader
-keepclassmembers class com.google.android.exoplayer2.source.hls.offline.HlsDownloader {
   <init>(...);
   *** getManifest(...);
   *** getSegments(...);
}

-keep class com.google.android.exoplayer2.source.hls.offline.HlsDownloadHelper
-keepclassmembers class com.google.android.exoplayer2.source.hls.offline.HlsDownloadHelper {
   <init>(...);
   *** getPeriodCount(...);
   *** getPlaylist(...);
   *** getDownloadAction(...);
   *** getRemoveAction(...);
   *** getTrackGroups(...);
   *** prepareInternal(...);
}

# ACW for ExoPlayer.SmoothStreaming
-keep class com.google.android.exoplayer2.source.smoothstreaming.BuildConfig
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.BuildConfig {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource$Factory
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource$Factory {
   <init>(...);
   *** createChunkSource(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource {
   <init>(...);
   *** getAdjustedSeekPositionUs(...);
   *** getNextChunk(...);
   *** getPreferredQueueSize(...);
   *** maybeThrowError(...);
   *** onChunkLoadCompleted(...);
   *** onChunkLoadError(...);
   *** updateManifest(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource$Factory
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource$Factory {
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource {
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory {
   <init>(...);
   *** createMediaSource(...);
   *** createMediaSource(...);
   *** createMediaSource(...);
   *** createMediaSource(...);
   *** getSupportedTypes(...);
   *** setCompositeSequenceableLoaderFactory(...);
   *** setLivePresentationDelayMs(...);
   *** setManifestParser(...);
   *** setMinLoadableRetryCount(...);
   *** setTag(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** createPeriod(...);
   *** maybeThrowSourceInfoRefreshError(...);
   *** onLoadCanceled(...);
   *** onLoadCompleted(...);
   *** onLoadError(...);
   *** prepareSourceInternal(...);
   *** releasePeriod(...);
   *** releaseSourceInternal(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.offline.SsDownloadAction
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.offline.SsDownloadAction {
   <init>(...);
   *** createDownloader(...);
   *** writeKey(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.offline.SsDownloader
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.offline.SsDownloader {
   <init>(...);
   *** getManifest(...);
   *** getSegments(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.offline.SsDownloadHelper
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.offline.SsDownloadHelper {
   <init>(...);
   *** getManifest(...);
   *** getPeriodCount(...);
   *** getDownloadAction(...);
   *** getRemoveAction(...);
   *** getTrackGroups(...);
   *** prepareInternal(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest$ProtectionElement
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest$ProtectionElement {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest$StreamElement
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest$StreamElement {
   <init>(...);
   *** buildRequestUri(...);
   *** copy(...);
   *** getChunkDurationUs(...);
   *** getChunkIndex(...);
   *** getStartTimeUs(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest {
   <init>(...);
   *** copy(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser$MissingFieldException
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser$MissingFieldException {
   <init>(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser {
   <init>(...);
   *** parse(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsUtil
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.manifest.SsUtil {
   *** fixManifestUri(...);
}

-keep class com.google.android.exoplayer2.source.smoothstreaming.manifest.StreamKey
-keepclassmembers class com.google.android.exoplayer2.source.smoothstreaming.manifest.StreamKey {
   <init>(...);
   *** compareTo(...);
}

# ACW for ExoPlayer.UI
-keep class com.google.android.exoplayer2.ui.DefaultTimeBar
-keepclassmembers class com.google.android.exoplayer2.ui.DefaultTimeBar {
   <init>(...);
   *** addListener(...);
   *** getDefaultBufferedColor(...);
   *** getDefaultPlayedAdMarkerColor(...);
   *** getDefaultScrubberColor(...);
   *** getDefaultUnplayedColor(...);
   *** onDraw(...);
   *** removeListener(...);
   *** setAdGroupTimesMs(...);
   *** setAdMarkerColor(...);
   *** setBufferedColor(...);
   *** setBufferedPosition(...);
   *** setDuration(...);
   *** setKeyCountIncrement(...);
   *** setKeyTimeIncrement(...);
   *** setPlayedAdMarkerColor(...);
   *** setPlayedColor(...);
   *** setPosition(...);
   *** setScrubberColor(...);
   *** setUnplayedColor(...);
}

-keep class com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener
-keepclassmembers class com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener {
}

-keep class mono.com.google.android.exoplayer2.ui.AspectRatioFrameLayout_AspectRatioListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.ui.AspectRatioFrameLayout_AspectRatioListenerImplementor {
}

-keep class com.google.android.exoplayer2.ui.AspectRatioFrameLayout$ResizeMode
-keepclassmembers class com.google.android.exoplayer2.ui.AspectRatioFrameLayout$ResizeMode {
}

-keep class com.google.android.exoplayer2.ui.AspectRatioFrameLayout
-keepclassmembers class com.google.android.exoplayer2.ui.AspectRatioFrameLayout {
   <init>(...);
   <init>(...);
   *** getResizeMode(...);
   *** setResizeMode(...);
   *** setAspectRatio(...);
   *** setAspectRatioListener(...);
}

-keep class com.google.android.exoplayer2.ui.BuildConfig
-keepclassmembers class com.google.android.exoplayer2.ui.BuildConfig {
   <init>(...);
}

-keep class com.google.android.exoplayer2.ui.DebugTextViewHelper
-keepclassmembers class com.google.android.exoplayer2.ui.DebugTextViewHelper {
   <init>(...);
   *** getAudioString(...);
   *** getDebugString(...);
   *** getPlayerStateString(...);
   *** getVideoString(...);
   *** onPlayerStateChanged(...);
   *** onPositionDiscontinuity(...);
   *** run(...);
   *** start(...);
   *** stop(...);
   *** updateAndPost(...);
}

-keep class com.google.android.exoplayer2.ui.DefaultTrackNameProvider
-keepclassmembers class com.google.android.exoplayer2.ui.DefaultTrackNameProvider {
   <init>(...);
   *** getTrackName(...);
}

-keep class com.google.android.exoplayer2.ui.DownloadNotificationUtil
-keepclassmembers class com.google.android.exoplayer2.ui.DownloadNotificationUtil {
   *** buildDownloadCompletedNotification(...);
   *** buildDownloadFailedNotification(...);
   *** buildProgressNotification(...);
}

-keep class com.google.android.exoplayer2.ui.TimeBar$OnScrubListener
-keepclassmembers class com.google.android.exoplayer2.ui.TimeBar$OnScrubListener {
}

-keep class mono.com.google.android.exoplayer2.ui.TimeBar_OnScrubListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.ui.TimeBar_OnScrubListenerImplementor {
}

-keep class com.google.android.exoplayer2.ui.TimeBar
-keepclassmembers class com.google.android.exoplayer2.ui.TimeBar {
}

-keep class com.google.android.exoplayer2.ui.TrackNameProvider
-keepclassmembers class com.google.android.exoplayer2.ui.TrackNameProvider {
}

-keep class com.google.android.exoplayer2.ui.PlaybackControlView$ControlDispatcher
-keepclassmembers class com.google.android.exoplayer2.ui.PlaybackControlView$ControlDispatcher {
}

-keep class com.google.android.exoplayer2.ui.PlaybackControlView$VisibilityListener
-keepclassmembers class com.google.android.exoplayer2.ui.PlaybackControlView$VisibilityListener {
}

-keep class com.google.android.exoplayer2.ui.PlaybackControlView
-keepclassmembers class com.google.android.exoplayer2.ui.PlaybackControlView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.android.exoplayer2.ui.PlayerControlView$VisibilityListener
-keepclassmembers class com.google.android.exoplayer2.ui.PlayerControlView$VisibilityListener {
}

-keep class mono.com.google.android.exoplayer2.ui.PlayerControlView_VisibilityListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.ui.PlayerControlView_VisibilityListenerImplementor {
}

-keep class com.google.android.exoplayer2.ui.PlayerControlView
-keepclassmembers class com.google.android.exoplayer2.ui.PlayerControlView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isVisible(...);
   *** getPlayer(...);
   *** setPlayer(...);
   *** getRepeatToggleModes(...);
   *** setRepeatToggleModes(...);
   *** getShowShuffleButton(...);
   *** setShowShuffleButton(...);
   *** getShowTimeoutMs(...);
   *** setShowTimeoutMs(...);
   *** dispatchMediaKeyEvent(...);
   *** hide(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** setControlDispatcher(...);
   *** setExtraAdGroupMarkers(...);
   *** setFastForwardIncrementMs(...);
   *** setPlaybackPreparer(...);
   *** setRewindIncrementMs(...);
   *** setShowMultiWindowTimeBar(...);
   *** setVisibilityListener(...);
   *** show(...);
}

-keep class com.google.android.exoplayer2.ui.PlayerNotificationManager$BitmapCallback
-keepclassmembers class com.google.android.exoplayer2.ui.PlayerNotificationManager$BitmapCallback {
   *** onBitmap(...);
}

-keep class com.google.android.exoplayer2.ui.PlayerNotificationManager$CustomActionReceiver
-keepclassmembers class com.google.android.exoplayer2.ui.PlayerNotificationManager$CustomActionReceiver {
}

-keep class com.google.android.exoplayer2.ui.PlayerNotificationManager$MediaDescriptionAdapter
-keepclassmembers class com.google.android.exoplayer2.ui.PlayerNotificationManager$MediaDescriptionAdapter {
}

-keep class com.google.android.exoplayer2.ui.PlayerNotificationManager$NotificationListener
-keepclassmembers class com.google.android.exoplayer2.ui.PlayerNotificationManager$NotificationListener {
}

-keep class mono.com.google.android.exoplayer2.ui.PlayerNotificationManager_NotificationListenerImplementor
-keepclassmembers class mono.com.google.android.exoplayer2.ui.PlayerNotificationManager_NotificationListenerImplementor {
}

-keep class com.google.android.exoplayer2.ui.PlayerNotificationManager$Priority
-keepclassmembers class com.google.android.exoplayer2.ui.PlayerNotificationManager$Priority {
}

-keep class com.google.android.exoplayer2.ui.PlayerNotificationManager$Visibility
-keepclassmembers class com.google.android.exoplayer2.ui.PlayerNotificationManager$Visibility {
}

-keep class com.google.android.exoplayer2.ui.PlayerNotificationManager
-keepclassmembers class com.google.android.exoplayer2.ui.PlayerNotificationManager {
   <init>(...);
   <init>(...);
   *** createNotification(...);
   *** createWithNotificationChannel(...);
   *** getActionIndicesForCompactView(...);
   *** getActions(...);
   *** setBadgeIconType(...);
   *** setColor(...);
   *** setColorized(...);
   *** setControlDispatcher(...);
   *** setDefaults(...);
   *** setFastForwardIncrementMs(...);
   *** setMediaSessionToken(...);
   *** setNotificationListener(...);
   *** setOngoing(...);
   *** setPlayer(...);
   *** setPriority(...);
   *** setRewindIncrementMs(...);
   *** setSmallIcon(...);
   *** setStopAction(...);
   *** setUseChronometer(...);
   *** setUseNavigationActions(...);
   *** setUsePlayPauseActions(...);
   *** setVisibility(...);
}

-keep class com.google.android.exoplayer2.ui.PlayerView
-keepclassmembers class com.google.android.exoplayer2.ui.PlayerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getControllerAutoShow(...);
   *** setControllerAutoShow(...);
   *** getControllerHideOnTouch(...);
   *** setControllerHideOnTouch(...);
   *** getControllerShowTimeoutMs(...);
   *** setControllerShowTimeoutMs(...);
   *** getDefaultArtwork(...);
   *** setDefaultArtwork(...);
   *** isControllerVisible(...);
   *** getOverlayFrameLayout(...);
   *** getPlayer(...);
   *** setPlayer(...);
   *** getResizeMode(...);
   *** setResizeMode(...);
   *** getSubtitleView(...);
   *** getUseArtwork(...);
   *** setUseArtwork(...);
   *** getUseController(...);
   *** setUseController(...);
   *** getVideoSurfaceView(...);
   *** dispatchMediaKeyEvent(...);
   *** hideController(...);
   *** setAspectRatioListener(...);
   *** setControlDispatcher(...);
   *** setControllerHideDuringAds(...);
   *** setControllerVisibilityListener(...);
   *** setCustomErrorMessage(...);
   *** setErrorMessageProvider(...);
   *** setExtraAdGroupMarkers(...);
   *** setFastForwardIncrementMs(...);
   *** setKeepContentOnPlayerReset(...);
   *** setPlaybackPreparer(...);
   *** setRepeatToggleModes(...);
   *** setRewindIncrementMs(...);
   *** setShowBuffering(...);
   *** setShowMultiWindowTimeBar(...);
   *** setShowShuffleButton(...);
   *** setShutterBackgroundColor(...);
   *** showController(...);
   *** switchTargetView(...);
}

-keep class com.google.android.exoplayer2.ui.SimpleExoPlayerView
-keepclassmembers class com.google.android.exoplayer2.ui.SimpleExoPlayerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** switchTargetView(...);
}

-keep class com.google.android.exoplayer2.ui.SubtitleView
-keepclassmembers class com.google.android.exoplayer2.ui.SubtitleView {
   <init>(...);
   <init>(...);
   *** dispatchDraw(...);
   *** onCues(...);
   *** setApplyEmbeddedFontSizes(...);
   *** setApplyEmbeddedStyles(...);
   *** setBottomPaddingFraction(...);
   *** setCues(...);
   *** setFixedTextSize(...);
   *** setFractionalTextSize(...);
   *** setFractionalTextSize(...);
   *** setStyle(...);
   *** setUserDefaultStyle(...);
   *** setUserDefaultTextSize(...);
}

-keep class com.google.android.exoplayer2.ui.TrackSelectionView
-keepclassmembers class com.google.android.exoplayer2.ui.TrackSelectionView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDialog(...);
   *** init(...);
   *** setAllowAdaptiveSelections(...);
   *** setShowDisableOption(...);
   *** setTrackNameProvider(...);
}

# ACW for FFImageLoading.Forms.Platform
# ACW for FFImageLoading.Platform
-keep class ffimageloading.views.ImageViewAsync
-keepclassmembers class ffimageloading.views.ImageViewAsync {
}

-keep class ffimageloading.cross.MvxCachedImageView
-keepclassmembers class ffimageloading.cross.MvxCachedImageView {
}

# ACW for FFImageLoading.Transformations
# ACW for FormsViewGroup
-keep class com.xamarin.forms.platform.android.FormsViewGroup
-keepclassmembers class com.xamarin.forms.platform.android.FormsViewGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInputTransparent(...);
   *** setInputTransparent(...);
   *** measureAndLayout(...);
   *** onLayout(...);
   *** sendBatchUpdate(...);
   *** sendViewBatchUpdate(...);
}

-keep class com.xamarin.formsviewgroup.BuildConfig
-keepclassmembers class com.xamarin.formsviewgroup.BuildConfig {
   <init>(...);
}

# ACW for MediaManager
-keep class mediamanager.platforms.android.video.VideoView
-keepclassmembers class mediamanager.platforms.android.video.VideoView {
}

# ACW for MediaManager.Forms
# ACW for Syncfusion.Buttons.XForms.Android
# ACW for Syncfusion.Core.XForms.Android
# ACW for Syncfusion.SfCarousel.Android
# ACW for Syncfusion.SfCarousel.XForms.Android
# ACW for Syncfusion.SfListView.XForms.Android
# ACW for Xamarin.Android.Arch.Core.Common
# ACW for Xamarin.Android.Arch.Core.Runtime
# ACW for Xamarin.Android.Arch.Lifecycle.Common
-keep class android.arch.lifecycle.Lifecycle$State
-keepclassmembers class android.arch.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class android.arch.lifecycle.Lifecycle
-keepclassmembers class android.arch.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class android.arch.lifecycle.LifecycleObserver
-keepclassmembers class android.arch.lifecycle.LifecycleObserver {
}

-keep class android.arch.lifecycle.LifecycleOwner
-keepclassmembers class android.arch.lifecycle.LifecycleOwner {
}

-keep class android.arch.lifecycle.Lifecycle
-keepclassmembers class android.arch.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.Android.Arch.Lifecycle.LiveData.Core
-keep class android.arch.lifecycle.Observer
-keepclassmembers class android.arch.lifecycle.Observer {
}

-keep class android.arch.lifecycle.LiveData
-keepclassmembers class android.arch.lifecycle.LiveData {
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class android.arch.lifecycle.LiveData
-keepclassmembers class android.arch.lifecycle.LiveData {
}

# ACW for Xamarin.Android.Arch.Lifecycle.LiveData
# ACW for Xamarin.Android.Arch.Lifecycle.Runtime
# ACW for Xamarin.Android.Arch.Lifecycle.ViewModel
-keep class android.arch.lifecycle.ViewModelStoreOwner
-keepclassmembers class android.arch.lifecycle.ViewModelStoreOwner {
}

-keep class android.arch.lifecycle.ViewModelStore
-keepclassmembers class android.arch.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

# ACW for Xamarin.Android.Support.Animated.Vector.Drawable
# ACW for Xamarin.Android.Support.Annotations
# ACW for Xamarin.Android.Support.AsyncLayoutInflater
# ACW for Xamarin.Android.Support.Collections
# ACW for Xamarin.Android.Support.Compat
-keep class android.support.v13.view.DragAndDropPermissionsCompat
-keepclassmembers class android.support.v13.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class android.support.v4.widget.AutoSizeableTextView
-keepclassmembers class android.support.v4.widget.AutoSizeableTextView {
}

-keep class android.support.v4.widget.TintableCompoundButton
-keepclassmembers class android.support.v4.widget.TintableCompoundButton {
}

-keep class android.support.v4.widget.TintableImageSourceView
-keepclassmembers class android.support.v4.widget.TintableImageSourceView {
}

-keep class android.support.v4.widget.NestedScrollView$OnScrollChangeListener
-keepclassmembers class android.support.v4.widget.NestedScrollView$OnScrollChangeListener {
}

-keep class mono.android.support.v4.widget.NestedScrollView_OnScrollChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.NestedScrollView_OnScrollChangeListenerImplementor {
}

-keep class android.support.v4.widget.NestedScrollView
-keepclassmembers class android.support.v4.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** getMaxScrollAmount(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** hasNestedScrollingParent(...);
   *** onAttachedToWindow(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** setOnScrollChangeListener(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class android.support.v4.widget.TextViewCompat
-keepclassmembers class android.support.v4.widget.TextViewCompat {
   *** getAutoSizeMaxTextSize(...);
   *** getAutoSizeMinTextSize(...);
   *** getAutoSizeStepGranularity(...);
   *** getAutoSizeTextAvailableSizes(...);
   *** getAutoSizeTextType(...);
   *** getCompoundDrawablesRelative(...);
   *** getFirstBaselineToTopHeight(...);
   *** getLastBaselineToBottomHeight(...);
   *** getMaxLines(...);
   *** getMinLines(...);
   *** getTextMetricsParams(...);
   *** setAutoSizeTextTypeUniformWithConfiguration(...);
   *** setAutoSizeTextTypeUniformWithPresetSizes(...);
   *** setAutoSizeTextTypeWithDefaults(...);
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCustomSelectionActionModeCallback(...);
   *** setFirstBaselineToTopHeight(...);
   *** setLastBaselineToBottomHeight(...);
   *** setLineHeight(...);
   *** setPrecomputedText(...);
   *** setTextAppearance(...);
   *** setTextMetricsParams(...);
   *** wrapCustomSelectionActionModeCallback(...);
}

-keep class android.support.v4.view.AccessibilityDelegateCompat
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat {
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class android.support.v4.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider$VisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$VisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class android.support.v4.view.DisplayCutoutCompat
-keepclassmembers class android.support.v4.view.DisplayCutoutCompat {
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
}

-keep class android.support.v4.view.NestedScrollingChild
-keepclassmembers class android.support.v4.view.NestedScrollingChild {
}

-keep class android.support.v4.view.NestedScrollingChild2
-keepclassmembers class android.support.v4.view.NestedScrollingChild2 {
}

-keep class android.support.v4.view.NestedScrollingParent
-keepclassmembers class android.support.v4.view.NestedScrollingParent {
}

-keep class android.support.v4.view.NestedScrollingParent2
-keepclassmembers class android.support.v4.view.NestedScrollingParent2 {
}

-keep class android.support.v4.view.OnApplyWindowInsetsListener
-keepclassmembers class android.support.v4.view.OnApplyWindowInsetsListener {
}

-keep class android.support.v4.view.ScrollingView
-keepclassmembers class android.support.v4.view.ScrollingView {
}

-keep class android.support.v4.view.TintableBackgroundView
-keepclassmembers class android.support.v4.view.TintableBackgroundView {
}

-keep class android.support.v4.view.ViewPropertyAnimatorListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorListener {
}

-keep class android.support.v4.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorUpdateListener {
}

-keep class android.support.v4.view.PointerIconCompat
-keepclassmembers class android.support.v4.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class android.support.v4.view.ScaleGestureDetectorCompat
-keepclassmembers class android.support.v4.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class android.support.v4.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class android.support.v4.view.ViewCompat
-keepclassmembers class android.support.v4.view.ViewCompat {
   <init>(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** generateViewId(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAlpha(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityLiveRegion(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorCompat
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class android.support.v4.view.WindowInsetsCompat
-keepclassmembers class android.support.v4.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getText(...);
   *** setText(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class android.support.v4.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityWindowInfoCompat {
   *** getAnchor(...);
   *** getChildCount(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class android.support.v4.internal.view.SupportMenu
-keepclassmembers class android.support.v4.internal.view.SupportMenu {
}

-keep class android.support.v4.internal.view.SupportMenuItem
-keepclassmembers class android.support.v4.internal.view.SupportMenuItem {
}

-keep class android.support.v4.graphics.drawable.DrawableCompat
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat {
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** clearColorFilter(...);
   *** getAlpha(...);
   *** getColorFilter(...);
   *** getLayoutDirection(...);
   *** inflate(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class android.support.v4.content.ContextCompat
-keepclassmembers class android.support.v4.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class android.support.v4.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class android.support.v4.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator
-keepclassmembers class android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator {
}

-keep class android.support.v4.app.ActivityCompat
-keepclassmembers class android.support.v4.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** postponeEnterTransition(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class android.support.v4.app.NotificationCompat$Action
-keepclassmembers class android.support.v4.app.NotificationCompat$Action {
   <init>(...);
   <init>(...);
   *** getActionIntent(...);
   *** getAllowGeneratedReplies(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getSemanticAction(...);
   *** getShowsUserInterface(...);
   *** getTitle(...);
   *** getDataOnlyRemoteInputs(...);
   *** getRemoteInputs(...);
}

-keep class android.support.v4.app.NotificationCompat
-keepclassmembers class android.support.v4.app.NotificationCompat {
   <init>(...);
   *** getAction(...);
   *** getActionCount(...);
   *** getBadgeIconType(...);
   *** getCategory(...);
   *** getChannelId(...);
   *** getContentTitle(...);
   *** getExtras(...);
   *** getGroup(...);
   *** getGroupAlertBehavior(...);
   *** getInvisibleActions(...);
   *** getLocalOnly(...);
   *** getShortcutId(...);
   *** getSortKey(...);
   *** getTimeoutAfter(...);
   *** isGroupSummary(...);
}

-keep class android.support.v4.app.RemoteInput
-keepclassmembers class android.support.v4.app.RemoteInput {
   *** getAllowFreeFormInput(...);
   *** getAllowedDataTypes(...);
   *** getExtras(...);
   *** isDataOnly(...);
   *** getLabel(...);
   *** getResultKey(...);
   *** addDataResultToIntent(...);
   *** addResultsToIntent(...);
   *** getChoices(...);
   *** getDataResultsFromIntent(...);
   *** getResultsFromIntent(...);
}

-keep class android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
}

-keep class android.support.v4.app.TaskStackBuilder$SupportParentable
-keepclassmembers class android.support.v4.app.TaskStackBuilder$SupportParentable {
}

-keep class android.support.v4.app.TaskStackBuilder
-keepclassmembers class android.support.v4.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class android.support.v4.text.PrecomputedTextCompat$Params
-keepclassmembers class android.support.v4.text.PrecomputedTextCompat$Params {
   *** getBreakStrategy(...);
   *** getHyphenationFrequency(...);
   *** getTextDirection(...);
   *** getTextPaint(...);
}

-keep class android.support.v4.text.PrecomputedTextCompat
-keepclassmembers class android.support.v4.text.PrecomputedTextCompat {
   *** getParagraphCount(...);
   *** charAt(...);
   *** create(...);
   *** getParagraphEnd(...);
   *** getParagraphStart(...);
   *** getParams(...);
   *** getSpanEnd(...);
   *** getSpanFlags(...);
   *** getSpanStart(...);
   *** getSpans(...);
   *** getTextFuture(...);
   *** length(...);
   *** nextSpanTransition(...);
   *** removeSpan(...);
   *** setSpan(...);
   *** subSequence(...);
}

# ACW for Xamarin.Android.Support.CoordinaterLayout
-keep class android.support.design.widget.CoordinatorLayout
-keepclassmembers class android.support.design.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.Android.Support.Core.UI
-keep class android.support.v4.app.ActionBarDrawerToggle
-keepclassmembers class android.support.v4.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

# ACW for Xamarin.Android.Support.Core.Utils
# ACW for Xamarin.Android.Support.CursorAdapter
# ACW for Xamarin.Android.Support.CustomTabs
# ACW for Xamarin.Android.Support.CustomView
# ACW for Xamarin.Android.Support.Design
-keep class android.support.design.widget.TabLayout$TabView
-keepclassmembers class android.support.design.widget.TabLayout$TabView {
   *** setSelected(...);
   <init>(...);
   *** getTab(...);
   *** onMeasure(...);
}

-keep class android.support.design.widget.TabLayout$BaseOnTabSelectedListener
-keepclassmembers class android.support.design.widget.TabLayout$BaseOnTabSelectedListener {
}

-keep class mono.android.support.design.widget.TabLayout_BaseOnTabSelectedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.TabLayout_BaseOnTabSelectedListenerImplementor {
}

-keep class android.support.design.widget.TabLayout$Tab
-keepclassmembers class android.support.design.widget.TabLayout$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** isSelected(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.design.widget.TabLayout
-keepclassmembers class android.support.design.widget.TabLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasUnboundedRipple(...);
   *** isInlineLabel(...);
   *** setInlineLabel(...);
   *** getSelectedTabPosition(...);
   *** getTabCount(...);
   *** getTabGravity(...);
   *** setTabGravity(...);
   *** getTabIconTint(...);
   *** setTabIconTint(...);
   *** isTabIndicatorFullWidth(...);
   *** setTabIndicatorFullWidth(...);
   *** getTabIndicatorGravity(...);
   *** getTabMode(...);
   *** setTabMode(...);
   *** getTabRippleColor(...);
   *** setTabRippleColor(...);
   *** getTabSelectedIndicator(...);
   *** getTabTextColors(...);
   *** setTabTextColors(...);
   *** addOnTabSelectedListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** clearOnTabSelectedListeners(...);
   *** createTabFromPool(...);
   *** getTabAt(...);
   *** newTab(...);
   *** releaseFromTabPool(...);
   *** removeAllTabs(...);
   *** removeOnTabSelectedListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** setInlineLabelResource(...);
   *** setOnTabSelectedListener(...);
   *** setScrollPosition(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicatorColor(...);
   *** setSelectedTabIndicatorGravity(...);
   *** setSelectedTabIndicatorHeight(...);
   *** setTabIconTintResource(...);
   *** setTabRippleColorResource(...);
   *** setTabTextColors(...);
   *** setTabsFromPagerAdapter(...);
   *** setUnboundedRipple(...);
   *** setUnboundedRippleResource(...);
   *** setupWithViewPager(...);
   *** setupWithViewPager(...);
}

-keep class android.support.design.widget.AppBarLayout$LayoutParams
-keepclassmembers class android.support.design.widget.AppBarLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getScrollFlags(...);
   *** setScrollFlags(...);
   *** getScrollInterpolator(...);
   *** setScrollInterpolator(...);
}

-keep class android.support.design.widget.AppBarLayout$OnOffsetChangedListener
-keepclassmembers class android.support.design.widget.AppBarLayout$OnOffsetChangedListener {
}

-keep class mono.android.support.design.widget.AppBarLayout_OnOffsetChangedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.AppBarLayout_OnOffsetChangedListenerImplementor {
}

-keep class android.support.design.widget.AppBarLayout
-keepclassmembers class android.support.design.widget.AppBarLayout {
   <init>(...);
   <init>(...);
   *** isLiftOnScroll(...);
   *** setLiftOnScroll(...);
   *** getMinimumHeightForVisibleOverlappingContent(...);
   *** getTargetElevation(...);
   *** setTargetElevation(...);
   *** getTotalScrollRange(...);
   *** addOnOffsetChangedListener(...);
   *** removeOnOffsetChangedListener(...);
   *** setExpanded(...);
   *** setExpanded(...);
   *** setLiftable(...);
   *** setLifted(...);
}

-keep class android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class android.support.design.widget.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemReselectedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemReselectedListenerImplementor {
}

-keep class android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class android.support.design.widget.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.BottomNavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class android.support.design.widget.BottomNavigationView
-keepclassmembers class android.support.design.widget.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** inflateMenu(...);
   *** setItemIconSizeRes(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class android.support.design.widget.BottomSheetDialog
-keepclassmembers class android.support.design.widget.BottomSheetDialog {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.design.widget.NavigationView$OnNavigationItemSelectedListener
-keepclassmembers class android.support.design.widget.NavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.android.support.design.widget.NavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.android.support.design.widget.NavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class android.support.design.widget.NavigationView
-keepclassmembers class android.support.design.widget.NavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCheckedItem(...);
   *** setCheckedItem(...);
   *** getHeaderCount(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemHorizontalPadding(...);
   *** setItemHorizontalPadding(...);
   *** getItemIconPadding(...);
   *** setItemIconPadding(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getMenu(...);
   *** addHeaderView(...);
   *** getHeaderView(...);
   *** inflateHeaderView(...);
   *** inflateMenu(...);
   *** removeHeaderView(...);
   *** setCheckedItem(...);
   *** setItemBackgroundResource(...);
   *** setItemHorizontalPaddingResource(...);
   *** setItemIconPaddingResource(...);
   *** setItemTextAppearance(...);
   *** setNavigationItemSelectedListener(...);
}

-keep class android.support.design.internal.BottomNavigationItemView
-keepclassmembers class android.support.design.internal.BottomNavigationItemView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getItemData(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class android.support.design.internal.BottomNavigationMenuView
-keepclassmembers class android.support.design.internal.BottomNavigationMenuView {
   <init>(...);
   <init>(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getSelectedItemId(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** initialize(...);
   *** onLayout(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class android.support.design.internal.BottomNavigationPresenter
-keepclassmembers class android.support.design.internal.BottomNavigationPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setBottomNavigationMenuView(...);
   *** setCallback(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

-keep class android.support.design.internal.ScrimInsetsFrameLayout
-keepclassmembers class android.support.design.internal.ScrimInsetsFrameLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onInsetsChanged(...);
}

# ACW for Xamarin.Android.Support.DocumentFile
# ACW for Xamarin.Android.Support.DrawerLayout
-keep class android.support.v4.widget.DrawerLayout$DrawerListener
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerListener {
}

-keep class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class android.support.v4.widget.DrawerLayout$LayoutParams
-keepclassmembers class android.support.v4.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v4.widget.DrawerLayout
-keepclassmembers class android.support.v4.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.Android.Support.Fragment
-keep class android.support.v4.app.FragmentActivity
-keepclassmembers class android.support.v4.app.FragmentActivity {
   <init>(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getLifecycle(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** getViewModelStore(...);
   *** onAttachFragment(...);
   *** onPrepareOptionsPanel(...);
   *** onResumeFragments(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class android.support.v4.app.Fragment$SavedState
-keepclassmembers class android.support.v4.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.app.Fragment
-keepclassmembers class android.support.v4.app.Fragment {
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class android.support.v4.app.FragmentManager$BackStackEntry
-keepclassmembers class android.support.v4.app.FragmentManager$BackStackEntry {
}

-keep class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class android.support.v4.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class android.support.v4.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class android.support.v4.app.FragmentPagerAdapter
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter {
   <init>(...);
   *** getItem(...);
   *** getItemId(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.app.FragmentPagerAdapter
-keepclassmembers class android.support.v4.app.FragmentPagerAdapter {
   *** getItem(...);
   *** getCount(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

# ACW for Xamarin.Android.Support.Interpolator
# ACW for Xamarin.Android.Support.Loader
-keep class android.support.v4.content.Loader$OnLoadCanceledListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCanceledListener {
}

-keep class android.support.v4.content.Loader$OnLoadCompleteListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCompleteListener {
}

-keep class android.support.v4.content.Loader
-keepclassmembers class android.support.v4.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class android.support.v4.app.LoaderManager$LoaderCallbacks
-keepclassmembers class android.support.v4.app.LoaderManager$LoaderCallbacks {
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.Android.Support.LocalBroadcastManager
# ACW for Xamarin.Android.Support.Media.Compat
-keep class android.support.v4.media.MediaBrowserCompat$ConnectionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ConnectionCallback {
   <init>(...);
   *** onConnected(...);
   *** onConnectionFailed(...);
   *** onConnectionSuspended(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CustomActionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CustomActionCallback {
   <init>(...);
   *** onError(...);
   *** onProgressUpdate(...);
   *** onResult(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$CustomActionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$CustomActionCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$ItemCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ItemCallback {
   <init>(...);
   *** onError(...);
   *** onItemLoaded(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$ItemCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$ItemCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$MediaItem
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$MediaItem {
   <init>(...);
   *** getDescription(...);
   *** getFlags(...);
   *** isBrowsable(...);
   *** isPlayable(...);
   *** getMediaId(...);
   *** describeContents(...);
   *** fromMediaItem(...);
   *** fromMediaItemList(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SearchCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SearchCallback {
   <init>(...);
   *** onError(...);
   *** onSearchResult(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SearchCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SearchCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback {
   <init>(...);
   *** onChildrenLoaded(...);
   *** onChildrenLoaded(...);
   *** onError(...);
   *** onError(...);
}

-keep class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
-keepclassmembers class android.support.v4.media.MediaBrowserCompat$SubscriptionCallback {
}

-keep class android.support.v4.media.MediaBrowserCompat
-keepclassmembers class android.support.v4.media.MediaBrowserCompat {
   <init>(...);
   *** getExtras(...);
   *** isConnected(...);
   *** getNotifyChildrenChangedOptions(...);
   *** getRoot(...);
   *** getServiceComponent(...);
   *** getSessionToken(...);
   *** connect(...);
   *** disconnect(...);
   *** getItem(...);
   *** search(...);
   *** sendCustomAction(...);
   *** subscribe(...);
   *** subscribe(...);
   *** unsubscribe(...);
   *** unsubscribe(...);
}

-keep class android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot {
   <init>(...);
   *** getExtras(...);
   *** getRootId(...);
}

-keep class android.support.v4.media.MediaBrowserServiceCompat$Result
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat$Result {
   *** detach(...);
   *** sendError(...);
   *** sendProgressUpdate(...);
   *** sendResult(...);
}

-keep class android.support.v4.media.MediaBrowserServiceCompat
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat {
   <init>(...);
   *** getBrowserRootHints(...);
   *** getCurrentBrowserInfo(...);
   *** getSessionToken(...);
   *** setSessionToken(...);
   *** attachToBaseContext(...);
   *** dump(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** notifyChildrenChanged(...);
   *** onBind(...);
   *** onCustomAction(...);
   *** onGetRoot(...);
   *** onLoadChildren(...);
   *** onLoadChildren(...);
   *** onLoadItem(...);
   *** onSearch(...);
   *** onSubscribe(...);
   *** onUnsubscribe(...);
}

-keep class android.support.v4.media.MediaBrowserServiceCompat
-keepclassmembers class android.support.v4.media.MediaBrowserServiceCompat {
   *** onGetRoot(...);
   *** onLoadChildren(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat$Builder
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat$Builder {
   <init>(...);
   *** build(...);
   *** setDescription(...);
   *** setExtras(...);
   *** setIconBitmap(...);
   *** setIconUri(...);
   *** setMediaId(...);
   *** setMediaUri(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v4.media.MediaDescriptionCompat
-keepclassmembers class android.support.v4.media.MediaDescriptionCompat {
   *** getDescription(...);
   *** getExtras(...);
   *** getIconBitmap(...);
   *** getIconUri(...);
   *** getMediaDescription(...);
   *** getMediaId(...);
   *** getMediaUri(...);
   *** getSubtitle(...);
   *** getTitle(...);
   *** describeContents(...);
   *** fromMediaDescription(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaMetadataCompat
-keepclassmembers class android.support.v4.media.MediaMetadataCompat {
   *** getBundle(...);
   *** getDescription(...);
   *** getMediaMetadata(...);
   *** containsKey(...);
   *** describeContents(...);
   *** fromMediaMetadata(...);
   *** getBitmap(...);
   *** getLong(...);
   *** getRating(...);
   *** getString(...);
   *** getText(...);
   *** keySet(...);
   *** size(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.MediaSessionManager$RemoteUserInfo
-keepclassmembers class android.support.v4.media.MediaSessionManager$RemoteUserInfo {
   <init>(...);
   <init>(...);
   *** getPackageName(...);
   *** getPid(...);
   *** getUid(...);
}

-keep class android.support.v4.media.MediaSessionManager
-keepclassmembers class android.support.v4.media.MediaSessionManager {
   *** getSessionManager(...);
   *** isTrustedForMediaControl(...);
}

-keep class android.support.v4.media.RatingCompat
-keepclassmembers class android.support.v4.media.RatingCompat {
   *** hasHeart(...);
   *** isRated(...);
   *** isThumbUp(...);
   *** getPercentRating(...);
   *** getRating(...);
   *** getRatingStyle(...);
   *** getStarRating(...);
   *** describeContents(...);
   *** fromRating(...);
   *** newHeartRating(...);
   *** newPercentageRating(...);
   *** newStarRating(...);
   *** newThumbRating(...);
   *** newUnratedRating(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.VolumeProviderCompat$Callback
-keepclassmembers class android.support.v4.media.VolumeProviderCompat$Callback {
   <init>(...);
   *** onVolumeChanged(...);
}

-keep class android.support.v4.media.VolumeProviderCompat$Callback
-keepclassmembers class android.support.v4.media.VolumeProviderCompat$Callback {
   *** onVolumeChanged(...);
}

-keep class android.support.v4.media.VolumeProviderCompat
-keepclassmembers class android.support.v4.media.VolumeProviderCompat {
   <init>(...);
   *** getCurrentVolume(...);
   *** setCurrentVolume(...);
   *** getMaxVolume(...);
   *** getVolumeControl(...);
   *** getVolumeProvider(...);
   *** onAdjustVolume(...);
   *** onSetVolumeTo(...);
   *** setCallback(...);
}

-keep class android.support.v4.media.VolumeProviderCompat
-keepclassmembers class android.support.v4.media.VolumeProviderCompat {
}

-keep class android.support.v4.media.session.IMediaControllerCallback
-keepclassmembers class android.support.v4.media.session.IMediaControllerCallback {
}

-keep class android.support.v4.media.session.IMediaSession
-keepclassmembers class android.support.v4.media.session.IMediaSession {
}

-keep class android.support.v4.media.session.MediaButtonReceiver
-keepclassmembers class android.support.v4.media.session.MediaButtonReceiver {
   <init>(...);
   *** buildMediaButtonPendingIntent(...);
   *** buildMediaButtonPendingIntent(...);
   *** getMediaButtonReceiverComponent(...);
   *** handleIntent(...);
   *** onReceive(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
   <init>(...);
   *** getIControllerCallback(...);
   *** binderDied(...);
   *** onAudioInfoChanged(...);
   *** onCaptioningEnabledChanged(...);
   *** onExtrasChanged(...);
   *** onMetadataChanged(...);
   *** onPlaybackStateChanged(...);
   *** onQueueChanged(...);
   *** onQueueTitleChanged(...);
   *** onRepeatModeChanged(...);
   *** onSessionDestroyed(...);
   *** onSessionEvent(...);
   *** onSessionReady(...);
   *** onShuffleModeChanged(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$Callback {
}

-keep class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$PlaybackInfo {
   *** getAudioStream(...);
   *** getCurrentVolume(...);
   *** getMaxVolume(...);
   *** getPlaybackType(...);
   *** getVolumeControl(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat$TransportControls
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$TransportControls {
   *** fastForward(...);
   *** pause(...);
   *** play(...);
   *** playFromMediaId(...);
   *** playFromSearch(...);
   *** playFromUri(...);
   *** prepare(...);
   *** prepareFromMediaId(...);
   *** prepareFromSearch(...);
   *** prepareFromUri(...);
   *** rewind(...);
   *** seekTo(...);
   *** sendCustomAction(...);
   *** sendCustomAction(...);
   *** setCaptioningEnabled(...);
   *** setRating(...);
   *** setRating(...);
   *** setRepeatMode(...);
   *** setShuffleMode(...);
   *** skipToNext(...);
   *** skipToPrevious(...);
   *** skipToQueueItem(...);
   *** stop(...);
}

-keep class android.support.v4.media.session.MediaControllerCompat
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat {
   <init>(...);
   <init>(...);
   *** getExtras(...);
   *** getFlags(...);
   *** isCaptioningEnabled(...);
   *** isSessionReady(...);
   *** getMediaController(...);
   *** getMetadata(...);
   *** getPackageName(...);
   *** getPlaybackState(...);
   *** getQueue(...);
   *** getQueueTitle(...);
   *** getRatingType(...);
   *** getRepeatMode(...);
   *** getSessionActivity(...);
   *** getSessionToken(...);
   *** getSessionToken2Bundle(...);
   *** getShuffleMode(...);
   *** addQueueItem(...);
   *** addQueueItem(...);
   *** adjustVolume(...);
   *** dispatchMediaButtonEvent(...);
   *** getMediaController(...);
   *** getPlaybackInfo(...);
   *** getTransportControls(...);
   *** registerCallback(...);
   *** registerCallback(...);
   *** removeQueueItem(...);
   *** removeQueueItemAt(...);
   *** sendCommand(...);
   *** setMediaController(...);
   *** setVolumeTo(...);
   *** unregisterCallback(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
   <init>(...);
   *** onAddQueueItem(...);
   *** onAddQueueItem(...);
   *** onCommand(...);
   *** onCustomAction(...);
   *** onFastForward(...);
   *** onMediaButtonEvent(...);
   *** onPause(...);
   *** onPlay(...);
   *** onPlayFromMediaId(...);
   *** onPlayFromSearch(...);
   *** onPlayFromUri(...);
   *** onPrepare(...);
   *** onPrepareFromMediaId(...);
   *** onPrepareFromSearch(...);
   *** onPrepareFromUri(...);
   *** onRemoveQueueItem(...);
   *** onRemoveQueueItemAt(...);
   *** onRewind(...);
   *** onSeekTo(...);
   *** onSetCaptioningEnabled(...);
   *** onSetRating(...);
   *** onSetRating(...);
   *** onSetRepeatMode(...);
   *** onSetShuffleMode(...);
   *** onSkipToNext(...);
   *** onSkipToPrevious(...);
   *** onSkipToQueueItem(...);
   *** onStop(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Callback
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Callback {
}

-keep class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener {
}

-keep class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.media.session.MediaSessionCompat_OnActiveChangeListenerImplementor {
}

-keep class android.support.v4.media.session.MediaSessionCompat$QueueItem
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$QueueItem {
   <init>(...);
   *** getDescription(...);
   *** getQueueId(...);
   *** describeContents(...);
   *** fromQueueItem(...);
   *** fromQueueItemList(...);
   *** getQueueItem(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat$Token
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token {
   *** getExtraBinder(...);
   *** setExtraBinder(...);
   *** getSessionToken2Bundle(...);
   *** setSessionToken2Bundle(...);
   *** describeContents(...);
   *** fromBundle(...);
   *** fromToken(...);
   *** fromToken(...);
   *** getToken(...);
   *** toBundle(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.MediaSessionCompat
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isActive(...);
   *** setActive(...);
   *** getCallingPackage(...);
   *** getController(...);
   *** getCurrentControllerInfo(...);
   *** getMediaSession(...);
   *** getRemoteControlClient(...);
   *** getSessionToken(...);
   *** addOnActiveChangeListener(...);
   *** ensureClassLoader(...);
   *** fromMediaSession(...);
   *** release(...);
   *** removeOnActiveChangeListener(...);
   *** sendSessionEvent(...);
   *** setCallback(...);
   *** setCallback(...);
   *** setCaptioningEnabled(...);
   *** setExtras(...);
   *** setFlags(...);
   *** setMediaButtonReceiver(...);
   *** setMetadata(...);
   *** setPlaybackState(...);
   *** setPlaybackToLocal(...);
   *** setPlaybackToRemote(...);
   *** setQueue(...);
   *** setQueueTitle(...);
   *** setRatingType(...);
   *** setRepeatMode(...);
   *** setSessionActivity(...);
   *** setShuffleMode(...);
}

-keep class android.support.v4.media.session.ParcelableVolumeInfo
-keepclassmembers class android.support.v4.media.session.ParcelableVolumeInfo {
   <init>(...);
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat$CustomAction
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat$CustomAction {
   *** getAction(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getName(...);
   *** describeContents(...);
   *** fromCustomAction(...);
   *** getCustomAction(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.media.session.PlaybackStateCompat
-keepclassmembers class android.support.v4.media.session.PlaybackStateCompat {
   *** getActions(...);
   *** getActiveQueueItemId(...);
   *** getBufferedPosition(...);
   *** getCustomActions(...);
   *** getErrorCode(...);
   *** getErrorMessage(...);
   *** getExtras(...);
   *** getLastPositionUpdateTime(...);
   *** getPlaybackSpeed(...);
   *** getPlaybackState(...);
   *** getPosition(...);
   *** getState(...);
   *** describeContents(...);
   *** fromPlaybackState(...);
   *** getCurrentPosition(...);
   *** toKeyCode(...);
   *** writeToParcel(...);
}

# ACW for Xamarin.Android.Support.Print
# ACW for Xamarin.Android.Support.SlidingPaneLayout
# ACW for Xamarin.Android.Support.SwipeRefreshLayout
-keep class android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.android.support.v4.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class android.support.v4.widget.SwipeRefreshLayout
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
}

# ACW for Xamarin.Android.Support.Transition
# ACW for Xamarin.Android.Support.v17.Leanback
-keep class android.support.v17.leanback.widget.BaseGridView
-keepclassmembers class android.support.v17.leanback.widget.BaseGridView {
   *** getExtraLayoutSpace(...);
   *** setExtraLayoutSpace(...);
   *** isFocusDrawingOrderEnabled(...);
   *** setFocusDrawingOrderEnabled(...);
   *** getFocusScrollStrategy(...);
   *** setFocusScrollStrategy(...);
   *** isFocusSearchDisabled(...);
   *** setFocusSearchDisabled(...);
   *** getHorizontalMargin(...);
   *** setHorizontalMargin(...);
   *** getHorizontalSpacing(...);
   *** setHorizontalSpacing(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isChildLayoutAnimated(...);
   *** getItemAlignmentOffset(...);
   *** setItemAlignmentOffset(...);
   *** getItemAlignmentOffsetPercent(...);
   *** setItemAlignmentOffsetPercent(...);
   *** isItemAlignmentOffsetWithPadding(...);
   *** setItemAlignmentOffsetWithPadding(...);
   *** getItemAlignmentViewId(...);
   *** setItemAlignmentViewId(...);
   *** getSaveChildrenLimitNumber(...);
   *** setSaveChildrenLimitNumber(...);
   *** getSaveChildrenPolicy(...);
   *** setSaveChildrenPolicy(...);
   *** isScrollEnabled(...);
   *** setScrollEnabled(...);
   *** getSelectedPosition(...);
   *** setSelectedPosition(...);
   *** getSelectedSubPosition(...);
   *** getVerticalMargin(...);
   *** setVerticalMargin(...);
   *** getVerticalSpacing(...);
   *** setVerticalSpacing(...);
   *** getWindowAlignment(...);
   *** setWindowAlignment(...);
   *** getWindowAlignmentOffset(...);
   *** setWindowAlignmentOffset(...);
   *** getWindowAlignmentOffsetPercent(...);
   *** setWindowAlignmentOffsetPercent(...);
   *** isWindowAlignmentPreferKeyLineOverHighEdge(...);
   *** setWindowAlignmentPreferKeyLineOverHighEdge(...);
   *** isWindowAlignmentPreferKeyLineOverLowEdge(...);
   *** setWindowAlignmentPreferKeyLineOverLowEdge(...);
   *** addOnChildViewHolderSelectedListener(...);
   *** animateIn(...);
   *** animateOut(...);
   *** getChildDrawingOrder(...);
   *** getViewSelectedOffsets(...);
   *** hasPreviousViewInSameRow(...);
   *** onRequestFocusInDescendants(...);
   *** removeOnChildViewHolderSelectedListener(...);
   *** setAnimateChildLayout(...);
   *** setChildrenVisibility(...);
   *** setGravity(...);
   *** setItemMargin(...);
   *** setItemSpacing(...);
   *** setLayoutEnabled(...);
   *** setOnChildLaidOutListener(...);
   *** setOnChildSelectedListener(...);
   *** setOnChildViewHolderSelectedListener(...);
   *** setPruneChild(...);
   *** setSelectedPosition(...);
   *** setSelectedPosition(...);
   *** setSelectedPositionSmooth(...);
   *** setSelectedPositionSmooth(...);
   *** setSelectedPositionSmoothWithSub(...);
   *** setSelectedPositionWithSub(...);
   *** setSelectedPositionWithSub(...);
}

-keep class android.support.v17.leanback.widget.BaseGridView
-keepclassmembers class android.support.v17.leanback.widget.BaseGridView {
}

-keep class android.support.v17.leanback.widget.HorizontalGridView
-keepclassmembers class android.support.v17.leanback.widget.HorizontalGridView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getFadingLeftEdge(...);
   *** setFadingLeftEdge(...);
   *** getFadingLeftEdgeLength(...);
   *** setFadingLeftEdgeLength(...);
   *** getFadingLeftEdgeOffset(...);
   *** setFadingLeftEdgeOffset(...);
   *** getFadingRightEdge(...);
   *** setFadingRightEdge(...);
   *** getFadingRightEdgeLength(...);
   *** setFadingRightEdgeLength(...);
   *** getFadingRightEdgeOffset(...);
   *** setFadingRightEdgeOffset(...);
   *** initAttributes(...);
   *** setNumRows(...);
   *** setRowHeight(...);
}

-keep class android.support.v17.leanback.widget.OnChildLaidOutListener
-keepclassmembers class android.support.v17.leanback.widget.OnChildLaidOutListener {
}

-keep class mono.android.support.v17.leanback.widget.OnChildLaidOutListenerImplementor
-keepclassmembers class mono.android.support.v17.leanback.widget.OnChildLaidOutListenerImplementor {
}

-keep class android.support.v17.leanback.widget.OnChildSelectedListener
-keepclassmembers class android.support.v17.leanback.widget.OnChildSelectedListener {
}

-keep class mono.android.support.v17.leanback.widget.OnChildSelectedListenerImplementor
-keepclassmembers class mono.android.support.v17.leanback.widget.OnChildSelectedListenerImplementor {
}

-keep class android.support.v17.leanback.widget.ViewHolderTask
-keepclassmembers class android.support.v17.leanback.widget.ViewHolderTask {
}

-keep class android.support.v17.leanback.widget.OnChildViewHolderSelectedListener
-keepclassmembers class android.support.v17.leanback.widget.OnChildViewHolderSelectedListener {
   <init>(...);
   *** onChildViewHolderSelected(...);
   *** onChildViewHolderSelectedAndPositioned(...);
}

-keep class android.support.v17.leanback.widget.OnChildViewHolderSelectedListener
-keepclassmembers class android.support.v17.leanback.widget.OnChildViewHolderSelectedListener {
}

# ACW for Xamarin.Android.Support.v4
# ACW for Xamarin.Android.Support.v7.AppCompat
-keep class android.support.v7.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class android.support.v7.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class android.support.v7.content.res.AppCompatResources
-keepclassmembers class android.support.v7.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

-keep class android.support.v7.app.ActionBar$LayoutParams
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v7.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class android.support.v7.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.android.support.v7.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.android.support.v7.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class android.support.v7.app.ActionBar$OnNavigationListener
-keepclassmembers class android.support.v7.app.ActionBar$OnNavigationListener {
}

-keep class android.support.v7.app.ActionBar$Tab
-keepclassmembers class android.support.v7.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.v7.app.ActionBar$Tab
-keepclassmembers class android.support.v7.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.v7.app.ActionBar$TabListener
-keepclassmembers class android.support.v7.app.ActionBar$TabListener {
}

-keep class android.support.v7.app.ActionBar
-keepclassmembers class android.support.v7.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class android.support.v7.app.ActionBar
-keepclassmembers class android.support.v7.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class android.support.v7.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle$Delegate {
}

-keep class android.support.v7.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class android.support.v7.app.ActionBarDrawerToggle
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class android.support.v7.app.AppCompatActivity
-keepclassmembers class android.support.v7.app.AppCompatActivity {
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onMenuItemSelected(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class android.support.v7.app.AppCompatDelegate
-keepclassmembers class android.support.v7.app.AppCompatDelegate {
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class android.support.v7.app.AppCompatDelegate
-keepclassmembers class android.support.v7.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class android.support.v7.app.AppCompatDialog
-keepclassmembers class android.support.v7.app.AppCompatDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getSupportActionBar(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onWindowStartingSupportActionMode(...);
   *** supportRequestWindowFeature(...);
}

-keep class android.support.v7.app.AppCompatCallback
-keepclassmembers class android.support.v7.app.AppCompatCallback {
}

-keep class android.support.v7.widget.Toolbar$LayoutParams
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v7.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class android.support.v7.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.android.support.v7.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class android.support.v7.widget.Toolbar
-keepclassmembers class android.support.v7.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** onLayout(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class android.support.v7.widget.AppCompatAutoCompleteTextView
-keepclassmembers class android.support.v7.widget.AppCompatAutoCompleteTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
}

-keep class android.support.v7.widget.AppCompatButton
-keepclassmembers class android.support.v7.widget.AppCompatButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** setSupportAllCaps(...);
}

-keep class android.support.v7.widget.AppCompatImageButton
-keepclassmembers class android.support.v7.widget.AppCompatImageButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class android.support.v7.widget.AppCompatRadioButton
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class android.support.v7.widget.DecorToolbar
-keepclassmembers class android.support.v7.widget.DecorToolbar {
}

-keep class android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class android.support.v7.widget.ScrollingTabContainerView
-keepclassmembers class android.support.v7.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class android.support.v7.widget.SwitchCompat
-keepclassmembers class android.support.v7.widget.SwitchCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getShowText(...);
   *** setShowText(...);
   *** getSplitTrack(...);
   *** setSplitTrack(...);
   *** getSwitchMinWidth(...);
   *** setSwitchMinWidth(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
   *** getTextOff(...);
   *** setTextOff(...);
   *** getTextOn(...);
   *** setTextOn(...);
   *** getThumbDrawable(...);
   *** setThumbDrawable(...);
   *** getThumbTextPadding(...);
   *** setThumbTextPadding(...);
   *** getThumbTintList(...);
   *** setThumbTintList(...);
   *** getThumbTintMode(...);
   *** setThumbTintMode(...);
   *** getTrackDrawable(...);
   *** setTrackDrawable(...);
   *** getTrackTintList(...);
   *** setTrackTintList(...);
   *** getTrackTintMode(...);
   *** setTrackTintMode(...);
   *** onMeasure(...);
   *** setSwitchTextAppearance(...);
   *** setSwitchTypeface(...);
   *** setSwitchTypeface(...);
   *** setThumbResource(...);
   *** setTrackResource(...);
}

-keep class android.support.v7.view.ActionMode$Callback
-keepclassmembers class android.support.v7.view.ActionMode$Callback {
}

-keep class android.support.v7.view.ActionMode
-keepclassmembers class android.support.v7.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v7.view.ActionMode
-keepclassmembers class android.support.v7.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v7.view.menu.MenuBuilder$Callback
-keepclassmembers class android.support.v7.view.menu.MenuBuilder$Callback {
}

-keep class android.support.v7.view.menu.MenuBuilder
-keepclassmembers class android.support.v7.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class android.support.v7.view.menu.MenuPresenter$Callback
-keepclassmembers class android.support.v7.view.menu.MenuPresenter$Callback {
}

-keep class android.support.v7.view.menu.MenuPresenter
-keepclassmembers class android.support.v7.view.menu.MenuPresenter {
}

-keep class android.support.v7.view.menu.MenuView$ItemView
-keepclassmembers class android.support.v7.view.menu.MenuView$ItemView {
}

-keep class android.support.v7.view.menu.MenuView
-keepclassmembers class android.support.v7.view.menu.MenuView {
}

-keep class android.support.v7.view.menu.MenuItemImpl
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class android.support.v7.view.menu.SubMenuBuilder
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.Android.Support.v7.CardView
-keep class android.support.v7.widget.CardView
-keepclassmembers class android.support.v7.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

# ACW for Xamarin.Android.Support.v7.MediaRouter
# ACW for Xamarin.Android.Support.v7.Palette
# ACW for Xamarin.Android.Support.v7.RecyclerView
-keep class android.support.v7.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class android.support.v7.widget.GridLayoutManager$SpanSizeLookup {
   <init>(...);
   *** isSpanIndexCacheEnabled(...);
   *** setSpanIndexCacheEnabled(...);
   *** getSpanGroupIndex(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
   *** invalidateSpanIndexCache(...);
}

-keep class android.support.v7.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class android.support.v7.widget.GridLayoutManager$SpanSizeLookup {
   *** getSpanSize(...);
}

-keep class android.support.v7.widget.GridLayoutManager
-keepclassmembers class android.support.v7.widget.GridLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** getSpanSizeLookup(...);
   *** setSpanSizeLookup(...);
}

-keep class android.support.v7.widget.LinearLayoutManager
-keepclassmembers class android.support.v7.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class android.support.v7.widget.LinearSmoothScroller
-keepclassmembers class android.support.v7.widget.LinearSmoothScroller {
   <init>(...);
   *** getHorizontalSnapPreference(...);
   *** getVerticalSnapPreference(...);
   *** calculateDtToFit(...);
   *** calculateDxToMakeVisible(...);
   *** calculateDyToMakeVisible(...);
   *** calculateSpeedPerPixel(...);
   *** calculateTimeForDeceleration(...);
   *** calculateTimeForScrolling(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** updateActionForInterimTarget(...);
}

-keep class android.support.v7.widget.LinearSnapHelper
-keepclassmembers class android.support.v7.widget.LinearSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class android.support.v7.widget.OrientationHelper
-keepclassmembers class android.support.v7.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getLayoutManager(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getTotalSpaceChange(...);
   *** createHorizontalHelper(...);
   *** createOrientationHelper(...);
   *** createVerticalHelper(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
   *** onLayoutComplete(...);
}

-keep class android.support.v7.widget.OrientationHelper
-keepclassmembers class android.support.v7.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
}

-keep class android.support.v7.widget.PagerSnapHelper
-keepclassmembers class android.support.v7.widget.PagerSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class android.support.v7.widget.RecyclerView$Adapter
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class android.support.v7.widget.RecyclerView$Adapter
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class android.support.v7.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
}

-keep class android.support.v7.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObserver {
}

-keep class android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class android.support.v7.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class android.support.v7.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemAnimator
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemDecoration
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class android.support.v7.widget.RecyclerView$ItemDecoration
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemDecoration {
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$LayoutManager
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class android.support.v7.widget.RecyclerView$LayoutParams
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.android.support.v7.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class android.support.v7.widget.RecyclerView$OnFlingListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class android.support.v7.widget.RecyclerView$OnFlingListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class android.support.v7.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.android.support.v7.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class android.support.v7.widget.RecyclerView$OnScrollListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class android.support.v7.widget.RecyclerView$OnScrollListener
-keepclassmembers class android.support.v7.widget.RecyclerView$OnScrollListener {
}

-keep class android.support.v7.widget.RecyclerView$RecycledViewPool
-keepclassmembers class android.support.v7.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class android.support.v7.widget.RecyclerView$Recycler
-keepclassmembers class android.support.v7.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class android.support.v7.widget.RecyclerView$RecyclerListener
-keepclassmembers class android.support.v7.widget.RecyclerView$RecyclerListener {
}

-keep class mono.android.support.v7.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller$ScrollVectorProvider {
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class android.support.v7.widget.RecyclerView$SmoothScroller
-keepclassmembers class android.support.v7.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class android.support.v7.widget.RecyclerView$State
-keepclassmembers class android.support.v7.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewHolder
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class android.support.v7.widget.RecyclerView$ViewHolder
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder {
}

-keep class android.support.v7.widget.RecyclerView
-keepclassmembers class android.support.v7.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** swapAdapter(...);
}

-keep class android.support.v7.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

-keep class android.support.v7.widget.SnapHelper
-keepclassmembers class android.support.v7.widget.SnapHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** calculateDistanceToFinalSnap(...);
   *** calculateScrollDistance(...);
   *** createScroller(...);
   *** createSnapScroller(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
   *** onFling(...);
}

-keep class android.support.v7.widget.SnapHelper
-keepclassmembers class android.support.v7.widget.SnapHelper {
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class android.support.v7.widget.helper.ItemTouchUIUtil
-keepclassmembers class android.support.v7.widget.helper.ItemTouchUIUtil {
}

-keep class android.support.v7.widget.helper.ItemTouchHelper$Callback
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback {
   <init>(...);
   *** getBoundingBoxMargin(...);
   *** getDefaultUIUtil(...);
   *** isItemViewSwipeEnabled(...);
   *** isLongPressDragEnabled(...);
   *** canDropOver(...);
   *** chooseDropTarget(...);
   *** clearView(...);
   *** convertToAbsoluteDirection(...);
   *** convertToRelativeDirection(...);
   *** getAnimationDuration(...);
   *** getMoveThreshold(...);
   *** getMovementFlags(...);
   *** getSwipeEscapeVelocity(...);
   *** getSwipeThreshold(...);
   *** getSwipeVelocityThreshold(...);
   *** interpolateOutOfBoundsScroll(...);
   *** makeFlag(...);
   *** makeMovementFlags(...);
   *** onChildDraw(...);
   *** onChildDrawOver(...);
   *** onMove(...);
   *** onMoved(...);
   *** onSelectedChanged(...);
   *** onSwiped(...);
}

-keep class android.support.v7.widget.helper.ItemTouchHelper$Callback
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$Callback {
   *** getMovementFlags(...);
   *** onMove(...);
   *** onSwiped(...);
}

-keep class android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler {
}

-keep class android.support.v7.widget.helper.ItemTouchHelper
-keepclassmembers class android.support.v7.widget.helper.ItemTouchHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** onChildViewAttachedToWindow(...);
   *** onChildViewDetachedFromWindow(...);
   *** startDrag(...);
   *** startSwipe(...);
}

# ACW for Xamarin.Android.Support.Vector.Drawable
# ACW for Xamarin.Android.Support.VersionedParcelable
# ACW for Xamarin.Android.Support.ViewPager
-keep class android.support.v4.view.PagerAdapter
-keepclassmembers class android.support.v4.view.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class android.support.v4.view.PagerAdapter
-keepclassmembers class android.support.v4.view.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class android.support.v4.view.ViewPager$OnAdapterChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$OnAdapterChangeListener {
}

-keep class mono.android.support.v4.view.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class android.support.v4.view.ViewPager$OnPageChangeListener
-keepclassmembers class android.support.v4.view.ViewPager$OnPageChangeListener {
}

-keep class mono.android.support.v4.view.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ViewPager_OnPageChangeListenerImplementor {
}

-keep class android.support.v4.view.ViewPager$PageTransformer
-keepclassmembers class android.support.v4.view.ViewPager$PageTransformer {
}

-keep class android.support.v4.view.ViewPager
-keepclassmembers class android.support.v4.view.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.Forms.Core
# ACW for Xamarin.Forms.Platform.Android
# ACW for netstandard
